
@model ERPBO.Inventory.ViewModels.IQCItemReqInfoListViewModel

@{
    ViewBag.Title = "IQC Item Return";
}


<div class="row" style="margin-top:-15px">
    <div class="col-md-12">
        <div class="card card-gray-dark">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-3">

                    </div>
                    <div class="col-md-6">
                        <h5 class="text-center text-bold">
                            Create IQC Item Return
                        </h5>
                    </div>
                    <div class="col-md-3">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12" style="margin-top:-10px">
        <div class="card card-navy">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-8">
                        <h6 class="card-title">
                            IQC Item Return
                        </h6>
                    </div>
                    <div class="col-md-4">
                        <div class="input-group">
                            @*<label for="ddlIQCReqCode" class="control-label font-weight-bold">IQC Req Code  </label>*@
                            @Html.DropDownList("ddlIQCReqCode", (IEnumerable<SelectListItem>)ViewBag.ddlIQCReqCode, "--Select IQC Code--", new { @class = "form-control form-control-sm" })
                            <div class="input-group-append" style="cursor:pointer">
                                <a id="btnSubmitForIQCReturn" href="#" title="Submit Request" style="background-color:#2386b9" class="input-group-text">
                                    <i class="fas fa-paper-plane"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row" style="margin-top:-15px">
                    <div class="col-md-12" id="dataContainer">

                    </div>
                </div>
            </div>
        </div>
    </div>
    @*<div class="col-md-12" style="margin-top:-10px">
        <div class="card">
            <div class="row">
                <div class="col-md-12">

                </div>
                <div class="col-md-12">

                </div>
            </div>
        </div>
    </div>*@
</div>

@section scripts{
    <script type="text/javascript">
        var hdfRequisitionId = $("#hdfRequisitionId");
        var hdfRequisitionCode = $("#hdfRequisitionCode");
        var txtQty = $("#txtQty");
        var ddlIQCReqCode = $("#ddlIQCReqCode");
        var hdfWarehouse = $("#hdfWarehouse");
        var hdfModel = $("#hdfModel");
        var hdfIQC = $("#hdfIQC");
        var hdfSupplier = $("#hdfSupplier");
        var hdfRemarks = $("#hdfRemarks");
        var availableQty = $("#availableQty");

        ddlIQCReqCode.change(function () {
            LoadDataTableForIQCReturn();
        });

        function LoadDataTableForIQCReturn() {
            var data = { reqId: TryParseInt(ddlIQCReqCode.val(), 0) }
                $.when(getReqWithData('html', 'GET', '/Inventory/ReturnIQCItemReqData', data)).then(function (res, status) {
                    if (status == "success") {
                        $("#dataContainer").fadeOut('500', function () {
                            $("#dataContainer").empty();
                            $("#dataContainer").append(res).fadeIn('500');
                        });
                    }
                }).fail(function (err) { console.log(err); });           
        }

        function validateSubmit() {
            var isValid = true;
            if (ddlIQCReqCode.val() === "") {
                isValid = false;
                bootbox.alert("Please select a Action before submit");
            }
            if ($(".tblDataDetail tbody tr").length == 0) {
                isValid = false;
                bootbox.alert("Requistion details not found");
            }

            else {
                var description = ($(".tblInfo tbody tr").children('td').eq(6).html());
                //console.log(description);
                 // Server Side Checking //
                $.each($(".tblDataDetail tbody tr"), function (index, item) {
                    var tds = $(this).children('td');
                    var wellGoodsQty = tds.eq('10').children('input[type="number"]').val();
                    var faultyGoodsQty = tds.eq('11').children('input[type="number"]').val();
                    var itemType = tds.eq(2).html();
                    var item = tds.eq(3).html();
                    var issueQty = 0;
                    var data = JSON.stringify({ itemId: TryParseInt(item, 0), itemTypeId: TryParseInt(itemType, 0), modelId: TryParseInt(description, 0) })
                    issueQty = ajaxValueReturnable(data, '/Common/GetIQCItemReqIssueQty', getToken());
                    var total = 0;
                    total = (TryParseInt(wellGoodsQty, 0) + TryParseInt(faultyGoodsQty, 0) );
                    console.log(total);
                    if (issueQty < wellGoodsQty || issueQty < faultyGoodsQty || wellGoodsQty == null || faultyGoodsQty == null) {
                        isValid = false;
                        tds.eq('10').children('input[type="number"]').css("border", "1px solid red");
                        tds.eq('11').children('input[type="number"]').css("border", "1px solid red");
                    }
                    else if (total > issueQty || total != issueQty) {
                        isValid = false;
                        tds.eq('10').children('input[type="number"]').css("border", "1px solid red");
                        tds.eq('11').children('input[type="number"]').css("border", "1px solid red");
                    }
                    else if (total == issueQty) {
                        tds.eq('10').children('input[type="number"]').css("border-style", "none");
                        tds.eq('11').children('input[type="number"]').css("border-style", "none");
                    }
                    else {
                        tds.eq('10').children('input[type="number"]').css("border-style", "none");
                        tds.eq('11').children('input[type="number"]').css("border-style", "none");
                    }
                })
            }
            return isValid;
        }

        $("#btnSubmitForIQCReturn").click(function (e) {
            e.preventDefault();

            if (validateSubmit()) {
                bootbox.confirm("Are you sure you want to Return this IQC Request Code", function (result) {
                    if (result) {
                        disable("#btnSubmitForIQCReturn");

                        var info = { IQCItemReqInfoId: TryParseInt(ddlIQCReqCode.val(), 0) };
                        var details = []; details.length = 0;

                        $.each($(".tblDataDetail tbody tr"), function (index, item) {
                                var tds = $(this).children('td');
                                details.push({
                                    IQCItemReqDetailId: tds.eq(1).html(),
                                    ItemTypeId: tds.eq(2).html(),
                                    ItemId: tds.eq(3).html(),
                                    UnitId: tds.eq(4).html(),
                                    Quantity: tds.eq(7).html(),
                                    IssueQty: tds.eq(8).html(),
                                    WellGoodsQty: tds.eq(10).children('input[type="number"]').val(),
                                    FaultyGoodsQty: tds.eq(11).children('input[type="number"]').val()
                                })
                            })

                        info.IQCItemReqDetails = details;
                        ////details.Details = info;
                        //console.log(info);
                        var data = JSON.stringify({ models: info });

                        $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/Inventory/SaveIQCStockReturnInStatus', data, getToken())).then(function (res, status) {
                            console.log(res);
                            console.log(status);
                            if (res === true && status === "success") {
                                $('.toastrDefaultSuccess').trigger('click');
                                 setTimeout(function () {
                                    redirectPage('@Url.Action("GetIQCItemReqInfoList", new {tab="IQCStockReturn" })');
                                }, 1000);
                            }
                            else {
                                $('.toastrDefaultError').trigger('click');
                            }
                            enable("#btnSubmitForIQCReturn");
                        }).fail(function (error) {
                            console.log(error);
                            enable("#btnSubmitForIQCReturn");
                        })

                    }// confirm
                })// bootbox
            }// submit
        })


        function redirectPage(page) {
            window.location.replace(page);
        }


    </script>
}


