
@{
    ViewBag.Title = "Create Item Preparation";
}

<div class="row text-sm" style="margin-top:-15px">
    <div class="col-md-12">
        <div class="card card-gray-dark">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-3">
                        <a href="/Inventory/GetItemPreparation" class="float-left btn btn-sm btn-outline-primary" title="Go To List">
                            <i class="fas fa-arrow-alt-circle-left"></i>
                        </a>
                    </div>
                    <div class="col-md-6">
                        <h5 class="text-center text-bold">Create Item Preparation</h5>
                    </div>
                    <div class="col-md-3">
                        <button class="btn btn-outline-danger btn-sm float-lg-right" id="btnReset" title="RESET UI"><i class="fas fa-sync-alt"></i> </button>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-5" style="border-right:2px solid #efefef">
                        <h5 style="border-bottom:2px solid #f6eaaa">
                            Target Item
                        </h5>
                        <div class="row">
                            <div class="col-md-6">
                                <label for="ddlModelName" class="col-form-label">
                                    Model Name
                                    <div class="checkbox d-inline icheck-emerland">
                                        <input type="checkbox" name="chkCopy" id="chkCopy" />
                                        <label for="chkCopy" class="text-success">
                                            Copy
                                        </label>
                                    </div>
                                </label>
                                @Html.DropDownList("ddlModelName", (IEnumerable<SelectListItem>)ViewBag.ddlModelName, "--Select ModelName--", new { @class = "form-control form-control-sm ctrl-changed select2 select2-danger" })
                                <span class="error hide req-modelName font-weight-bold">Model Name is required!</span>
                            </div>
                            <div class="col-md-6">
                                <label for="ddlItemPreparationType" class="col-form-label">Type</label>
                                @Html.DropDownList("ddlItemPreparationType", (IEnumerable<SelectListItem>)ViewBag.ddlItemPreparationType, "--Select Type--", new { @class = "form-control form-control-sm ctrl-changed" })
                                <span class="error hide req-preparation text-bold">Item PreparationType is required</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <label for="ddlItemTgt" class="col-form-label">Item/Color Name</label>
                                @Html.DropDownList("ddlItemTgt", (IEnumerable<SelectListItem>)ViewBag.ddlItemTgt, "--Select Item--", new { @class = "form-control form-control-sm select2 select2-danger ctrl-changed" })
                                <span class="error hide req-tgt-item-type-ware text-bold">Item/ItemType/Warehouse is not found !</span>
                                <span class="error hide req-tgt-item text-bold">Item Name is require</span>
                                <span class="error hide duplicate-item text-bold">The Item of this model is already exist</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <h5 style="border-bottom:2px solid #f87878">Source Items</h5>
                        <div class="row">
                            <div class="col-md-5">
                                <label for="ddlWarehouseSource" class="col-form-label">Warehouse Name</label>
                                @Html.DropDownList("ddlWarehouseSource", (IEnumerable<SelectListItem>)ViewBag.ddlWarehouseSource, "--Select Warehouse--", new { @class = "form-control form-control-sm ctrl-changed" })
                                <span class="error hide req-src-warehouseName font-weight-bold">Warehouse Name is required !</span>
                                <span class="error hide same-warehouse font-weight-bold">Target & Source warehouse cannot be same!</span>
                            </div>
                            <div class="col-md-7">
                                <label class="col-form-label" for="ddlItemSrc">Item</label>
                                <select id="ddlItemSrc" class="form-control form-control-sm ctrl-changed select2 select2-danger">
                                    <option value="">--Select Item--</option>
                                </select>
                                <span class="error hide req-src-item text-bold">Item Name is require</span>
                                <span class="error hide added-item text-bold">The Item is already added into the list</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <label for="txtQty" class="col-form-label">Quantity <span id="unitName" class="font-weight-bold mt-1" style="color:darkblue"> </span></label>
                                <input type="number" placeholder="Qty" name="quantity" id="txtQty" class="form-control form-control-sm" />
                                <span class="error hide req-src-qty text-bold">Quantity is required!</span>
                            </div>
                            <div class="col-md-6">
                                <label for="txtRemarks" class="col-form-label">Remarks</label>
                                <input type="text" name="remarks" value="" id="txtRemarks" class="form-control form-control-sm" />
                            </div>
                            <div class="col-md-2">
                                <label for="" class="col-form-label" style="visibility:hidden"> Add To List</label>
                                <div class="clearfix">
                                    <button type="submit" class="btn btn-sm btn-warning text-bold float-right" id="btnAddToList" title="Save"><i class="fas fa-plus"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-md-12">
                        @Html.AntiForgeryToken()
                        <table class="table table-head-fixed text-nowrap table-bordered table-sm table-striped table-responsive-lg" id="tblList">
                            <thead>
                                <tr>
                                    <th colspan="11" class="text-center">
                                        <span class="error hide no-items">Please load the table first.</span>
                                        <button type="submit" id="btnSubmit" class="btn btn-sm btn-success float-left">
                                            <i class="fas fa-paper-plane"></i> Save
                                        </button>
                                    </th>
                                </tr>
                                <tr class="text-center btn-dark">
                                    <th style="width:8%">#SL</th>
                                    <th style="width:40%">Item/Item-Color & ItemType</th>
                                    <th style="width:10%">Qty.</th>
                                    <th style="width:10%">Type Of Unit</th>
                                    <th style="width:20%">Remarks</th>
                                    <th style="width:12%">Action</th>
                                    <th class="hide item"></th>
                                    <th class="hide itemType"></th>
                                    <th class="hide warehouse"></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="itemPreparationModal" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert-primary">
                <input type="hidden" id="hdfRowIndex" />
                <h4 id="modalHeading" class="modal-title">Edit Item Preparation Qty</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <table id="tblEdit" class="table table-sm table-bordered table-striped table-responsive-lg">
                    <tbody>
                        <tr>
                            <td class="alert-secondary" style="width:15%">Item</td>
                            <td style="width:35%; background-color:#e1dada"></td>
                            <td class="alert-secondary" style="width:15%">Qty</td>
                            <td style="width:35%; background-color:#e1dada"> <input type="number" class="form-control form-control-sm" id="txtUpdateQty" /></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" class="btn btn-sm btn-flat btn-danger">Cancel</button>
                <button type="button" id="btnUpdateQty" class="btn btn-sm btn-flat btn-success">Update</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        var ddlModelName = $("#ddlModelName");
        var ddlItemPreparationType = $("#ddlItemPreparationType");
        var ddlItemTgt = $("#ddlItemTgt");
        var chkCopy = $("#chkCopy"); 

        var ddlWarehouseSource = $("#ddlWarehouseSource");
        var ddlItemSrc = $("#ddlItemSrc");
        var txtQty = $("#txtQty");
        var txtRemarks = $("#txtRemarks");
        var unitName = $("#unitName");
        
        var hdfRowIndex = $("#hdfRowIndex");
        var txtUpdateQty = $("#txtUpdateQty");
        var itemTgt = '';
        var itemTypeTgt = '';
        var warehouseTgt = '';

        var itemSrc = '';
        var itemTypeSrc = '';

        $(document).ready(function () {
            //Initialize Select2 Elements
            $('.select2').select2();

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });
        })

        function getTargetItemAndItemTypeAndWarehouse() {
            itemTgt = '';
            itemTypeTgt = '';
            warehouseTgt = '';

            if (ddlItemTgt.val() != '')
            {
                itemTgt = ddlItemTgt.val().substring(0, ddlItemTgt.val().indexOf("#"));
                itemTypeTgt = ddlItemTgt.val().substring(ddlItemTgt.val().indexOf("#") + 1, ddlItemTgt.val().lastIndexOf("#"));
                warehouseTgt = ddlItemTgt.val().substring(ddlItemTgt.val().lastIndexOf("#") + 1);
            }
        }

        function getSourceItemAndItemType() {
            itemSrc = '';
            itemTypeSrc = '';
            if (ddlItemSrc.val() != '') {
                itemSrc = ddlItemSrc.val().substring(0, ddlItemSrc.val().indexOf("#"));
                itemTypeSrc = ddlItemSrc.val().substring(ddlItemSrc.val().indexOf("#") + 1);
            }
        }

        ddlWarehouseSource.change(function () {
            clearDropdown("ddlItemSrc");
            txtQty.val('0');
            $("#unitName").text('');
            if (ddlWarehouseSource.val() !== "") {
                LoadDropDown('/Common/GetItemsByWarehouseId', 'POST', ddlItemSrc, JSON.stringify({ warehouseId: ddlWarehouseSource.val() }));
            }
        })

        ddlItemSrc.change(function () {
            $("#unitName").text('');
            txtQty.val('0');
            if (ddlItemSrc.val() !== "") {
                getSourceItemAndItemType();
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Common/GetUnitByItemId', JSON.stringify({ itemId: itemSrc }), getToken())).then(function (res, status) {
                    console.log(res);
                    console.log(status);
                    if (status === "success") {
                        $("#unitName").text('(' + res.UnitSymbol + ')');
                    }
                }).fail(function (error) {
                    consoleLog(error);
                })
            }
        })

        $("#btnAddToList").click(function (e) {
            e.preventDefault();
            if (validateAddToList()) {
                addToList();
            }
        })

        function validateAddToList() {
            var isValid = true;
            $(".error").addClass('hide');
            getSourceItemAndItemType();
            if (ddlModelName.val() === "") {
                $(".req-modelName").removeClass('hide');
                isValid = false;
            }
            if (ddlItemTgt.val() === "") {
                $(".req-tgt-item").removeClass('hide');
                isValid = false;
            }
            if (ddlWarehouseSource.val() === "") {
                $(".req-src-warehouseName").removeClass('hide');
                isValid = false;
            }
            if (itemSrc === "") {
                $(".req-src-item").removeClass('hide');
                isValid = false;
            }
            if (TryParseInt(txtQty.val(), 0) <= 0) {
                $(".req-src-qty").removeClass('hide');
                isValid = false;
            }
            if (ddlItemPreparationType.val() == "") {
                $(".req-preparation").removeClass('hide');
                isValid = false;
            }
            getTargetItemAndItemTypeAndWarehouse();
            if (warehouseTgt !== "" && ddlWarehouseSource.val() !== "") {
                if (warehouseTgt === ddlWarehouseSource.val()) {
                    $(".same-warehouse").removeClass('hide');
                    isValid = false;
                }
            }
            if (ddlModelName.val() !== "" && ddlItemTgt.val() !== "" && ddlItemPreparationType.val() !="") {
                if (ajaxBooleanChecker(JSON.stringify({type: ddlItemPreparationType.val() ,itemId: itemTgt, modelId: ddlModelName.val() }), '/Common/IsDuplicationItemPreparation', getToken()) === true) {
                    $('.duplicate-item').removeClass('hide');
                    isValid = false;
                }
            }
            var isItemExist = false;
            if ($("#tblList tbody tr").length > 0) {
                $.each($("#tblList tbody tr"), function (index, item) {
                    var item = $(this).children('td').eq('6').html();
                    if (item === itemSrc) {
                        isItemExist = true;
                    }
                })
            }
            if (isItemExist) {
                $(".added-item").removeClass('hide');
                isValid = false;
            }
            return isValid;
        }

        function addToList()
        {
            disable("#ddlWarehouseSource");        
            var sl = $("#tblList tbody tr").length;

            getSourceItemAndItemType();
            var td1 = "<td class='text-center text-bold'>" + (sl + 1) + "</td>"
            var td2 = "<td>" + dropDownSelectedText("ddlItemSrc") + "</td>";
            var td3 = "<td class='text-center text-bold'>" + txtQty.val() + "</td>";
            var td4 = "<td class='text-center text-bold'>" + unitName.text() + "</td>";
            var td5 = "<td>" + txtRemarks.val() + "</td>";
            var td6 = "<td class='text-center'><a href='#' class='btn btn-sm btn-warning btn-flat data-onfly-edit'><i class='fas fa-pen'></i></a> <a href='#' class='btn btn-sm btn-danger btn-flat data-onfly-del'><i class='far fa-trash-alt'></i></a></td>";
            var td7 = "<td class='hide item'>"+itemSrc+"</td>";
            var td8 = "<td class='hide itemType'>" + itemTypeSrc+"</td>";
            var td9 = "<td class='hide warehouse'>" + ddlWarehouseSource.val() + "</td>";

            var tr = "<tr>" + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9+"</tr>";
            if ($("#tblList tbody tr").length == 0) {
                $("#tblList tbody").append(tr);
            }
            else {
                $("#tblList tbody tr").eq(0).before(tr);
            }
            ddlItemSrc.val("");
            txtQty.val('0');
        }

        function validateSubmition() {
            var isValid = true;
            $(".error").addClass('hide');
            getTargetItemAndItemTypeAndWarehouse();

            if (ddlModelName.val() === "") {
                $(".req-modelName").removeClass('hide');
                isValid = false;
            }
            if (ddlItemTgt.val() === "") {
                $(".req-tgt-item").removeClass('hide');
                isValid = false;
            }
            else {
                if (TryParseInt(warehouseTgt, 0) <= 0 || TryParseInt(itemTypeTgt, 0) <= 0 || TryParseInt(itemTgt, 0) <= 0) {
                    $(".req-tgt-item-type-ware").removeClass('hide');
                    isValid = false;
                }
            }
            if ($("#tblList tbody tr").length === 0)
            {
                $(".no-items").removeClass('hide');
                isValid = false;
            }
            if (ddlItemPreparationType.val() === "") {
                $('.req-preparation').removeClass('hide');
                isValid = false;
            }
            if (ddlModelName.val() !== "" && ddlItemPreparationType.val() !== "" && ddlItemTgt.val() !== "" ) {
                
                var data = JSON.stringify({ type: ddlItemPreparationType.val(), modelId: ddlModelName.val(), itemId: TryParseInt(itemTgt,0) });
                if (ajaxBooleanChecker(data, '/Common/IsItemPreparationExistWithThistype', getToken()) === true) {
                    bootbox.alert("Already a Item Preparation is exist with this Type,Model and Item");
                    isValid = false;
                }
            }
            return isValid;
        }

        // Edit ....
        $(document).on('click', 'a.data-onfly-edit', function (e) {
            e.preventDefault();
            var row = $(this).parent().parents('tr');
            $("#itemPreparationModal").modal("show");
            hdfRowIndex.val('');
            txtUpdateQty.val('0')
            hdfRowIndex.val(row.index());
            var item = row.children('td').eq(1).html();
            var qty = row.children('td').eq(2).html();
            //alert(row.index());

            var tblEdit = $('#tblEdit tbody');
            var itemRows = tblEdit.children('tr');
            var itemRows1 = itemRows.eq('0');
            itemRows1.children('td').eq(1).html(item);
            txtUpdateQty.val(qty);
        })

        $("#btnUpdateQty").click(function (e) {
            e.preventDefault();
            if (hdfRowIndex.val() !== "") {
                if (TryParseInt(txtUpdateQty.val(), 0) > 0) {
                    $("#tblList tbody tr").eq(hdfRowIndex.val()).children('td').eq(2).html(txtUpdateQty.val());
                    $("#itemPreparationModal").modal("toggle");
                    $('.toastrDefaultUpdateOnFlayData').trigger('click').fadeOut(1000);
                }
                else {
                    bootbox.alert("Quantity cannot be zero");
                }
            }
        })

        $("#btnSubmit").click(function (e) {
            e.preventDefault();
            if (validateSubmition() === true) {

                bootbox.confirm("Are you sure you want to Save this Preparation", function (result) {
                    if (result){
                        //disable("#btnSubmit");
                        getTargetItemAndItemTypeAndWarehouse();
                        var info = { PreparationInfoId: 0, WarehouseId: TryParseInt(warehouseTgt,0), ItemTypeId:TryParseInt(itemTypeTgt,0), ItemId:TryParseInt(itemTgt,0), DescriptionId: TryParseInt(ddlModelName.val(),0), PreparationType: ddlItemPreparationType.val() };

                        var details = [];
                        details.length = 0;

                        $.each($("#tblList tbody tr"), function (index, item) {
                            var tds = $(this).children('td');
                            details.push({
                                PreparationDetailId:0,
                                WarehouseId: tds.eq(8).html(),
                                ItemTypeId: tds.eq(7).html(),
                                ItemId: tds.eq(6).html(),
                                Quantity: tds.eq(2).html(),
                                Remarks: tds.eq(4).html()
                            });
                        })

                        console.log('Info');
                        console.log(info);
                        console.log('Detail');
                        console.log(details);
                        var data = JSON.stringify({ info: info, details: details });
                        //return;
                        $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Inventory/SaveItemPreparation', data , getToken())).then(function (res, status)
                        {
                            if (res === true) {
                                $('.toastrDefaultSuccess').trigger('click');
                                @*setTimeout(function () {
                                    redirectPage('@Url.Action("GetItemPreparation")');
                                }, 1000);*@
                                resetUI();
                            }
                            else {
                                $('.toastrDefaultError').trigger('click');
                            }
                            enable("#btnSubmit");
                        }).fail(function (error) {
                            alert(execuStatus.fail);
                            enable("#btnSubmit");
                        })
                    }
                })
            }
        })

        $(document).on("click", "a.data-onfly-del", function (e) {
            e.preventDefault();
            var index = $(this).parent().parents('tbody tr').index();
            if (bootbox.confirm("Are you sure you want to delete?", function (result) {
                if (result === true) {
                    removeTableRow("#tblList tbody", index);
                    fnFixTheTbodyRowSerialInDecsOrder("#tblList", index);
                };
            }));
        })

        $("#btnReset").click(function (e) {
            e.preventDefault();
            resetUI();
        })

        function resetUI() {
            enable("#ddlModelName");
            ddlModelName.val("");
            ddlModelName.trigger("change");
            enable("#ddlWarehouseSource");
            ddlWarehouseSource.val("");
            enable("#ddlItemTgt");
            clearDropdown("ddlItemSrc");
            //clearDropdown("ddlItemTgt");
            txtQty.val("0");
            txtRemarks.val("");
            $("#tblList tbody").empty();
            ddlItemPreparationType.val('');
            ddlItemPreparationType.trigger("change");
            ddlItemTgt.val('');
            ddlItemTgt.trigger("change");
        }

        function redirectPage(page) {
            window.location.replace(page);
        }

        // Copy Implementation

        ddlModelName.change(function () {
            if (chkCopy.is(":checked")) {
                getCopyItems();
            }
        })

        ddlItemPreparationType.change(function () {
            if (chkCopy.is(":checked")) {
                getCopyItems();
            }
        })

        ddlItemTgt.change(function () {
            if (chkCopy.is(":checked")) {
                getCopyItems();
            }
        })

        chkCopy.change(function () {
            if (chkCopy.is(":checked")) {
                getCopyItems();
            }
        })

        function getCopyItems() {
            getTargetItemAndItemTypeAndWarehouse();
            if (TryParseInt(ddlModelName.val(), 0) > 0 && ddlItemPreparationType.val() != "" && TryParseInt(itemTgt, 0) > 0) {
                var data = JSON.stringify({ type: ddlItemPreparationType.val(), model: ddlModelName.val(), item: itemTgt });

                $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/Common/GetItemPreparationBundleByTypeModelItem', data, getToken())).then(function (res, status)
                {
                    console.log("Bundle Data");
                    console.log(res);
                    if (res.length !==0 && status === "success") {
                        fnBindTableWithBundleData(res);
                    }
                    else {
                        bootbox.alert("Bundle not found with this Model-Type-Item");
                    }
                }).fail(function (error) {
                    console.log(error);
                    bootbox.alert("Somthing went wrong");
                })
            }
        }

        function fnBindTableWithBundleData(obj) {
            $("#tblList tbody").empty();
            if (!$.isEmptyObject(obj)) {
                var warehouseIdSrc = 0;
                $.each(obj, function (index, item)
                {
                    if (index == 0) { warehouseIdSrc = item.WarehouseIdSrc;}
                    var td1 = "<td class='text-center text-bold'>" + (index + 1) + "</td>"
                    var td2 = "<td>" + item.ItemNameSrc + '[' + item.ItemTypeNameSrc+']' + "</td>";
                    var td3 = "<td class='text-center text-bold'>" + item.Quantity + "</td>";
                    var td4 = "<td class='text-center text-bold'>" + item.UnitName + "</td>";
                    var td5 = "<td>" + '' + "</td>";
                    var td6 = "<td class='text-center'><a href='#' class='btn btn-sm btn-warning btn-flat data-onfly-edit'><i class='fas fa-pen'></i></a> <a href='#' class='btn btn-sm btn-danger btn-flat data-onfly-del'><i class='far fa-trash-alt'></i></a></td>";
                    var td7 = "<td class='hide item'>" + item.ItemIdSrc + "</td>";
                    var td8 = "<td class='hide itemType'>" + item.ItemTypeIdSrc + "</td>";
                    var td9 = "<td class='hide warehouse'>" + item.WarehouseIdSrc + "</td>";

                    var tr = "<tr>" + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9 + "</tr>";
                    $("#tblList tbody").append(tr);
                })

                if ($("#tblList tbody").length > 0) {
                    ddlWarehouseSource.val(warehouseIdSrc);
                    ddlWarehouseSource.trigger("change");
                    disable("#ddlWarehouseSource");
                }
            }
        }
    </script>
}