
@{
                /**/

                ViewBag.Title = "Stock-IN";
}

<div class="row">
    <div class="col-md-12">
        <div class="card card-primary card-outline card-tabs" style="margin-top:-20px">
            <div class="card-body">
                <div class="tab-content" id="custom-tabs-two-tabContent">
                    @Html.AntiForgeryToken()

                    <div class="tab-pane fade show active" id="custom-tabs-two-createStock" role="tabpanel" aria-labelledby="custom-tabs-two-createStock-tab">
                        <div class="row" style="margin-top:-15px">
                            <div class="col-md-12">
                                <div class="card card-gray-dark">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-3">
                                                <a href="/Inventory/GetWarehouseStockInfoList" class="btn btn-sm btn-outline-primary" title="Back To List"><i class="fas fa-arrow-alt-circle-left"></i></a>
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">
                                                    Parts Stock-In
                                                </h5>
                                            </div>
                                            <div class="col-md-3">
                                                <button class="btn btn-outline-danger btn-sm float-lg-right" id="btnReset" title="RESET UI"><i class="fas fa-sync-alt"></i> </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card card-navy">
                                    <div class="card-header">
                                        <h6 class="card-title">Create</h6>
                                    </div>
                                    <div class="card-body text-sm">
                                        <div class="row" style="margin-top:-15px">
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">Date</label>
                                                <div class="input-group input-group-sm ">
                                                    <input type="text" class="form-control form-control-sm date-datePicker" id="dptDate" />
                                                    <div class="input-group-prepend cursor-pointer remove-date dptDate" style="cursor:pointer">
                                                        <span class="input-group-text">&#10008;</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlSupplier" class="control-label font-weight-bold">Supplier Name</label>
                                                @Html.DropDownList("ddlSupplier", (IEnumerable<SelectListItem>)ViewBag.ddlSupplier, "--Select Supplier--", new { @class = "form-control form-control-sm select2 select2-danger" })
                                                <span class="error hide require-supplier font-weight-bold">Supplier is required</span>
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlModel" class="control-label font-weight-bold">Model Name</label>
                                                @Html.DropDownList("ddlModel", (IEnumerable<SelectListItem>)ViewBag.ddlModel, "--Select Model--", new { @class = "form-control form-control-sm select2 select2-danger" })
                                                <span class="error hide require-model font-weight-bold">Model is required</span>
                                            </div>
                                            <div class="col-md-4">
                                                <label for="ddlItems" class="control-label font-weight-bold">Parts</label>
                                                @Html.DropDownList("ddlItems", (IEnumerable<SelectListItem>)ViewBag.ddlItems, "--Select Parts--", new { @class = "form-control form-control-sm select2 select2-danger" })
                                                <span class="error hide req-item-itemType-warehouse font-weight-bold">Parts/PartsType/Warehouse is missing</span>
                                                <span class="error hide req-duplicate-warehouse font-weight-bold">Please Select Same Warehouse</span>
                                            </div>
                                            <div class="col-md-2">
                                                <label for="" class="control-label font-weight-bold" style="visibility:hidden"> Add New Parts</label>
                                                <div class="clearfix">
                                                    <button type="submit" class="btn btn-sm btn-outline-primary float-left mr-1" id="btnAddStockItem" title="Add Item"><i class="fas fa-plus"></i>&nbsp; Add New Parts</button>
                                                </div>
                                            </div>

                                        </div>
                                        <br />
                                        <div class="row">
                                            <div class="col-md-2">
                                                <label for="txtStockInQty" class="control-label font-weight-bold">Stock-In Qty.</label>
                                                <div class="input-group">
                                                    <input type="number" placeholder="Qty" name="quantity" id="txtStockInQty" class="form-control form-control-sm" />
                                                    <span id="unitName" class="font-weight-bold mt-2 unitName" style="color:darkblue"></span>
                                                </div>
                                                <span class="error hide required-qty font-weight-bold">Quantity is required!</span>
                                            </div>
                                            <div class="col-md-2">
                                                <label for="txtOrderQty" class="control-label font-weight-bold">Order Qty.</label>
                                                <div class="input-group">
                                                    <input type="number" placeholder="Qty" name="quantity" id="txtOrderQty" class="form-control form-control-sm" />
                                                    <span id="unitName" class="font-weight-bold mt-2 unitName" style="color:darkblue"></span>
                                                </div>
                                                <span class="error hide required-orderqty font-weight-bold">Order Qty is required!</span>
                                            </div>
                                            <div class="col-md-2">
                                                <label for="txtRemarks" class="control-label font-weight-bold">Remarks</label>
                                                <input type="text" name="remarks" value="" id="txtRemarks" class="form-control form-control-sm" />
                                            </div>
                                            <div class="col-md-2">
                                                <label for="" class="control-label font-weight-bold" style="visibility:hidden"> Add To List</label>
                                                <div class="clearfix">
                                                    <button type="submit" class="btn btn-sm btn-outline-warning float-left mr-1" id="btnAddToList" title="ADD TO LIST"><i class="fas fa-plus"></i> &nbsp; ADD TO LIST </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="col-md-12" style="margin-top:-20px" id="dataContainer">
                                            @*@{Html.RenderAction("GetWarehouseStockInfoPartialList");}*@
                                            <div class="row">
                                                <div class="col-md-12 mt-2" style="overflow-y:scroll">
                                                    <table class="table table-bordered table-sm text-sm table-striped table-responsive-lg" id="tblWarehouseStock">
                                                        <thead>
                                                            <tr>
                                                                <th colspan="9">
                                                                    <button class="btn btn-outline-success btn-sm float-lg-right" id="btnSubmit">SAVE <i class="fas fa-paper-plane"></i> </button>
                                                                </th>
                                                            </tr>
                                                            <tr class="btn-dark text-center">
                                                                <th>#SL</th>
                                                                <th class="hide"></th>
                                                                @*<th>Item Type Name</th>*@
                                                                <th class="hide"></th>
                                                                <th>Parts Name</th>
                                                                <th>Stock-In Qty.</th>
                                                                <th>Order Qty</th>
                                                                <th>Unit</th>
                                                                <th class="hide"></th>
                                                                <th>Supplier Name</th>
                                                                <th>Remarks</th>
                                                                <th>Action</th>
                                                                <th class="hide itemType"></th>
                                                                <th class="hide warehouse"></th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalItemForStock" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary">
                <h4 id="modalHeading" class="modal-title"><span id="spanModalHeadForStock">Add New Parts</span></h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="frmItem">
                    <input type="hidden" name="Id" id="hdfItemId" />
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="txtItemName" class="control-label font-weight-bold">Parts Name</label>
                            <input type="text" name="itemName" value="" id="txtItemName" class="form-control form-control-sm" />
                            <span class="error hide required-itemName font-weight-bold">Input Parts Name!</span>
                            <span class="error hide duplicate-itemName font-weight-bold">Already Parts Name Exist!</span>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="ddlItemTypeName" class="control-label font-weight-bold">Parts Type Name</label>
                            @Html.DropDownList("ddlItemTypeName", (IEnumerable<SelectListItem>)ViewBag.ddlItemTypeName, "--Select ItemType--", new { @class = "form-control form-control-sm" })
                            <span class="error hide required-itemTypeName font-weight-bold">Required Parts Type Name!</span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="ddlUnitName" class="control-label font-weight-bold">Unit Name</label>
                            @Html.DropDownList("ddlUnitName", (IEnumerable<SelectListItem>)ViewBag.ddlUnitName, "--Select UnitName--", new { @class = "form-control form-control-sm" })
                            <span class="error hide required-UnitName font-weight-bold">Required Unit Name!</span>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="txtItemRemarks" class="control-label font-weight-bold">Remarks</label>
                            <input type="text" name="remarks" value="" id="txtItemRemarks" class="form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <div class="form-control form-control-sm">
                                <input type="checkbox" id="chkStatestatus" /> <b>Is Active?</b>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer btn-default">
                <div class="col-md-6">
                    <div id="msg1" class="alert alert-success hide float-left">
                        Data has been saved Successful!
                    </div>
                    <div id="msg2" class="alert alert-danger hide float-left">
                        Data has been failed to save!
                    </div>
                </div>
                <button type="button" class="btn btn-outline-danger btn-sm float-right" data-dismiss="modal" data-target="#"><i class="fas fa-paper-plane"></i> Cancel </button>
                <button type="submit" class="btn btn-outline-success float-right" id="btnSubmitItemForStock"><i class="fas fa-paper-plane"></i> <span id="spanSaveText">Save</span> </button>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script type="text/javascript">
        var ddlWarehouse = $("#ddlWarehouse");
        var ddlItemType = $("#ddlItemType");
        var ddlItems = $("#ddlItems");
        var txtStockInQty = $("#txtStockInQty");
        var txtRemarks = $("#txtRemarks");
        var unitName = $(".unitName");
        var ddlModel = $("#ddlModel");
        var txtOrderQty = $("#txtOrderQty");
        var ddlSupplier = $("#ddlSupplier");
        var txtItemName = $('#txtItemName');
        var ddlItemTypeName = $("#ddlItemTypeName");
        var ddlUnitName = $('#ddlUnitName');
        var txtItemRemarks = $("#txtItemRemarks");
            var chkStatestatus = $("#chkStatestatus");
            var dptDate = $("#dptDate");

            var warehouseStock = '';
            var itemTypeStock = '';
            var itemStock = '';

        $(document).ready(function () {
            //Initialize Select2 Elements
            $('.select2').select2();

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });
            dptDate.css("background-color", "#fff");
            $('#dptDate').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true
            });

            var date = new Date();
            var thisDate = date.getDate() + ' ' + getMonthName(date.getMonth() + 1, "MM") + " " + date.getFullYear();
            $('#dptDate').val(thisDate)
            $('#dptDate').trigger('change');

        })

            function getItemDetailsByStock() {
                warehouseStock = '';
                itemTypeStock = '';
                itemStock = '';
                if (ddlItems.val() != '') {
                    itemStock = ddlItems.val().substring(0, ddlItems.val().indexOf("#"));
                    itemTypeStock = ddlItems.val().substring(ddlItems.val().indexOf("#") + 1, ddlItems.val().lastIndexOf("#"));
                    warehouseStock = ddlItems.val().substring(ddlItems.val().lastIndexOf("#") + 1);
                }
            }

        //casced dropdown load for itemtype
        //ddlWarehouse.change(function () {
        //    $("#unitName").text('');
        //    clearDropdown("ddlItemType");
        //    clearDropdown("ddlItems");
        //    if (ddlWarehouse.val() != "") {
        //        disable("#ddlWarehouse");
        //        LoadDropDown('/Common/GetItemTypeForDDL', 'POST', ddlItemType, JSON.stringify({ warehouseId: ddlWarehouse.val() }));
        //    }
        //    else {
        //        enable("#ddlWarehouse");
        //    }
        //})

        //casced dropdown load for item
        //ddlItems.change(function () {
        //    $("#unitName").text('');
        //    clearDropdown("ddlItems");
        //    if (itemTypeStock != "") {
        //        LoadDropDown('/Common/GetItemForDDL', 'POST', ddlItems, JSON.stringify({ itemTypeId: itemTypeStock }));
        //    }
        //})

        //unit text
        ddlItems.change(function () {
            $(".unitName").text('');
            getItemDetailsByStock();
            if (itemStock != "") {
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Common/GetUnitByItemId', JSON.stringify({ itemId: itemStock}), getToken())).then(function (res, status) {
                    console.log(res);
                    console.log(status);
                    if (status == "success") {
                        $(".unitName").text('('+res.UnitSymbol+')');
                    }
                }).fail(function (error) {
                    consoleLog(error);
                })
            }

        })

            function validateInput()
            {
            $('.error').addClass('hide');
            var isValid = true;
            var count = $("#tblWarehouseStock tbody tr").length;
            console.log(count);
            if (count > 0)
            {
                $.each($("#tblWarehouseStock tbody tr"), function (index, item) {
                    var itemId = $(this).children('td').eq(12).html();
                    if (itemId != warehouseStock) {
                        isValid = false;
                        $(".req-duplicate-warehouse").removeClass('hide');
                    }
                })
            }
            if (TryParseInt(ddlModel.val(), 0) <= 0) {
                isValid = false;
                $(".require-model").removeClass("hide");
            }
            getItemDetailsByStock();
            if (TryParseInt(itemStock, 0) <= 0 || TryParseInt(itemTypeStock, 0) <= 0 || TryParseInt(warehouseStock, 0) <= 0)
            {
                isValid = false;
                $(".req-item-itemType-warehouse").removeClass("hide");
            }
            if (txtStockInQty.val() == "" || TryParseInt(txtStockInQty.val(), 0) <= 0)
            {
                isValid = false;
                $(".required-qty").removeClass("hide");
            }
            if (txtOrderQty.val() == "" || TryParseInt(txtOrderQty.val(), 0) <= 0) {
                isValid = false;
                $(".required-orderqty").removeClass("hide");
            }
            if (TryParseInt(ddlSupplier.val(), 0) <= 0) {
                isValid = false;
                $(".require-supplier").removeClass("hide");
            }
            return isValid;
        }

        //click addlist button and save data in list
        $("#btnAddToList").click(function (e) {
            e.preventDefault();
            if (validateInput() == true) {

                //disable("#ddlWarehouse");
                disable("#ddlModel");
                getItemDetailsByStock();
                var sl = $("#tblWarehouseStock tbody tr").length;
                var td1 = "<td class='text-center text-bold'>" + (sl + 1) + "</td>"
                var td2 = "<td class='hide'>" + ddlItemType.val() + "</td>";
                //var td3 = "<td>" + $("#ddlItemType option:selected").text() + "</td>";

                var td3 = "<td class='hide'>" +itemStock + "</td>";
                var td4 = "<td>" + $("#ddlItems option:selected").text() + "</td>";

                var td5 = "<td class='text-center'>" + txtStockInQty.val() + "</td>";
                var td6 = "<td class='text-center'>" + txtOrderQty.val() + "</td>";
                var td7 = "<td class='text-center'>" + unitName.text() + "</td>";
                var td8 = "<td class='hide'>" + ddlSupplier.val() + "</td>";
                var td9 = "<td class='text-center'>" + $("#ddlSupplier option:selected").text() + "</td>";
                var td10 = "<td>" + txtRemarks.val() + "</td>";
                var td11 = "<td class='text-center'><a href='#' class='btn btn-sm btn-danger data-onfly-del' style='line-height: 1'><i class='far fa-trash-alt'></i> Delete</a></td>";

                var td12 = "<td class='hide itemType'>" + itemTypeStock + "</td>";
                var td13 = "<td class='hide warehouse'>" + warehouseStock + "</td>";

                var tr = "<tr>" + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9 + td10 + td11 + td12 + td13+ "</tr>";
                if ($("#tblWarehouseStock tbody tr").length == 0) {
                    $("#tblWarehouseStock tbody").append(tr);
                }
                else {
                    $("#tblWarehouseStock tbody tr").eq(0).before(tr);
                }
                ddlItems.val('');
                ddlItems.trigger('change');
                txtStockInQty.val('');
                unitName.text('');
                txtRemarks.val('');
                txtOrderQty.val('');
            }
        });

        function clearCtrl() {
            ddlItems.val('');
            ddlItems.trigger('change');
            //clearDropdown("ddlItems")
            txtStockInQty.val('');
            unitName.text('');
            txtRemarks.val('');
            txtOrderQty.val('');
            ddlSupplier.val('');
            ddlSupplier.trigger('change');
        }
        //
        $(document).on("click", "a.data-onfly-del", function (e) {
            e.preventDefault();
            var index = $(this).parent().parents('tbody tr').index();
            if (bootbox.confirm("Are you sure you want to delete?", function (result) {
                if (result === true) {
                    removeTableRow("#tblWarehouseStock tbody", index);
                    fnFixTheTbodyRowSerialInDecsOrder("#tblWarehouseStock", index);
                };
            }));
        })

        $("#btnReset").click(function (e)
        {
            e.preventDefault();
            ddlItems.val('');
            ddlItems.trigger("change");
            //clearDropdown("ddlItems");
            enable("#ddlWarehouse");
            ddlWarehouse.val("");
            enable("#ddlModel");
            ddlModel.val('');
            ddlModel.trigger("change");
            $("#tblWarehouseStock tbody").empty();
            clearDropdown("ddlItemType")
            txtStockInQty.val('');
            unitName.text('');
            txtRemarks.val('');
        })

        $("#btnSubmit").click(function (e) {
            e.preventDefault();
            getItemDetailsByStock();
            if (ddlWarehouse.val() != '' && ddlModel.val() !='' && $("#tblWarehouseStock tbody tr").length > 0)
            {
                bootbox.confirm("Are you sure you want to save?", function (result) {
                    if (result === true)
                    {
                        var reqData = [];
                        reqData.length = 0;
                        var date = null;
                        if ($('#dptDate').val() != "") {
                            date = new Date($('#dptDate').val());
                        }

                        $.each($("#tblWarehouseStock tbody tr"), function (index, item) {
                            var td = $(this).children('td');
                            reqData.push({
                                DescriptionId:ddlModel.val(),
                                //ItemTypeId: td.eq(1).html(),
                                ItemId: td.eq(2).html(),
                                Quantity: td.eq(4).html(),
                                OrderQty: td.eq(5).html(),
                                SupplierId: td.eq(7).html(),
                                Remarks: td.eq(9).html(),
                                ItemTypeId: td.eq(11).html(),
                                WarehouseId: td.eq(12).html(),
                                EntryDate: date
                            });
                        })

                        reqData = JSON.stringify({ models: reqData });
                        console.log(reqData);

                        $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Inventory/SaveWarehouseStockIn', reqData, getToken())).then(function (res, status)
                        {

                            if (res == true) {
                            toastrSuccessAlert(execuStatus.successSave);
                            redirectPage('@Url.Action("GetWarehouseStockInfoList")');
                                setTimeout(function () {
                                    //$('.toastrDefaultSuccess').trigger('click');


                                }, 1000);
                            }
                            else {
                                toastrErrorAlert(execuStatus.fail);
                            }
                        }).fail(function (error) {
                            alert(execuStatus.fail);
                        })
                    }
                  })
            }
        })

        function redirectPage(page) {
            window.location.replace(page);
        }

        function OpenModal() {
            $("#spanModalHeadForStock").text('Add New Parts');
            $("#spanSaveText").text('Save');
            $("#modalItemForStock").modal("show");
            $(".error").addClass("hide");
        }

        $("#btnAddStockItem").click(function (e) {
            e.preventDefault();
            clearItemCtrl();
            OpenModal();
        })

        function clearItemCtrl() {
            txtItemName.val('');
            ddlItemTypeName.val('');
            ddlUnitName.val('');
            txtItemRemarks.val('');
        }

    function ReLoadddlItems() {
        $("#unitName").text('');
        clearDropdown("ddlItems");
        LoadDropDown('/Common/GetItemDetailsForDDL', 'POST', ddlItems, null);

    }
        $("#btnSubmitItemForStock").click(function (e) {
            e.preventDefault();
            $(".error").addClass("hide");
            if (validateForm() == true) {

                var data = JSON.stringify({ ItemId: 0, ItemName: txtItemName.val(), ItemTypeId: ddlItemTypeName.val(), UnitId: ddlUnitName.val(), Remarks: txtItemRemarks.val(), IsActive: chkStatestatus.is(":checked") });

                console.log(data);
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Inventory/SaveItem', data, getToken())).then(function (res, status) {
                    console.log(status);
                    console.log(res);
                    if (res == true) {
                        clearItemCtrl();
                        $("#modalItemForStock").modal("toggle");
                        toastrSuccessAlert(execuStatus.successSave);
                        ReLoadddlItems();
                        //message("#msg1");
                        setTimeout(function () {
                            //$(".toastrDefaultSuccess").trigger('click');
                            //clearItemCtrl();
                            //$("#modalItemForStock").modal("toggle");
                            //toastrSuccessAlert(execuStatus.successSave);
                        },1500)
                    }
                    else {
                        //message("#msg2");
                        toastrErrorAlert(execuStatus.fail);
                    }
                    enable("#btnSubmit");
                }).fail(function (err) {
                    console.log(err);
                    enable("#btnSubmit");
                });
            }

        })

        //validation
        function validateForm() {
            $(".error").addClass("hide");
            var isValid = true;
            if ($.trim(txtItemName.val()) == "") {
                $(".required-itemName").removeClass("hide");
                isValid = false;
            }
            else {
                if (ajaxBooleanChecker(JSON.stringify({ id: 0, itemName: txtItemName.val().trim() }), '/Common/IsDuplicateItemName', getToken()) == true) {
                    $(".duplicate-itemName").removeClass("hide");
                    isValid = false;
                }
            }
            if ($.trim(ddlItemTypeName.val()) == "") {
                $(".required-itemTypeName").removeClass("hide");
                isValid = false;
            }
            if ($.trim(ddlUnitName.val()) == "") {
                $(".required-UnitName").removeClass("hide");
                isValid = false;
            }

            return isValid;
        }

    </script>
}
