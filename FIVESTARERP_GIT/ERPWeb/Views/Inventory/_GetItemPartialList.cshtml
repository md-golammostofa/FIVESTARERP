@model IEnumerable<ERPBO.Inventory.ViewModels.ItemViewModel>
@{
    ViewBag.Title = "List Of Items";
    
    //var privilege = (ERPBO.Common.UserPrivilege)ViewBag.UserPrivilege;
    string badge = string.Empty;
    var pagerData = (ERPWeb.Infrastructure.PagerData)ViewBag.PagerData;
    var sl = pagerData.Serial;
}

<div class="row">
    <div class="col-md-12 mt-2 " style="overflow-y:scroll">
        <table class="table table-bordered table-sm text-sm table-striped table-responsive-lg tblItemData" id="tblItemData">
            <thead class="btn-dark">
                <tr class="text-center">
                    <th>#SL </th>
                    <th class="hide"></th>
                    <th class="hide"></th>
                    <th>Parts Type Name</th>
                    <th>Parts Name</th>
                    <th>Parts Code</th>
                    <th class="hide"></th>
                    <th>Unit Name</th>
                    <th>Remarks</th>
                    <th>StateStatus</th>
                    <th>Entry User</th>
                    <th>Update User</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    sl = sl + 1;
                    badge = item.StateStatus.ToLower() == "active" ? "badge bg-success" : "badge bg-danger";
                    <tr>
                        <td class="text-center"><b>@sl</b></td>
                        <td class="hide">@item.ItemId</td>
                        <td class="hide">@item.ItemTypeId</td>
                        <td>@item.ItemTypeName</td>
                        <td>@item.ItemName</td>
                        <td class="text-center">@item.ItemCode</td>
                        <td class="hide">@item.UnitId</td>
                        <td class="text-center">@item.UnitName</td>
                        <td class="text-center">@item.Remarks</td>
                        <td class="text-center" data-val="@item.StateStatus">
                            <span class="@badge">@item.StateStatus</span>
                        </td>
                        <td class="text-center">@item.EntryUser</td>
                        <td class="text-center">@item.UpdateUser</td>
                        <td class="text-center">
                            @if (item.DescriptionId == null)
                            {
                                <a href="#" class="btn btn-warning btn-sm data-edit-item-Item" style="line-height:1" data-edit-item-Item="@item.ItemId"><i class="fa fa-pen"></i> Edit</a>
                            }
                        </td>
                    </tr>
                }
                @if (Model.Count() == 0)
                {
                    <tr class="text-center empty-row">
                        <td colspan="9">
                            No Rows Found
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-md-12 item">
        @Html.Partial("_Pagination", pagerData)
    </div>
</div>


<!--Data add & Edit-->
<!--Java Scripts Code-->
@*@section scripts{
        <script type="text/javascript">
            var hdfItemId = $("#hdfItemId");
            var txtItemName = $("#txtItemName");
            var ddlItemTypeName = $("#ddlItemTypeName");
            var ddlUnitName = $("#ddlUnitName");
            var txtRemarksItem = $("#txtRemarksItem");
            var chkStatestatusItem = $("#chkStatestatusItem");

            $(document).ready(function () {
                $('#tblItemData').DataTable({
                    "paging": true,
                    "lengthChange": false,
                    "searching": false,
                    "ordering": false,
                    "info": false,
                    "autoWidth": false,
                    "pageLength": 10,

                });
            })

            function OpenModalItem() {
                $("#spanModalHeadItem").text('Add New Item');
                $("#spanSaveTextItem").text('Save');
                $("#modalItem").modal("show");
                $(".error").addClass("hide");
            }

            $("#btnAddNewItem").click(function (e) {
                e.preventDefault();
                clearCtrlItem();
                OpenModalItem();
            })

            //Data add
            $("#btnSubmitItem").click(function (e) {
                e.preventDefault();
                $(".error").addClass("hide");
                if (validateForm() == true) {
                    var data = JSON.stringify({ ItemId: TryParseInt(hdfItemId.val(), 0), ItemName: txtItemName.val(), ItemTypeId: ddlItemTypeName.val(), UnitId: ddlUnitName.val(), Remarks: txtRemarksItem.val(), IsActive: chkStatestatusItem.is(":checked") });
                    console.log(data);
                    $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Inventory/SaveItem', data, getToken())).then(function (res, status) {
                        console.log(status);
                        console.log(res);
                        if (res == true) {
                            message("#msg1", "#modalItem");
                        }
                        else {
                            message("#msg2");
                        }
                        enable("#btnSubmitItem");
                    }).fail(function (err) {
                        console.log(err);
                        enable("#btnSubmitItem");
                    });
                }

            })
            //validation
            function validateFormItem() {
                $(".error").addClass("hide");
                var isValid = true;
                if ($.trim(txtItemName.val()) == "") {
                    $(".required-itemName").removeClass("hide");
                    isValid = false;
                }
                else {
                    var id = TryParseInt(hdfItemId.val(), 0);
                    if (ajaxBooleanChecker(JSON.stringify({ id: id, itemName: txtItemName.val().trim() }), '/Common/IsDuplicateItemName', getToken()) == true) {
                        $(".duplicate-itemName").removeClass("hide");
                        isValid = false;
                    }
                }
                if ($.trim(ddlItemTypeName.val()) == "") {
                    $(".required-itemTypeName").removeClass("hide");
                    isValid = false;
                }
                if ($.trim(ddlUnitName.val()) == "") {
                    $(".required-UnitName").removeClass("hide");
                    isValid = false;
                }

                return isValid;
            }

            ////data edit
            //$(".data-edit-item").click(function (e) {
            //    e.preventDefault()
            //    OpenModal()
            //});

            $(document).on("click", "a.data-edit-item-Item", function (e) {
                e.preventDefault();
                var id = $(this).attr("data-edit-item-Item");

                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Inventory/GetItemById', JSON.stringify({ id: id }), getToken())).then(function (res, status) {
                    console.log(res);
                    console.log(status);
                    if (res != null) {
                        hdfItemId.val(res.ItemId);
                        txtItemName.val(res.ItemName);
                        ddlItemTypeName.val(res.ItemTypeId);
                        ddlUnitName.val(res.UnitId);
                        txtRemarksItem.val(res.Remarks);
                        chkStatestatusItem.prop("checked", false);
                        if (res.IsActive === true) {
                            chkStatestatusItem.prop("checked", true);
                        }
                        OpenModalItem();
                        $("#spanModalHeadItem").text('Update Item');
                        $("#spanSaveTextItem").text('Update');
                    }
                    else {
                        alert("No data found..")
                    }
                }).fail(function (error) {
                    console.log(error);
                })
            })
            function clearCtrlItem() {
                hdfItemId.val('0');
                txtItemName.val('');
                ddlItemTypeName.val('');
                ddlUnitName.val('');
                txtRemarksItem.val('');
                chkStatestatusItem.prop("checked", false);
            }
        </script>
    }*@

