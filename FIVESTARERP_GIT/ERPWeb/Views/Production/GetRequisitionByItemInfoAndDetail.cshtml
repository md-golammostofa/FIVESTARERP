
@{
    ViewBag.Title = "Production Item Requisition";
}


<div class="row text-sm">
    <div class="col-md-12">
        <div class="card card-primary card-outline card-tabs">
            <div class="card-header p-0 pt-1 border-bottom-0">
                <ul class="nav nav-tabs" id="custom-tabs-two-tab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="custom-tabs-two-requisitionList-tab" data-toggle="pill" href="#custom-tabs-two-requisitionList" role="tab" aria-controls="custom-tabs-two-requisitionList" aria-selected="true">Requisition List</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-two-addBundleRequisition-tab" data-toggle="pill" href="#custom-tabs-two-addBundleRequisition" role="tab" aria-controls="custom-tabs-two-addBundleRequisition" aria-selected="true">Bundle Requisition</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-two-addSingleRequisition-tab" data-toggle="pill" href="#custom-tabs-two-addSingleRequisition" role="tab" aria-controls="custom-tabs-two-addSingleRequisition" aria-selected="true">Single Requisition</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-three-transferList-tab" data-toggle="pill" href="#custom-tabs-three-transferList" role="tab" aria-controls="custom-tabs-three-transferList" aria-selected="true">Mini Stock Transfer</a>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                @Html.AntiForgeryToken()
                <div class="tab-content" id="custom-tabs-two-tabContent">
                    <div class="tab-pane fade show active" id="custom-tabs-two-requisitionList" role="tabpanel" aria-labelledby="custom-tabs-two-requisitionList-tab">
                        <div class="row" style="margin-top:-15px">
                            <div class="col-md-12">
                                <div class="card card-gray-dark">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-3">
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">
                                                    Production Requisition List
                                                </h5>
                                            </div>
                                            <div class="col-md-3">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card card-navy">
                                    <div class="card-header">
                                        <h6 class="card-title">Search By</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row" style="margin-top:-15px">
                                            <div class="col-md-2">
                                                <label for="ddlRequisitionTypeList" class="control-label font-weight-bold">Req Type</label>
                                                @Html.DropDownList("ddlRequisitionTypeList", (IEnumerable<SelectListItem>)ViewBag.ddlRequisitionType, "--Select Type--", new { @class = "form-control form-control-sm ctrl-change" })
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlReqForList" class="control-label font-weight-bold">REQ For</label>
                                                <select id="ddlReqForList" class="form-control form-control-sm">
                                                    @*<option value="Production">Production</option>*@
                                                    <option value="Assembly" selected>Assembly</option>
                                                    @*<option value="Repair">Repair</option>*@
                                                    <option value="Packaging">Packaging</option>
                                                </select>
                                            </div>
                                            <div class="col-md-2">
                                                <label for="txtReqCodeList" class="control-label font-weight-bold">Req Code</label>
                                                <input type="text" id="txtReqCodeList" class="form-control form-control-sm" placeholder="Enter Code Here" />
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlWarehouseList" class="control-label font-weight-bold">Warehouse</label>
                                                @Html.DropDownList("ddlWarehouseList", (IEnumerable<SelectListItem>)ViewBag.ddlWarehouse, "--Select Warehouse--", new { @class = "form-control form-control-sm ctrl-change" })
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlModelNameList" class="control-label font-weight-bold">Model</label>
                                                @Html.DropDownList("ddlModelNameList", (IEnumerable<SelectListItem>)ViewBag.ddlModelName, "--Select Model--", new { @class = "form-control form-control-sm ctrl-change select2 select2-danger" })
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlStateStatusList" class="control-label font-weight-bold">Status</label>
                                                @Html.DropDownList("ddlStateStatusList", (IEnumerable<SelectListItem>)ViewBag.ddlStateStatus, "--Select Status--", new { @class = "form-control form-control-sm ctrl-change" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-2">
                                                <label for="ddlProductionFloorList" class="control-label font-weight-bold">Floor</label>
                                                @Html.DropDownList("ddlProductionFloorList", (IEnumerable<SelectListItem>)ViewBag.ddlProductionFloor, "--Select Floor--", new { @class = "form-control form-control-sm ctrl-change" })
                                            </div>
                                            <div class="col-md-2 reqFor-ddl assembly">
                                                <label for="ddlAssemblyList" class="control-label font-weight-bold">Assembly</label>
                                                <select class="form-control form-control-sm" id="ddlAssemblyList">
                                                    <option value="">--Select Assembly--</option>
                                                </select>
                                            </div>
                                            <div class="col-md-2 reqFor-ddl repair hide">
                                                <label for="ddlRepairList" class="control-label font-weight-bold">Repair</label>
                                                <select class="form-control form-control-sm" id="ddlRepairList">
                                                    <option value="">--Select Repair--</option>
                                                </select>
                                            </div>
                                            <div class="col-md-2 reqFor-ddl packaging hide">
                                                <label for="ddlPackagingList" class="control-label font-weight-bold">Packaging</label>
                                                <select class="form-control form-control-sm" id="ddlPackagingList">
                                                    <option value="">--Select Packaging--</option>
                                                </select>
                                            </div>
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">From Date</label>
                                                <div class="input-group input-group-sm ">
                                                    <input type="text" class="form-control form-control-sm date-datePicker ctrl-changed" id="dptFromDate" />
                                                    <div class="input-group-prepend cursor-pointer remove-date dptFromDate" style="cursor:pointer">
                                                        <span class="input-group-text">&#10008;</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">To Date</label>
                                                <div class="input-group input-group-sm ">
                                                    <input type="text" class="form-control form-control-sm date-datePicker ctrl-changed" id="dptToDate" />
                                                    <div class="input-group-prepend remove-date dptToDate" style="cursor:pointer">
                                                        <span class="input-group-text">&#10008;</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="col-md-12" id="dataContainer1">
                                            @{Html.RenderAction("GetRequisitionByItemInfoAndDetail", new { @flag = "View", @reqFlag = "Direct" });}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade show" id="custom-tabs-two-addBundleRequisition" role="tabpanel" aria-labelledby="custom-tabs-two-addRequisition-tab">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="card card-gray-dark">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-3">
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">
                                                    Add Bundle Requisition
                                                </h5>
                                            </div>
                                            <div class="col-md-3">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-body text-sm">
                                        <div class="row">
                                            <div class="col-md-1">
                                                <label for="ddlReqTypeRequisition" class="control-label">
                                                    REQ Type
                                                </label>
                                                @Html.DropDownList("ddlReqTypeRequisition", (IEnumerable<SelectListItem>)ViewBag.ddlRequisitionType, "--Type--", new { @class = "form-control form-control-sm ctrl-changed" })
                                                <span class="error hide req-type">Requisition Type is required</span>
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlReqForRequisition" class="control-label font-weight-bold">REQ For</label>
                                                <select id="ddlReqForRequisition" class="form-control form-control-sm">
                                                    <option value="Assembly" selected>Assembly</option>
                                                    <option value="Packaging">Packaging</option>
                                                    @*<option value="Production">Production</option>
                                        <option value="Repair">Repair</option>*@
                                                </select>
                                                <span class="error hide req-reqFor">REQ For is required</span>
                                            </div>
                                            <div class="col-md-2 reqFor assembly-REQ">
                                                <label for="ddlAssemblyLineWithProductionRequisition" class="control-label">Assembly</label>
                                                @Html.DropDownList("ddlAssemblyLineWithProductionRequisition", (IEnumerable<SelectListItem>)ViewBag.ddlAssemblyLineWithProduction, "--Select Assembly--", new { @class = "form-control form-control-sm" })
                                                <span class="error hide req-line">Assembly is required</span>
                                            </div>
                                            <div class="col-md-2 reqFor packaging-REQ hide">
                                                <label for="ddlPackagingLineWithProductionRequisition" class="control-label">Packaging</label>
                                                @Html.DropDownList("ddlPackagingLineWithProductionRequisition", (IEnumerable<SelectListItem>)ViewBag.ddlPackagingLineWithProduction, "--Select Packaging--", new { @class = "form-control form-control-sm" })
                                                <span class="error hide req-line">Packaging is required</span>
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlModelNameRequisition" class="control-label font-weight-bold">Model</label>
                                                @Html.DropDownList("ddlModelNameRequisition", (IEnumerable<SelectListItem>)ViewBag.ddlModelName, "--Select Model--", new { @class = "form-control form-control-sm ctrl-changed select2 select2-danger" })
                                                <span class="error hide req-model">Model is required</span>
                                            </div>
                                            <div class="col-md-3">
                                                <label for="ddlItemsRequisition" class="control-label font-weight-bold">Item/Item-Color</label>
                                                @Html.DropDownList("ddlItemsRequisition", (IEnumerable<SelectListItem>)ViewBag.ddlItems, "--Select Item-Color--", new { @class = "form-control form-control-sm select2 select2-danger" })
                                                <span class="error hide req-item">Item-Color is required</span>
                                                <span class="error hide dup-item">Duplicate item color</span>
                                            </div>
                                            <div class="col-md-1">
                                                <label for="txtQuantity" class="control-label font-weight-bold">Quantity</label>
                                                <input type="number" class="form-control form-control-sm" id="txtQuantity" />
                                                <span class="error hide req-qty">Quantity is required</span>
                                            </div>
                                            <div class="col-md-1">
                                                <label for="btnAddtoList" class="control-label font-weight-bold" style="visibility:hidden">Add</label>
                                                <div class="clearfix">
                                                    <button type="button" class="btn btn-sm btn-warning btn-flat" id="btnAddtoList">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mt-2">
                                            <div class="col-md-12">
                                                <div id="accordion">
                                                    <div class="card">
                                                        <div class="card-header" id="headingOne">
                                                            <h5 class="mb-0">
                                                                <button class="btn btn-link" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                                                                    Item/Item-Color
                                                                </button>
                                                            </h5>
                                                        </div>
                                                        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
                                                            <div class="card-body">
                                                                <table class="table table-bordered table-striped table-sm text-sm table-responsive-lg" id="tblItems"></table>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mt-2">
                                            <div class="col-md-12">
                                                <table class="table table-bordered table-striped table-sm text-sm table-responsive-lg" id="tblMergeItems">
                                                    <thead>
                                                        <tr>
                                                            <th colspan="9">
                                                                <button class="btn btn-outline-success btn-sm float-lg-left" id="btnSubmit">SAVE <i class="fas fa-paper-plane"></i></button>
                                                            </th>
                                                        </tr>
                                                        <tr class="text-center btn-dark">
                                                            <th style="width:5%">#SL</th>
                                                            <th style="width:45%">Item Name</th>
                                                            <th style="width:10%">Quantity</th>
                                                            <th style="width:10%">Type Of Unit</th>
                                                            <th style="width:20%" class="hide">Remarks</th>
                                                            <th style="width:10%" class="hide">Action</th>
                                                            <th class="hide itemType"></th>
                                                            <th class="hide item"></th>
                                                            <th class="hide "></th>
                                                            <th class="hide"></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade show" id="custom-tabs-two-addSingleRequisition" role="tabpanel" aria-labelledby="custom-tabs-two-addSingleRequisition-tab">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="card card-gray-dark">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-3">
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">
                                                    Add Single Requisition
                                                </h5>
                                            </div>
                                            <div class="col-md-3">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-body text-sm">
                                        <div class="row">
                                            <div class="col-md-1">
                                                <label for="ddlReqTypeSingleReq" class="control-label">
                                                    REQ Type
                                                </label>
                                                @Html.DropDownList("ddlReqTypeSingleReq", (IEnumerable<SelectListItem>)ViewBag.ddlRequisitionType, "--Type--", new { @class = "form-control form-control-sm ctrl-changed" })
                                                <span class="error hide req-single-type">Requisition Type is required</span>
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlReqForSingleReq" class="control-label font-weight-bold">REQ For</label>
                                                <select id="ddlReqForSingleReq" class="form-control form-control-sm">
                                                    <option value="Assembly" selected>Assembly</option>
                                                    <option value="Packaging">Packaging</option>
                                                    @*<option value="Production">Production</option>
                                        <option value="Repair">Repair</option>*@
                                                </select>
                                                <span class="error hide req-single-reqFor">REQ For is required</span>
                                            </div>
                                            <div class="col-md-2 reqFor-Single assembly-single-REQ">
                                                <label for="ddlAssemblyLineWithProductionSingleRequisition" class="control-label">Assembly</label>
                                                @Html.DropDownList("ddlAssemblyLineWithProductionSingleRequisition", (IEnumerable<SelectListItem>)ViewBag.ddlAssemblyLineWithProduction, "--Select Assembly--", new { @class = "form-control form-control-sm" })
                                                <span class="error hide req-single-line">Assembly is required</span>
                                            </div>
                                            <div class="col-md-2 reqFor-Single packaging-single-REQ hide">
                                                <label for="ddlPackagingLineWithProductionSingleRequisition" class="control-label">Packaging</label>
                                                @Html.DropDownList("ddlPackagingLineWithProductionSingleRequisition", (IEnumerable<SelectListItem>)ViewBag.ddlPackagingLineWithProduction, "--Select Packaging--", new { @class = "form-control form-control-sm" })
                                                <span class="error hide req-single-pack">Packaging is required</span>
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlModelNameSingleRequisition" class="control-label font-weight-bold">Model</label>
                                                @Html.DropDownList("ddlModelNameSingleRequisition", (IEnumerable<SelectListItem>)ViewBag.ddlModelName, "--Select Model--", new { @class = "form-control form-control-sm ctrl-changed select2 select2-danger" })
                                                <span class="error hide req-single-model">Model is required</span>
                                            </div>
                                            <div class="col-md-3">
                                                <label for="ddlItemsSingleRequisition" class="control-label font-weight-bold">Item</label>
                                                @Html.DropDownList("ddlItemsSingleRequisition", (IEnumerable<SelectListItem>)ViewBag.ddlItemsForSingleReq, "--Select Item--", new { @class = "form-control form-control-sm select2 select2-danger" })
                                                <span class="error hide req-single-item">Item is required</span>
                                                <span class="error hide dup-single-item">Duplicate item</span>
                                            </div>
                                            <div class="col-md-1">
                                                <label for="txtSingleQuantity" class="control-label font-weight-bold">
                                                    Qty
                                                    <span id="unitName" class="font-weight-bold mt-2" style="color:darkblue"></span>
                                                </label>
                                                <input type="number" class="form-control form-control-sm" id="txtSingleQuantity" />
                                                <span class="error hide req-single-qty">Quantity is required</span>
                                            </div>
                                            <div class="col-md-1">
                                                <label for="btnSingleAddtoList" class="control-label font-weight-bold" style="visibility:hidden">Add</label>
                                                <div class="clearfix">
                                                    <button type="button" class="btn btn-sm btn-warning btn-flat" id="btnSingleAddtoList">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mt-1">
                                            <div class="col-md-12">
                                                <table class="table table-bordered table-striped table-sm text-sm table-responsive-lg" id="tblSingleItems">
                                                    <thead>
                                                        <tr>
                                                            <th colspan="9">
                                                                <button class="btn btn-outline-success btn-sm float-lg-left" id="btnSingleSubmit">SAVE <i class="fas fa-paper-plane"></i></button>
                                                            </th>
                                                        </tr>
                                                        <tr class="text-center btn-dark">
                                                            <th style="width:5%">#SL</th>
                                                            <th style="width:45%">Item Name</th>
                                                            <th style="width:10%">Quantity</th>
                                                            <th style="width:10%">Type Of Unit</th>
                                                            <th style="width:20%" class="hide">Remarks</th>
                                                            <th style="width:10%">Action</th>
                                                            <th class="hide itemType"></th>
                                                            <th class="hide item"></th>
                                                            <th class="hide"></th>
                                                            <th class="hide"></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="custom-tabs-three-transferList" role="tabpanel" aria-labelledby="custom-tabs-three-transferList-tab">
                        <div class="row" style="margin-top:-15px">
                            <div class="col-md-12">
                                <div class="card card-gray-dark">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-3">
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">Mini Stock Transfer List</h5>
                                            </div>
                                            <div class="col-md-3">
                                                <a href="/Production/CreateMiniStockTransfer" class="float-right btn btn-sm btn-outline-primary">Add Transfer</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card card-navy">
                                    <div class="card-header">
                                        <h6 class="card-title">Search By</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row" style="margin-top:-15px">
                                            <div class="col-md-2">
                                                <label for="txtMSTCode" class="control-label font-weight-bold">Transfer Code</label>
                                                <input type="text" id="txtMSTCode" class="form-control form-control-sm" placeholder="Search By REQ Code" />
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlLineNumberTL" class="control-label font-weight-bold">Floor</label>
                                                @Html.DropDownList("ddlLineNumberTL", (IEnumerable<SelectListItem>)ViewBag.ddlProductionFloor, "--Select Floor--", new { @class = "form-control form-control-sm" })
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlPackagingTL" class="control-label font-weight-bold">Packaging Line</label>
                                                <select id="ddlPackagingTL" class="form-control form-control-sm">
                                                    <option value="0">--Select Packaging--</option>
                                                </select>
                                                <span class="error hide req-packaging">Packaging Line is required</span>
                                            </div>
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">From Date</label>
                                                <div class="input-group input-group-sm ">
                                                    <input type="text" class="form-control form-control-sm date-datePicker-transferItem ctrl-changed" id="dptFromDateTransferItem" />
                                                    <div class="input-group-prepend cursor-pointer remove-date-transferItem dptFromDate" style="cursor:pointer">
                                                        <span class="input-group-text">&#10008;</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">To Date</label>
                                                <div class="input-group input-group-sm ">
                                                    <input type="text" class="form-control form-control-sm date-datePicker-transferItem ctrl-changed" id="dptToDateTransferItem" />
                                                    <div class="input-group-prepend remove-date-transferItem dptToDate" style="cursor:pointer">
                                                        <span class="input-group-text">&#10008;</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <label for="ddlStateStatusTL" class="control-label font-weight-bold">State Status</label>
                                                <select class="form-control form-control-sm" id="ddlStateStatusTL">
                                                    <option value="">Select Status</option>
                                                    <option value="Send">Send</option>
                                                    <option value="Received">Received</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card">
                                    <div class="row">
                                        <div class="card-body">
                                            <div class="col-md-12" id="dataContainer3">
                                                @{Html.RenderAction("GetMiniStockTransferInfos", new { @flag = "View" });}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalReqDetails" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary">
                <input type="hidden" id="hdfReqInfoId" />
                <input type="hidden" id="hdfRowIndex" />
                <h4 id="modalHeading" class="modal-title">Requisition Item Details</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" id="modelDataContainer">

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalDetails" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary">
                <input type="hidden" id="hdTransferInfoId" />
                <h4 id="modalHeading" class="modal-title">Mini Stock Transfer Detail</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" id="modelDataContainer2">

            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">

        // Requisition List //
        var ddlRequisitionTypeList = $("#ddlRequisitionTypeList");
        var ddlReqForList = $("#ddlReqForList");
        var txtReqCodeList = $("#txtReqCodeList");
        var ddlWarehouseList = $("#ddlWarehouseList")
        var ddlModelNameList = $("#ddlModelNameList");
        var ddlStateStatusList = $("#ddlStateStatusList");
        var ddlProductionFloorList = $("#ddlProductionFloorList")
        var ddlAssemblyList = $("#ddlAssemblyList");
        var ddlRepairList = $("#ddlRepairList");
        var ddlPackagingList = $("#ddlPackagingList");
        var dptFromDate = $("#dptFromDate");
        var dptToDate = $("#dptToDate");
        var hdfReqInfoId = $("#hdfReqInfoId");
        var hdfRowIndex = $("#hdfRowIndex");

        // Add Requisition //
        var ddlReqTypeRequisition = $("#ddlReqTypeRequisition");
        var ddlReqForRequisition = $("#ddlReqForRequisition");
        var ddlAssemblyLineWithProductionRequisition = $("#ddlAssemblyLineWithProductionRequisition");
        var ddlPackagingLineWithProductionRequisition = $("#ddlPackagingLineWithProductionRequisition"); 
        var ddlModelNameRequisition = $("#ddlModelNameRequisition");
        var ddlItemsRequisition = $("#ddlItemsRequisition");
        var txtQuantity = $("#txtQuantity");
        var warehouseReq = '';
        var itemTypeReq = '';
        var itemReq = '';
        var productionReq = '';
        var assemblyReq = '';
        var packagingReq = '';

        // Single Item Requisition //
        var ddlReqTypeSingleReq = $("#ddlReqTypeSingleReq");
        var ddlReqForSingleReq = $("#ddlReqForSingleReq");
        var ddlAssemblyLineWithProductionSingleRequisition = $("#ddlAssemblyLineWithProductionSingleRequisition");
        var ddlPackagingLineWithProductionSingleRequisition = $('#ddlPackagingLineWithProductionSingleRequisition');
        var ddlModelNameSingleRequisition = $('#ddlModelNameSingleRequisition');
        var ddlItemsSingleRequisition = $("#ddlItemsSingleRequisition");
        var txtSingleQuantity = $("#txtSingleQuantity");
        var warehouseSingleReq = '';
        var itemTypeSingleReq = '';
        var itemSingleReq = '';

        // Transfer List
        var ddlLineNumberTL = $("#ddlLineNumberTL");
        var ddlPackagingTL = $("#ddlPackagingTL");
        var ddlStateStatusTL = $("#ddlStateStatusTL");
        var txtMSTCode = $("#txtMSTCode");
        var dptFromDateTransferItem = $("#dptFromDateTransferItem");
        var dptToDateTransferItem = $("#dptToDateTransferItem");

        $(document).ready(function () {
            //disable("#ddlReqForRequisition");
            //Initialize Select2 Elements
            $('.select2').select2();

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });
            dptFromDate.prop('readonly', true);
            dptToDate.prop('readonly', true);
            dptFromDate.css("background-color", "#fff");
            dptToDate.css("background-color", "#fff");
            $('#dptFromDate').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true
            });
            $('#dptToDate').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true
            });

            dptFromDateTransferItem.prop('readonly', true);
            dptToDateTransferItem.prop('readonly', true);
            dptFromDateTransferItem.css("background-color", "#fff");
            dptToDateTransferItem.css("background-color", "#fff");
            $('#dptFromDateTransferItem').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true
            });
            $('#dptToDateTransferItem').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true
            });
        })

        ddlReqForRequisition.change(function () {
            $(".reqFor").addClass('hide')
            if (ddlReqForRequisition.val() == "Assembly") {
                $(".assembly-REQ").removeClass('hide');
                ddlAssemblyLineWithProductionRequisition.val("");
            }
            if (ddlReqForRequisition.val() == "Packaging") {
                $(".packaging-REQ").removeClass('hide');
                ddlPackagingLineWithProductionRequisition.val("");
            }
        })

        function getItemDetailsByReq() {
            warehouseReq = '';
            itemTypeReq = '';
            itemReq = '';
            if (ddlItemsRequisition.val() != '') {
                itemReq = ddlItemsRequisition.val().substring(0, ddlItemsRequisition.val().indexOf("#"));
                itemTypeReq = ddlItemsRequisition.val().substring(ddlItemsRequisition.val().indexOf("#") + 1, ddlItemsRequisition.val().lastIndexOf("#"));
                warehouseReq = ddlItemsRequisition.val().substring(ddlItemsRequisition.val().lastIndexOf("#") + 1);
            }
        }

        $("#btnAddtoList").click(function (e) {
            e.preventDefault();
            disable("#ddlModelNameRequisition");
            getItemDetailsByReq();
            if (ValidateModelItems()) {
                disable("#ddlReqForRequisition");
                getItemDetailsByReq();
                var qty = TryParseInt(txtQuantity.val(), 0);
                var pType = ddlReqForRequisition.val() == "Packaging" ? preparationType.packaging : preparationType.production;
                var data = JSON.stringify({ type: pType, modelId: TryParseInt(ddlModelNameRequisition.val(), 0), itemId: TryParseInt(itemReq, 0) });
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/Production/GetBundleItems', data, getToken())).then(function (res, status) {
                    if (status === "success") {
                        console.log(res);
                        var itemName = dropDownSelectedText("ddlItemsRequisition");
                        if (matchWarehouse(res.details)) {
                            fnItemBundleTable(res.details, itemName, itemReq, itemTypeReq, warehouseReq, qty);
                            fnBindMergeItemsInTable(res.details, qty);
                            txtQuantity.val('0');
                            $('.toastrAdded').trigger("click");
                        }
                        else {
                            bootbox.alert("Previous <b>Item Warehouse</b> does <b>not</b> match with current <b>Item Warehouse</b>")
                        }
                    }
                    console.log(res);
                    console.log(status);
                }).fail(function (error) {
                    console.log(error);
                })
            }
        })

        function matchWarehouse(objDetail) {
            var isValid = true;
            var currenRowCount = $("#tblMergeItems tbody tr").length;
            if (currenRowCount > 0) {
                var wi = $("#tblMergeItems tbody").children('tr').eq(length - 1).children('td').eq('8').html();
                var dbWi = objDetail[0].WarehouseId;
                isValid = (TryParseInt(wi, 0) === dbWi);
                //console.log('dbWi');
                //console.log(dbWi);
                //console.log("wi");
                //console.log(wi);
                //if (TryParseInt(wi,0) === dbWi) {
                //    alert("I'm True")
                //}
            }
            return isValid;
        }

        function fnItemBundleTable(obj, itemName, itemId, itemTypeId, warehouseId, qty) {
            if (!$.isEmptyObject(obj)) {

                var alltHead = $("#tblItems").find('tr[data-row="head"]');
                var headId = alltHead.length > 0 ? alltHead.length + 1 : 1;
                var tdh1 = '<td colspan="10">' + itemName + ' (Qty-' + qty + ')' + '</td>'
                var tdh2 = '<td class="hide">' + itemId + '</td>';
                var tdh3 = '<td class="hide">' + itemTypeId + '</td>';
                var tdh4 = '<td class="hide">' + warehouseId + '</td>';
                var tdh5 = '<td class="hide">' + qty + '</td>';
                var trhead = '<tr class="btn-dark" data-row="head" data-head-itemid="' + itemId + '" data-head-id="' + headId + '">' + tdh1 + tdh2 + tdh3 + tdh4 + tdh5 + '</tr>';
                $("#tblItems").append(trhead);

                $.each(obj, function (index, item) {
                    var re = (item.Remarks === null) ? "" : item.Remarks;
                    var td1 = "<td class='text-center'><b>" + (index + 1) + "</b></td>"
                    //var td2 = "<td>" + item.ItemName + " [" + item.ItemTypeName + "]" + "</td>";
                    var td2 = "<td>" + item.ItemName + " [" + item.ItemTypeName + "-" + item.WarehouseName + "]" + "</td>";
                    var td3 = "<td class='text-center text-bold'>" + TryParseInt(txtQuantity.val(), 0) * item.Quantity + "</td>";
                    var td4 = "<td class='text-center'>" + item.UnitName + "</td>";
                    var td5 = "<td class='hide'>" + re + "</td>";
                    var td6 = "<td class='text-center hide'><a href='#' class='btn btn-sm btn-danger data-onfly-del hide'><i class='far fa-trash-alt'></i> Delete</a></td>";
                    var td7 = "<td class='hide'>" + item.ItemTypeId + "</td>";
                    var td8 = "<td class='hide'>" + item.ItemId + "</td>";
                    var td9 = "<td class='hide'>" + item.WarehouseId + "</td>";
                    var td10 = "<td class='hide'>" + item.Quantity + "</td>";
                    var tr = "<tr class='tr-data-row' data-row='item' data-row-headId='" + headId + "' data-item-id='" + item.ItemId + "'>" + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9 + td10 + "</tr>";
                    $("#tblItems").append(tr);
                    //clearCtrl();
                })
            }
            else {
                bootbox.alert('Bundle not found');
            }
        }

        function clearCtrl() {
            $("#tblMergeItems tbody").empty();
            $("#tblItems").empty();
            $("#ddlReqTypeRequisition").val('');
            enable("#ddlReqTypeRequisition");
            enable("#ddlReqForRequisition");
            ddlAssemblyLineWithProductionRequisition.val('');
            ddlModelNameRequisition.val('')
            enable("#ddlModelNameRequisition");
            ddlModelNameRequisition.trigger('change');
            ddlItemsRequisition.val('');
            ddlItemsRequisition.trigger('change');
            txtQuantity.val('0');
        }

        function fnBindMergeItemsInTable(obj, qty) {
            if (!$.isEmptyObject(obj) && qty > 0) {
                $.each(obj, function (index, item) {
                    var trExist = $("#tblMergeItems tbody").find("tr[data-item-id='" + item.ItemId + "']");
                    if (trExist.length > 0) {

                        var oldQty = trExist.children('td').eq(2).html();
                        var newQty = TryParseInt(txtQuantity.val(), 0) * item.Quantity;
                        var total = TryParseInt(oldQty) + newQty;
                        trExist.children('td').eq(2).html(total);
                    }
                    else {
                        var sl = $("#tblMergeItems tbody tr").length;
                        var re = (item.Remarks === null) ? "" : item.Remarks;
                        var td1 = "<td class='text-center'><b>" + (sl + 1) + "</b></td>"
                        var td2 = "<td>" + item.ItemName + " [" + item.ItemTypeName + "-" + item.WarehouseName + "]" + "</td>";
                        var td3 = "<td class='text-center text-bold'>" + TryParseInt(txtQuantity.val(), 0) * item.Quantity + "</td>";
                        var td4 = "<td class='text-center text-bold'>" + item.UnitName + "</td>";
                        var td5 = "<td class='hide'>" + re + "</td>";
                        var td6 = "<td class='text-center hide'><a href='#' class='btn btn-sm btn-danger data-onfly-del hide'><i class='far fa-trash-alt'></i> Delete</a></td>";
                        var td7 = "<td class='hide'>" + item.ItemTypeId + "</td>";
                        var td8 = "<td class='hide'>" + item.ItemId + "</td>";
                        var td9 = "<td class='hide'>" + item.WarehouseId + "</td>";
                        var td10 = "<td class='hide'>" + item.Quantity + "</td>";
                        var tr = "<tr class='tr-data-row' data-item-id='" + item.ItemId + "'>" + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9 + td10 + "</tr>";
                        $("#tblMergeItems tbody").append(tr);
                    }
                })
            }
        }

        function ValidateModelItems() {
            var isValid = true;
            $('.error').addClass("hide");
            getItemDetailsByReq();
            var itemInfos = $("#tblItems").find("tr[data-head-itemid='" + itemReq + "']");
            if (itemInfos.length > 0) {
                $('.dup-item').removeClass("hide");
                isValid = false;
            }
            if (TryParseInt(ddlModelNameRequisition.val(), 0) <= 0) {
                $('.req-model').removeClass("hide");
                isValid = false;
            }

            if (TryParseInt(itemReq, 0) <= 0 || TryParseInt(itemTypeReq, 0) <= 0 || TryParseInt(warehouseReq, 0) <= 0) {
                $('.req-item').removeClass("hide");
                isValid = false;
            }
            if (TryParseInt(txtQuantity.val(), 0) <= 0) {
                $(".req-qty").removeClass("hide");
                isValid = false;
            }
            return isValid;
        }

        function getProductionFloorAndAssembly() {
            productionReq = '';
            assemblyReq = '';
            packagingReq = '';
            if (ddlAssemblyLineWithProductionRequisition.val() != '') {
                var val = ddlAssemblyLineWithProductionRequisition.val();
                assemblyReq = val.substring(0, val.lastIndexOf("#"));
                productionReq = val.substring(val.lastIndexOf("#") + 1);
            }
        }

        function getProductionFloorAndPackaging() {
            productionReq = '';
            packagingReq = '';
            assemblyReq=''
            if (ddlPackagingLineWithProductionRequisition.val() != '') {
                var val = ddlPackagingLineWithProductionRequisition.val();
                packagingReq = val.substring(0, val.lastIndexOf("#"));
                productionReq = val.substring(val.lastIndexOf("#") + 1);
            }
        }

        $('#btnSubmit').click(function (e) {
            e.preventDefault();
            if (1 === 1) {
                fnReqForIds();
                var wi = $("#tblMergeItems tbody").children('tr').eq(length - 1).children('td').eq('8').html();
                var RequisitionInfo = {
                    RequisitionType: ddlReqTypeRequisition.val(),
                    RequisitionFor: ddlReqForRequisition.val(),
                    LineId: productionReq,
                    AssemblyLineId: TryParseInt(assemblyReq,0),
                    DescriptionId: TryParseInt(ddlModelNameRequisition.val(), 0),
                    WarehouseId: TryParseInt(wi, 0),
                    ItemTypeId: 0,
                    ItemId: 0,
                    ForQty: txtQuantity.val(),
                    UnitId: 0,
                    PackagingLineId: TryParseInt(packagingReq, 0)
                };
                RequisitionInfo.RequisitionItemInfos = fnGetItemObj();

                var reqDetails = []; reqDetails.length = 0;
                $.each($("#tblMergeItems tbody tr"), function (index, item) {
                    var tds = $(this).children('td');
                    var iTypeId = tds.eq('6').html();
                    var iId = tds.eq('7').html();
                    var wId = tds.eq('8').html();
                    var qty = tds.eq('2').html();
                    reqDetails.push({
                        ItemTypeId: iTypeId,
                        ItemId: iId,
                        WarehouseId: wId,
                        Quantity: qty,
                        ReqInfoId: 0,
                    });
                })
                RequisitionInfo.RequisitionDetails = reqDetails;

                console.log("Requisition Object");
                console.log(RequisitionInfo);
                var data = JSON.stringify({ model: RequisitionInfo })
                
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/Production/SaveRequisitionWithItemInfoAndDetail', data, getToken())).then(function (res, status) {
                    console.log(res);
                    console.log(status);
                    if (res === true) {
                        clearCtrl();
                        toastrSuccessAlert(execuStatus.successSave);
                        LoadDataTableForReqList();
                        $("#custom-tabs-two-requisitionList-tab").trigger('click');
                    }
                }).fail(function (error) {

                })
            }
        })

        function fnReqForIds() {
            if (ddlReqForRequisition.val() == "Assembly") {
                getProductionFloorAndAssembly();
            }
            if (ddlReqForRequisition.val() == "Packaging") {
                getProductionFloorAndPackaging()
            }
        }

        function fnGetItemObj() {
            var itemObj = [];
            var allItemHead = $("#tblItems").find('tr[data-row="head"]');
            $.each(allItemHead, function (index, item) {
                var trInfotds = $(this).children('td');
                var itemInfoId = trInfotds.eq('1').html();
                var itemTypeInfoId = trInfotds.eq('2').html();
                var warehouseInfoId = trInfotds.eq('3').html();
                var qtyInfo = trInfotds.eq('4').html();

                fnReqForIds();

                var details = []; details.length = 0;
                var trDetails = $("#tblItems").find('tr[data-row-headId="' + $(this).attr('data-head-id') + '"]');
                $.each(trDetails, function (idx, itm) {
                    var trDetailtds = $(this).children('td');
                    var totalQuantity = trDetailtds.eq('2').html();
                    var itemTypeDetailId = trDetailtds.eq('6').html();
                    var itemDetailId = trDetailtds.eq('7').html();
                    var warehouseDetailID = trDetailtds.eq('8').html();
                    var consumptionQty = trDetailtds.eq('9').html();

                    details.push({
                        ItemName: trDetailtds.eq('1').html(),
                        ItemId: itemDetailId,
                        ItemTypeId: itemTypeDetailId,
                        WarehouseId: warehouseDetailID,
                        ConsumptionQty: consumptionQty,
                        TotalQuantity: totalQuantity
                    })
                })

                itemObj.push({
                    FloorId: productionReq,
                    AssemblyLineId: TryParseInt(assemblyReq, 0),
                    PackagingLineId: TryParseInt(packagingReq,0),
                    DescriptionId: ddlModelNameRequisition.val(),
                    ItemName: trInfotds.eq('0').html(),
                    ItemId: itemInfoId,
                    ItemTypeId: itemTypeInfoId,
                    WarehouseId: warehouseInfoId,
                    Quantity: qtyInfo,
                    ReqInfoId: 0,
                    RequisitionItemDetails: details
                });
            })
            return itemObj;
        }

        // Requisition List //

        ddlReqForList.change(function () {
            ddlAssemblyList.val('');
            ddlRepairList.val('');
            ddlPackagingList.val('');
            $(".reqFor-ddl").addClass("hide")
            if (ddlReqForList.val() =="Assembly") {
                $(".assembly").removeClass("hide");
            }
            if (ddlReqForList.val() == "Repair") {
                $(".repair").removeClass("hide");
            }
            if (ddlReqForList.val() == "Packaging") {
                $(".packaging").removeClass("hide");
            }
            LoadDataTableForReqList();
        })

        ddlRequisitionTypeList.change(function () {
            LoadDataTableForReqList();
        })

        txtReqCodeList.keyup(function () {
            LoadDataTableForReqList();
        })

        ddlWarehouseList.change(function () {
            LoadDataTableForReqList();
        })

        ddlModelNameList.change(function () {
            LoadDataTableForReqList();
        })

        ddlStateStatusList.change(function () {
            LoadDataTableForReqList();
        })

        ddlProductionFloorList.change(function () {
            clearDropdown('ddlAssemblyList');
            clearDropdown('ddlRepairList'); 
            clearDropdown('ddlPackagingList');
            LoadDataTableForReqList();
            if (ddlProductionFloorList.val() != "") {
                LoadDropDown('/Common/GetAssembliesByLine', 'POST', ddlAssemblyList, JSON.stringify({ lineId: ddlProductionFloorList.val() }));
                LoadDropDown('/Common/GetRepairLineByLine', 'POST', ddlRepairList, JSON.stringify({ lineId: ddlProductionFloorList.val() }));
                LoadDropDown('/Common/GetPackagingLineByLine', 'POST', ddlPackagingList, JSON.stringify({ lineId: ddlProductionFloorList.val() }));
            }
            
        })

        ddlAssemblyList.change(function () {
            LoadDataTableForReqList();
        })

        ddlRepairList.change(function () {
            LoadDataTableForReqList();
        })

        dptFromDate.change(function () {
            LoadDataTableForReqList();
        })

        dptToDate.change(function () {
            LoadDataTableForReqList();
        })

        ddlPackagingList.change(function () {
            LoadDataTableForReqList();
        })

        $(document).on('click', 'div.remove-date', function () {
            if ($(this).hasClass("dptToDate")) {
                if (dptToDate.val() !== '') {
                    dptToDate.val('');
                    LoadDataTableForReqList();
                }
            }
            if ($(this).hasClass("dptFromDate")) {
                if (dptFromDate.val() !== '') {
                    dptFromDate.val('');
                    LoadDataTableForReqList();
                }
            }
        })

        function LoadDataTableForReqList() {
            var data = { flag: "search", floorId: TryParseInt(ddlProductionFloorList.val(), 0), assemblyId: TryParseInt(ddlAssemblyList.val(), 0), packagingId: TryParseInt(ddlPackagingList.val(),0), repairLineId:0,warehouseId: TryParseInt(ddlWarehouseList.val(), 0), modelId: TryParseInt(ddlModelNameList.val(), 0), reqCode: txtReqCodeList.val(), reqType: ddlRequisitionTypeList.val(), reqFor: ddlReqForList.val(), fromDate: dptFromDate.val(), toDate: dptToDate.val(), status: ddlStateStatusList.val(), reqInfoId: 0, reqFlag: "Direct"};

            $.when(getReqWithData(dataType.html, type.post, '/Production/GetRequisitionByItemInfoAndDetail', data)).then(function (res, status)
            {
                if (status === "success") {
                    $("#dataContainer1").fadeOut('500', function () {
                        $("#dataContainer1").empty();
                        $("#dataContainer1").append(res).fadeIn('500');
                    });
                }
            }).fail(function (error) {
                console.log(error);
            })
        }

        // Requisition Modal
        function OpenModal() {
            $("#modelDataContainer").empty();
            hdfReqInfoId.val('0');
            hdfRowIndex.val("");
            $("#modalReqDetails").modal("show");
        }

        $(document).on("click", "a.data-details", function (e) {
            e.preventDefault();
            OpenModal();
            var data = {
                flag:flag.detail,
                reqInfoId: TryParseInt($(this).attr("data-details"), 0)
            };
            var idx = $(this).parent().parents('tr').index();
            $.when(getReqWithData('html', 'GET', '/Production/GetRequisitionByItemInfoAndDetail', data)).then(function (res, status) {
                if (status == "success") {
                    OpenModal();
                    hdfReqInfoId.val(data.reqId);
                    hdfRowIndex.val(idx)
                    $("#modelDataContainer").empty();
                    $("#modelDataContainer").append(res);
                }
            }).fail(function (error) {
                console.log(error);
            })
        })

        // Single Item Requisition //
        ddlReqForSingleReq.change(function () {
            $(".reqFor-Single").addClass('hide')
            if (ddlReqForSingleReq.val() == "Assembly") {
                $(".assembly-single-REQ").removeClass('hide');
                ddlAssemblyLineWithProductionSingleRequisition.val("");
            }
            if (ddlReqForSingleReq.val() == "Packaging") {
                $(".packaging-single-REQ").removeClass('hide');
                ddlPackagingLineWithProductionSingleRequisition.val("");
            }
        })

        function getItemDetailsBySingleReq() {
            warehouseSingleReq = '';
            itemTypeSingleReq = '';
            itemSingleReq = '';
            if (ddlItemsSingleRequisition.val() != '') {
                itemSingleReq = ddlItemsSingleRequisition.val().substring(0, ddlItemsSingleRequisition.val().indexOf("#"));
                itemTypeSingleReq = ddlItemsSingleRequisition.val().substring(ddlItemsSingleRequisition.val().indexOf("#") + 1, ddlItemsSingleRequisition.val().lastIndexOf("#"));
                warehouseSingleReq = ddlItemsSingleRequisition.val().substring(ddlItemsSingleRequisition.val().lastIndexOf("#") + 1);
            }
        }

        ddlItemsSingleRequisition.change(function () {
            $("#unitName").text('');
            getItemDetailsBySingleReq();
            if (TryParseInt(itemSingleReq, 0) > 0) {
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Common/GetUnitByItemId', JSON.stringify({ itemId: TryParseInt(itemSingleReq, 0) }), getToken())).then(function (res, status) {
                    console.log(res);
                    console.log(status);
                    if (res != null && status == "success") {
                        $("#unitName").text('('+res.UnitSymbol+')');
                    }
                }).fail(function (error) {
                    consoleLog(error);
                })
            }
        })

        function validateSingleAddToList() {
            var isValid = true;
            $(".error").addClass('hide');
            if (ddlItemsSingleRequisition.val() == "") {
                $(".req-single-item").removeClass('hide');
                isValid = false;
            }
            else {
                var count = 0;
                $.each($("#tblSingleItems tbody tr"), function (index, item) {
                    var rowItemId = $(this).children('td').eq('7').html();
                    getItemDetailsBySingleReq();
                    if (TryParseInt(itemSingleReq, 0) == TryParseInt(rowItemId, 0)) {
                        count++;
                    }
                })
                if (count > 0) {
                    $(".dup-single-item").removeClass('hide');
                    isValid = false;
                }
            }
            if (TryParseInt(txtSingleQuantity.val(), 0) <= 0) {
                $(".req-single-qty").removeClass('hide');
                isValid = false;
            }
            return isValid;
        }

        function validateSingleReqSubmit() {
            var isValid = true;
            $(".error").addClass("hide");
            if (ddlReqTypeSingleReq.val() == "") {
                $(".req-single-type").removeClass('hide');
                isValid = false;
            }
            if (ddlReqForSingleReq.val() == "") {
                isValid = false;
                $(".req-single-reqFor").removeClass('hide');
            }
            else {
                if (ddlReqTypeSingleReq.val() == "Assembly") {
                    if (ddlAssemblyLineWithProductionSingleRequisition.val() == "") {
                        isValid = false;
                        $(".req-single-line").removeClass('hide');
                    }
                }
                else if (ddlReqTypeSingleReq.val() == "Packaging") {
                    if (ddlPackagingLineWithProductionSingleRequisition.val() == "") {
                        isValid = false;
                        $(".req-single-pack").removeClass('hide');
                    }
                }
            }
            if (ddlModelNameSingleRequisition.val() == "") {
                isValid = false;
                $(".req-single-model").removeClass('hide');
            }

            if ($("#tblSingleItems tbody tr").length == 0) {
                toastrErrorAlert("No row(s) found to save");
                isValid = false;
            }
            return isValid;
        }

        function clearAllFOrSingleReq() {
            $(".error").addClass('hide');
            $("#ddlReqTypeSingleReq").val("")
            ddlAssemblyLineWithProductionSingleRequisition.val("");
            ddlPackagingLineWithProductionSingleRequisition.val("");
            ddlModelNameSingleRequisition.val("");
            ddlModelNameSingleRequisition.trigger("change");
            ddlItemsSingleRequisition.val("");
            ddlItemsSingleRequisition.trigger("change");
            txtSingleQuantity.val('0');
            $("#tblSingleItems tbody").empty();
        }

        $("#btnSingleAddtoList").click(function (e) {
            e.preventDefault();
            if (validateSingleAddToList()) {
                getItemDetailsBySingleReq();
                var sl = $("#tblSingleItems tbody tr").length;
                var re = ''; //(item.Remarks === null) ? "" : item.Remarks;
                var td1 = "<td class='text-center'><b>" + (sl + 1) + "</b></td>"
                var td2 = "<td>" + dropDownSelectedText("ddlItemsSingleRequisition") + "</td>";
                var td3 = "<td class='text-center text-bold'>" + TryParseInt(txtSingleQuantity.val(), 0)+ "</td>";
                var td4 = "<td class='text-center text-bold'>" + $("#unitName").text(); + "</td>";
                var td5 = "<td class='hide'>" + re + "</td>";
                var td6 = "<td class='text-center'><a href='#' class='btn btn-sm btn-danger data-onfly-single-del'><i class='far fa-trash-alt'></i> Delete</a></td>";
                var td7 = "<td class='hide'>" + itemTypeSingleReq + "</td>";
                var td8 = "<td class='hide'>" + itemSingleReq + "</td>";
                var td9 = "<td class='hide'>" + warehouseSingleReq + "</td>";
                var td10 = "<td class='hide'>" + txtSingleQuantity.val() + "</td>";
                var tr = "<tr>" + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9 + td10 + "</tr>";
                $("#tblSingleItems tbody").append(tr);
                txtSingleQuantity.val('0');
                ddlItemsRequisition.val('')
            }
        })

        $(document).on("click", "a.data-onfly-single-del", function (e) {
            e.preventDefault();
            var index = $(this).parent().parents('tbody tr').index();
            removeTableRow("#tblSingleItems tbody", index);
            fnFixTheTbodyRowSerial("#tblSingleItems", index);
        })

        $("#btnSingleSubmit").click(function (e) {
            e.preventDefault();
            $(".error").addClass("hide");
            if (validateSingleReqSubmit() === true) {
                bootbox.confirm("Are you sure you want to save", function (result) {
                    if (result === true) {
                        disable("#btnSingleSubmit")
                        var reqDetails = [];
                        reqDetails.length = 0;

                        var wi = $("#tblSingleItems tbody").children('tr').eq(0).children('td').eq(8).html();
                        $.each($("#tblSingleItems tbody tr"), function (index, item) {
                            var tds = $(this).children('td');
                            var iTypeId = tds.eq('6').html();
                            var iId = tds.eq('7').html();
                            var qty = tds.eq('2').html();
                            var rmk = tds.eq('4').html();
                            reqDetails.push({
                                ReqDetailId: 0,
                                WarehouseId: wi,
                                ItemTypeId: TryParseInt(iTypeId, 0),
                                ItemId: TryParseInt(iId, 0),
                                Quantity: TryParseInt(qty, 0),
                                Remarks: rmk
                            })
                        })

                        var floorId = 0;
                        var assemblyId = 0;
                        var packagingId = 0;
                        if (ddlReqForSingleReq.val() == "Assembly") {
                            var itemValue = ddlAssemblyLineWithProductionSingleRequisition.val();
                            assemblyId = itemValue.substring(0, itemValue.indexOf("#"));
                            floorId = itemValue.substring(itemValue.indexOf("#")+1);
                        }
                        else if (ddlReqForSingleReq.val() == "Packaging") {
                            var itemValue = ddlPackagingLineWithProductionSingleRequisition.val();
                            packagingId = itemValue.substring(0, itemValue.indexOf("#"));
                            floorId = itemValue.substring(itemValue.indexOf("#") + 1);
                        }
                        var requsitionInfo =
                        {
                            ReqInfoId: 0,
                            LineId: floorId,
                            WarehouseId: wi,
                            DescriptionId: TryParseInt(ddlModelNameSingleRequisition.val(), 0),
                            RequisitionType: ddlReqTypeSingleReq.val(),
                            RequisitionFor: ddlReqForSingleReq.val(),
                            ItemTypeId: 0,
                            ItemId: 0,
                            ForQty: 0,
                            AssemblyLineId: assemblyId,
                            PackagingLineId: packagingId,
                            IsBundle: false,
                            ReqDetails: reqDetails,
                            Flag:"Direct"
                        };
                        console.log("Final Data");
                        var data = JSON.stringify({ model: requsitionInfo });
                        console.log(data);

                        //return;
                        $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Production/SaveRequsition', data, getToken())).then(function (res, status) {
                            console.log(res);
                            console.log(status);
                           
                            if (res == true) {
                                toastrSuccessAlert(execuStatus.successSave);
                                hdfReqInfoId.val("0");
                                setTimeout(function () {
                                    //LoadDataTableForReqList();
                                }, 1000);

                            }
                            else {
                                toastrErrorAlert(execuStatus.fail);
                            }
                            enable("#btnSingleSubmit")
                        }).fail(function (error) {
                            consoleLog(error);
                            toastrErrorAlert(execuStatus.fail);
                            enable("#btnSingleSubmit")
                        })
                    }
                })
            }
        })

        // Transfer List //
        ddlLineNumberTL.change(function () {
            LoadTransferListDataTable();
            clearDropdown("ddlPackagingTL");
            if (ddlLineNumberTL.val() != "") {
                LoadDropDown('/Common/GetPackagingLineByLine', 'POST', ddlPackagingTL, JSON.stringify({ lineId: ddlLineNumberTL.val() }));
            }
        })

        ddlPackagingTL.change(function () {
            LoadTransferListDataTable();
        })

        $(document).on('click', 'div.remove-date-transferItem', function () {
            if ($(this).hasClass("dptToDate")) {
                if (dptToDateTransferItem.val() !== '') {
                    dptToDateTransferItem.val('');
                    LoadTransferListDataTable();
                }
            }
            if ($(this).hasClass("dptFromDate")) {
                if (dptFromDateTransferItem.val() !== '') {
                    dptFromDateTransferItem.val('');
                    LoadTransferListDataTable();
                }
            }
        })
        dptFromDateTransferItem.change(function () {
            LoadTransferListDataTable();
        })

        dptToDateTransferItem.change(function () {
            LoadTransferListDataTable();
        })

        txtMSTCode.keyup(function () {
            LoadTransferListDataTable();
        })

        ddlStateStatusTL.change(function () {
            LoadTransferListDataTable();
        })

        function LoadTransferListDataTable() {
            //string flag,long? floorId,long? packagingLineId, string status, string fromDate, string toDate, string transferCode, long? transferId
            var data = { flag: "view", floorId: TryParseInt(ddlLineNumberTL.val(), 0), packagingLineId: TryParseInt(ddlPackagingTL.val(), 0), status: ddlStateStatusTL.val(), fromDate: dptFromDateTransferItem.val(), toDate: dptToDateTransferItem.val(), transferCode: txtMSTCode.val(), transferInfoId: 0 };

            $.when(getReqWithData('html', 'GET', '/Production/GetMiniStockTransferInfos', data)).then(function (res, status) {
                console.log(status);
                if (status === "success") {
                    $("#dataContainer3").fadeOut('500', function () {
                        $("#dataContainer3").empty();
                        $("#dataContainer3").append(res).fadeIn('500');
                        //$(".cell-action").addClass('hide');
                    });
                }
            }).fail(function (error) {
                console.log(error);
            });
            pageNo = 1;
        }

        $(document).on('click', 'a.data-item-transfer', function (e) {
            e.preventDefault();
            var id = $(this).attr("data-item-val");
            //alert(id);
            //return;
            if (TryParseInt(id, 0) > 0) {
                LoadDetails(id);
            }
        })

        function LoadDetails(id) {

            var data = { flag: "detail", floorId: 0, packagingLineId: 0, modelId: 0, itemTypeId: 0, itemId: 0, status: 0, transferId: id, fromDate: "", toDate: "" };

            $.when(getReqWithData('html', 'GET', '/Production/GetMiniStockTransferInfos', data)).then(function (res, status) {
                console.log(status);
                if (status === "success") {
                    $("#modalDetails").modal("show");
                    $("#modelDataContainer2").empty();
                    $("#modelDataContainer2").append(res);
                    $(".btnReceiveMiniStock").addClass('hide');
                    $(".btnSendMiniStock").addClass('hide');
                }
            }).fail(function (error) {
                console.log(error);
            });

        }

    </script>
}