
@{
    ViewBag.Title = "Transfer To Packaging Line";
}
<div class="row">
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-3">
                <a href="/Production/GetPackagingLineTransferList" class="btn btn-sm btn-outline-primary" title="Back To List"><i class="fas fa-arrow-alt-circle-left"></i></a>
            </div>
            <div class="col-md-6 text-center">
                <h4 style="color:darkblue"><b>Transfer To Packaging Line</b></h4>
            </div>
            <div class="col-md-3">
                <button class="btn btn-outline-danger btn-sm float-right" id="btnReset" title="RESET UI"><i class="fas fa-sync-alt"></i></button>
            </div>
        </div>
        <hr />
    </div>
    <div class="col-md-12">
        <form id="frmQC">
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-md-3">
                    <label for="ddlLineNumber" class="control-label font-weight-bold">
                        Production Floor
                        <div class="icheck-primary d-inline text-primary">
                            <input type="checkbox" id="chkIsBundle">
                            <label for="chkIsBundle">
                                (Use Bundle?)
                            </label>
                        </div>
                    </label>
                    @Html.DropDownList("ddlLineNumber", (IEnumerable<SelectListItem>)ViewBag.ddlLineNumber, "--Select Floor--", new { @class = "form-control form-control-sm" })
                    <span class="error hide req-line">Line Number is required</span>
                </div>
                <div class="col-md-3">
                    <label for="ddlModelName" class="control-label font-weight-bold">Model</label>
                    @Html.DropDownList("ddlModelName", (IEnumerable<SelectListItem>)ViewBag.ddlModelName, "--Select Model--", new { @class = "form-control form-control-sm select2 select2-danger" })
                    <span class="error hide require-model">Model is required</span>
                </div>
                <div class="col-md-3 hide">
                    <label for="ddlQCLine" class="control-label font-weight-bold">QC Line</label>
                    <select id="ddlQCLine" class="form-control form-control-sm">
                        <option value="0">--Select QC Line--</option>
                    </select>
                    <span class="error hide require-qc">QC line is required</span>
                </div>
                <div class="col-md-3">
                    <label for="ddlPackagingLine" class="control-label font-weight-bold">Packaging Line From</label>
                    <select id="ddlPackagingLine" class="form-control form-control-sm">
                        <option value="0">--From Packaging Line--</option>
                    </select>
                    <span class="error hide req-packaging">From Packaging line is required</span>
                </div>
                <div class="col-md-3">
                    <label for="ddlPackagingLine2" class="control-label font-weight-bold">Packaging Line To</label>
                    <select id="ddlPackagingLine2" class="form-control form-control-sm">
                        <option value="0">--To Packaging Line--</option>
                    </select>
                    <span class="error hide req-packaging2">To Packaging line is required</span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <label for="ddlWarehouse" class="control-label font-weight-bold">Warehouse Name</label>
                    @Html.DropDownList("ddlWarehouse", (IEnumerable<SelectListItem>)ViewBag.ddlWarehouse, "--Select Warehouse--", new { @class = "form-control form-control-sm " })
                    <span class="error hide req-warehouse">Warehouse is required</span>
                </div>
                <div class="col-md-3">
                    <label for="ddlItemType" class="control-label font-weight-bold">ItemType Name</label>
                    <select id="ddlItemType" class="form-control form-control-sm">
                        <option value="">--Select Item Type--</option>
                    </select>
                    <span class="error hide req-itemType">ItemType Name is required</span>
                </div>
                <div class="col-md-3">
                    <label for="ddlItem" class="control-label font-weight-bold">Item Name</label>
                    <select id="ddlItem" class="form-control form-control-sm">
                        <option value="">--Select Item--</option>
                    </select>
                    <span class="error hide req-item">Item Name is required</span>
                    <span class="error hide duplicate-itemName">The Item is already exist!</span>
                </div>
                <div class="col-md-3">
                    <label for="txtQuantity" class="control-label font-weight-bold">
                        Quantity
                        <span id="stockQty"></span>
                    </label>
                    <div class="input-group col-md-8">
                        <input type="number" id="txtQuantity" class="form-control form-control-sm" />
                        <span id="unitName" class="font-weight-bold mt-2" style="color:darkblue"></span>
                    </div>
                    <span class="error hide require-quantity">Quantity is required</span>
                    <span class="error hide req-stockOver">Stock not available</span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <label for="txtRemarks" class="control-label font-weight-bold">Remarks</label>
                    <textarea type="text" name="remarks" cols="5" rows="1" value="" id="txtRemarks" class="form-control form-control-sm"></textarea>
                </div>
                <div class="col-md-3">
                    <label for="" class="control-label font-weight-bold" style="visibility:hidden">Add To List</label>
                    <div class="clearfix">
                        <button type="submit" class="btn btn-sm btn-warning float-left" id="btnAddToList" title="Add To List"><i class="fas fa-plus"></i> Add To List </button>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12" id="itemQtyError">
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-bordered table-sm table-striped table-responsive-lg" id="tblData">
                        <thead>
                            <tr>
                                <th colspan="9">
                                    <span class="error hide empty-table">Add item(s) into the table</span>
                                    <button class="btn btn-outline-success btn-sm float-lg-right" id="btnSubmit">SAVE <i class="fas fa-paper-plane"></i></button>
                                </th>
                            </tr>
                            <tr class="text-center btn-dark">
                                <th>#SL</th>
                                <th class="hide"></th>
                                <th>ItemType Name</th>
                                <th class="hide"></th>
                                <th>Item Name</th>
                                <th>Quantity</th>
                                <th>Type Of Unit</th>
                                <th>Remarks</th>
                                <th>Action</th>
                                <th class="hide"></th>
                                <th class="hide"></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </form>
    </div>
</div>

@section scripts{
    <script type="text/javascript">

        var ddlLineNumber = $("#ddlLineNumber");
        var ddlPackagingLine = $("#ddlPackagingLine");
        var ddlPackagingLine2 = $("#ddlPackagingLine2");
        var ddlModelName = $("#ddlModelName");
        var ddlWarehouse = $("#ddlWarehouse");
        var ddlItemType = $("#ddlItemType");
        var ddlItem = $("#ddlItem");
        var txtQuantity = $("#txtQuantity");
        var unitName = $("#unitName");
        var txtRemarks = $("#txtRemarks");
        var ddlQCLine = $('#ddlQCLine');
        var qty = $("#qty");
        var chkIsBundle = $("#chkIsBundle");

        $(document).ready(function () {
            chkIsBundle.prop("checked", true);
            chkIsBundle.trigger("change");
            disable("#chkIsBundle");
            $('.select2').select2();

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });
        })

        chkIsBundle.change(function () {
            $("#tblData tbody").empty();
            if (chkIsBundle.is(":checked")) {
                if (TryParseInt(ddlWarehouse.val()) > 0) {
                    disable("#ddlWarehouse");
                }
                $("#btnAddToList").addClass('hide');
                if (TryParseInt(ddlModelName.val(), 0) > 0 && TryParseInt(ddlItem.val(), 0) > 0) {
                    var data = JSON.stringify({ modelId: TryParseInt(ddlModelName.val(), 0), itemId: TryParseInt(ddlItem.val(), 0) });

                    $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/Production/GetBundleItems', data, getToken())).then(function (res, status) {
                        console.log(res);
                        loadDataTabelForBundle(res);
                    }).fail(function (error) {
                        console.log(error);
                    })
                }
            } else {
                enable("#ddlWarehouse");
                $("#btnAddToList").removeClass('hide');
            }
        })

        function loadDataTabelForBundle(obj) {
            $("#tblData tbody").empty();
            if (!$.isEmptyObject(obj)) {
                $.each(obj, function (index, item) {
                    var re = (item.Remarks === null) ? "" : item.Remarks;
                    var td1 = "<td class='text-center'><b>" + (index + 1) + "</b></td>"
                    var td2 = "<td class='hide'>" + item.ItemTypeId + "</td>";
                    var td3 = "<td>" + item.ItemTypeName + "</td>";
                    var td4 = "<td class='hide'>" + item.ItemId + "</td>";
                    var td5 = "<td>" + item.ItemName + "</td>";
                    console.log("Qty.............");
                    var td6 = "<td class='text-center'>" + TryParseInt(txtQuantity.val(), 0) * item.Quantity + "</td>";
                    var td7 = "<td class='text-center'>" + item.UnitName + "</td>";
                    var td8 = "<td>" + re + "</td>";
                    var td9 = "<td class='text-center'><a href='#' class='btn btn-sm btn-danger data-onfly-del hide'><i class='far fa-trash-alt'></i> Delete</a></td>";
                    var td10 = "<td class='hide'>" + item.WarehouseId + "</td>";
                    var td11 = "<td class='hide'>" + item.Quantity + "</td>";

                    var tr = "<tr>" + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9 + td10 + td11 + "</tr>";

                    $("#tblData tbody").append(tr);

                    //$("#tblRequsitionDetailsData tbody").append(tr);
                    //clearCtrl();
                })
            }
            else {
                bootbox.alert('Bundle not found');
            }
        }

        txtQuantity.keyup(function () {
            if (chkIsBundle.is(":checked") && TryParseInt(ddlModelName.val(), 0) > 0 && TryParseInt(ddlItem.val(), 0) > 0 && $("#tblData tbody tr").length > 0 && TryParseInt(txtQuantity.val(), 0) > 0) {

                $.each($("#tblData tbody tr"), function (index, item) {
                    var qty = TryParseInt($(this).children('td').eq(10).html(), 0);
                    console.log('Qty ' + qty);

                    var t = qty * TryParseInt(txtQuantity.val(), 0)
                    console.log('Total ' + t);
                    $("#tblData tbody").children('tr').eq(index).children('td').eq(5).html(t);
                })
            }
        })

        function checkItemQty(itemId, packagingId, modelId, qty, itemName) {
            var text = "";
            //console.log('Item Id....');
            //console.log(itemId);
            var val = ajaxValueReturnable(JSON.stringify({ itemId: itemId, packagingId: packagingId, modelId: modelId }), '/Common/GetPackagingLineStockInfoByPLAndItemAndModelId', getToken());

            if (val.stockQty < qty) {
                text += itemName + ',';
            }
            //console.log("ajaxValueReturnable");
            //console.log(val);
            return text;
        }

        ddlLineNumber.change(function () {
            //clearDropdown("ddlQCLine");
            clearDropdown("ddlPackagingLine");
            clearDropdown("ddlPackagingLine2");
            if (ddlLineNumber.val() != "") {
                LoadDropDown('/Common/GetQCByLine', 'POST', ddlQCLine, JSON.stringify({ lineId: ddlLineNumber.val() }));
                // Packaging line
                LoadDropDown('/Common/GetPackagingLineByLine', 'POST', ddlPackagingLine, JSON.stringify({ lineId: ddlLineNumber.val() }));
            }
        })

        ddlPackagingLine.change(function () {
            clearDropdown("ddlPackagingLine2");
            if (TryParseInt(ddlPackagingLine.val(), 0) > 0) {
                LoadDropDown('/Common/GetPackagingLineToByLine', 'POST', ddlPackagingLine2, JSON.stringify({ lineId: ddlLineNumber.val(), packagingId: ddlPackagingLine.val() }));
            }
        })

        //casced dropdown load for itemtype
        ddlWarehouse.change(function () {
            $("#unitName").text('');
            //disable("#ddlWarehouse")
            clearDropdown("ddlItemType");
            clearDropdown("ddlItem");
            if (ddlWarehouse.val() != "") {
                LoadDropDown('/Common/GetItemTypeForDDL', 'POST', ddlItemType, JSON.stringify({ warehouseId: ddlWarehouse.val() }));
            }
        })

        //casced dropdown load for item
        ddlItemType.change(function () {
            $("#unitName").text('');
            clearDropdown("ddlItem");
            if (ddlItemType.val() != "") {
                LoadDropDown('/Common/GetItemForDDL', 'POST', ddlItem, JSON.stringify({ itemTypeId: ddlItemType.val() }));
            }
        })

        //unit text
        ddlModelName.change(function () {
            if (chkIsBundle.is(":checked")) {
                chkIsBundle.trigger('change')
            }
        })

        //unit text
        ddlItem.change(function () {
            //LoadItemStock();
            chkIsBundle.trigger('change');
        })

        function LoadItemStock() {
            $("#unitName").text('');
            $("#stockQty").text('(0)');
            txtQuantity.val('0');
            if (ddlItem.val() != "" && TryParseInt(ddlItem.val(), 0) > 0 && ddlQCLine.val() !== "" && TryParseInt(ddlQCLine.val(), 0) > 0 && TryParseInt(ddlModelName.val(), 0) > 0) {
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Common/GetQCLineStockInfoByQCAndItemAndModelId', JSON.stringify({ itemId: ddlItem.val(), qcId: ddlQCLine.val(), modelId: TryParseInt(ddlModelName.val(), 0) }), getToken())).then(function (res, status) {
                    console.log(res);
                    console.log(status);
                    if (status == "success") {
                        $("#unitName").html('<b> (' + res.unitSymbol + ') </b>');
                        $("#stockQty").text('(' + res.stockQty + ')');
                    }
                }).fail(function (error) {
                    consoleLog(error);
                })
            }
        }

        function validateInput() {
            $('.error').addClass('hide');
            var isValid = true;
            var count = $("#tblData tbody tr").length;
            if (count > 0) {
                $.each($("#tblData tbody tr"), function (index, item) {
                    var itemId = $(this).children('td').eq(3).html();
                    if (itemId == ddlItem.val()) {
                        isValid = false;
                        $(".duplicate-itemName").removeClass('hide');
                    }
                })
            }
            if (TryParseInt(ddlLineNumber.val(), 0) <= 0) {
                isValid = false;
                $(".req-line").removeClass("hide");
            }
            //if (TryParseInt(ddlQCLine.val(), 0) <= 0) {
            //    isValid = false;
            //    $(".req-qc").removeClass("hide");
            //}
            if (TryParseInt(ddlPackagingLine.val(), 0) <= 0) {
                isValid = false;
                $(".req-packaging").removeClass("hide");
            }
            if (TryParseInt(ddlPackagingLine2.val(), 0) <= 0) {
                isValid = false;
                $(".req-packaging").removeClass("hide");
            }
            if (TryParseInt(ddlModelName.val(), 0) <= 0) {
                isValid = false;
                $(".require-model").removeClass("hide");
            }
            if (TryParseInt(ddlWarehouse.val(), 0) <= 0) {
                isValid = false;
                $(".req-warehouse").removeClass("hide");
            }
            if (TryParseInt(ddlItemType.val(), 0) <= 0) {
                isValid = false;
                $(".req-itemType").removeClass("hide");
            }
            if (TryParseInt(ddlItem.val(), 0) <= 0) {
                isValid = false;
                $(".req-item").removeClass("hide");
            }
            if (TryParseInt(txtQuantity.val(), 0) <= 0) {
                isValid = false;
                $(".require-quantity").removeClass("hide");
            }
            //else {
            //    if ($("#stockQty").text() === '') {
            //        $('.req-stockOver').removeClass('hide');
            //        isValid = false;
            //    }
            //    else {
            //        var sq = $("#stockQty").text().trim();
            //        sq = sq.substring(1, sq.length - 1);
            //        //console.log("Stock Qty");
            //        //console.log(sq);
            //        if (TryParseInt(txtQuantity.val(), 0) > TryParseInt(sq, 0)) {
            //            isValid = false;
            //            $('.req-stockOver').removeClass('hide');
            //        }
            //    }
            //}
            return isValid;
        }

        $("#btnAddToList").click(function (e) {
            e.preventDefault();
            if (validateInput() == true) {

                disable("#ddlLineNumber");
                //disable("#ddlTransferFor");
                disable("#ddlPackagingLine");
                //sdisable("#ddlRepairLine");
                disable("#ddlModelName");
                disable("#ddlWarehouse");
                disable("#ddlQCLine");

                var sl = $("#tblData tbody tr").length;
                var td1 = "<td class='text-center'><b>" + (sl + 1) + "</b></td>"
                var td2 = "<td class='hide'>" + ddlItemType.val() + "</td>";
                var td3 = "<td>" + $("#ddlItemType option:selected").text() + "</td>";

                var td4 = "<td class='hide'>" + ddlItem.val() + "</td>";
                var td5 = "<td>" + $("#ddlItem option:selected").text() + "</td>";

                var td6 = "<td class='text-center'>" + txtQuantity.val() + "</td>";
                var td7 = "<td class='text-center'>" + unitName.text() + "</td>";
                var td8 = "<td>" + txtRemarks.val() + "</td>";
                var td9 = "<td class='text-center'><a href='#' class='btn btn-sm btn-danger data-onfly-del'><i class='far fa-trash-alt'></i> Delete</a></td>";
                var td10 = "<td class='hide'>" + 0 + "</td>";
                var td11 = "<td class='hide'>" + 0 + "</td>";

                var tr = "<tr>" + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9 + td10 + td11 + "</tr>";

                if ($("#tblData tbody tr").length == 0) {
                    $("#tblData tbody").append(tr);
                }
                else {
                    $("#tblData tbody tr").eq(0).before(tr);
                }
                //clearCtrl();
            }
        });

        $(document).on("click", "a.data-onfly-del", function (e) {
            e.preventDefault();
            var index = $(this).parent().parents('tbody tr').index();
            if (bootbox.confirm("Are you sure you want to delete?", function (result) {
                if (result === true) {
                    removeTableRow("#tblData tbody", index);
                    fnFixTheTbodyRowSerialInDecsOrder("#tblData", index);
                };
            }));
        })

        function validateTable() {
            var isValid = true;
            $(".error").addClass("hide");
            $("#itemQtyError").empty();
            if ($("#tblData tbody tr").length === 0) {
                $(".empty-table").removeClass('hide');
                isValid = false;
            }
            if (TryParseInt(ddlLineNumber.val(), 0) <= 0) {
                isValid = false;
                $(".req-line").removeClass("hide");
            }
            if (TryParseInt(ddlPackagingLine.val(), 0) <= 0) {
                isValid = false;
                $(".req-packaging").removeClass("hide");
            }
            if (TryParseInt(ddlPackagingLine2.val(), 0) <= 0) {
                isValid = false;
                $(".req-packaging2").removeClass("hide");
            }
            if (TryParseInt(ddlModelName.val(), 0) <= 0) {
                isValid = false;
                $(".require-model").removeClass("hide");
            }
            if (TryParseInt(ddlWarehouse.val(), 0) <= 0) {
                isValid = false;
                $(".req-warehouse").removeClass("hide");
            }
            if (TryParseInt(ddlItemType.val(), 0) <= 0) {
                isValid = false;
                $(".req-itemType").removeClass("hide");
            }
            if (TryParseInt(ddlItem.val(), 0) <= 0) {
                isValid = false;
                $(".req-item").removeClass("hide");
            }
            if (TryParseInt(txtQuantity.val(), 0) <= 0) {
                isValid = false;
                $(".require-quantity").removeClass("hide");
            }
            if (!validateItemStock()) {
                isValid = false;
            }
            return isValid;
        }

        function validateItemStock() {
            var isValid = true;
            var errorTxt = "";
            if (ddlModelName.val() != "" && ddlPackagingLine.val() != "" && $('#tblData tbody tr').length > 0) {
                $.each($('#tblData tbody tr'), function (index, item) {
                    var itemId = $(this).children('td').eq(3).html();
                    var itemName = $(this).children('td').eq(4).html();
                    var qty = $(this).children('td').eq(5).html();
                    errorTxt += checkItemQty(itemId, ddlPackagingLine.val(), ddlModelName.val(), qty, itemName);
                })
            }
            if (errorTxt.length > 0) {
                errorTxt = errorTxt.substr(0, errorTxt.length - 1);
                errorTxt += " does not have enough stock."
                $("#itemQtyError").append("<br/><div class='alert alert-danger alert-dismissible'><button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button><h6><i class='icon fas fa-ban'></i> Warning!</h6>" + errorTxt + "</div>");
                isValid = false;
            }
            return isValid;
        }


        $("#btnReset").click(function (e) {
            e.preventDefault();
            $(".error").addClass('hide');
            enable("#ddlLineNumber");
            ddlLineNumber.val("");
            ddlLineNumber.trigger("change");
            enable("#ddlPackagingLine");
            //enable("#ddlQCLine");
            enable("#ddlModelName");
            ddlModelName.val('');
            ddlModelName.trigger("change");

            enable("#ddlWarehouse");
            ddlWarehouse.val("");
            ddlWarehouse.trigger("change");
            
            $("#tblData tbody").empty();
            qty.text('')
            txtQuantity.val('0');
            unitName.text('');
            txtRemarks.val('');
        })

        $("#btnSubmit").click(function (e) {
            e.preventDefault();
            $(".error").addClass("hide");
            if (validateTable()) {
                bootbox.confirm(("Are you sure you want to Transfer From " + $("#ddlPackagingLine option:selected").text() + " To " + $("#ddlPackagingLine2 option:selected").text()), function (result) {
                    if (result) {
                        disable("#btnSubmit");
                        var wi = 0;
                        if (chkIsBundle.is(":checked")) {
                            wi = $("#tblData tbody").children('tr').eq(0).children('td').eq(9).html();
                        }

                        var info = { LineId: TryParseInt(ddlLineNumber.val(), 0), DescriptionId: TryParseInt(ddlModelName.val(), 0), PackagingLineFromId: TryParseInt(ddlPackagingLine.val(), 0), PackagingLineToId: TryParseInt(ddlPackagingLine2.val(), 0), WarehouseId: TryParseInt(ddlWarehouse.val(), 0), ItemTypeId: ddlItemType.val(), ItemId: ddlItem.val(), ForQty: txtQuantity.val(),Remarks:txtRemarks.val() };

                        var details = []; details.length = 0;
                        $.each($("#tblData tbody tr"), function (index, item) {
                            var tds = $(this).children('td');
                            var iTypeId = tds.eq('1').html();
                            var iId = tds.eq('3').html();
                            var qty = tds.eq('5').html();
                            var rmk = tds.eq('7').html();

                            details.push({
                                TP2DetailId: 0,
                                WarehouseId: wi,
                                ItemTypeId: TryParseInt(iTypeId, 0),
                                ItemId: TryParseInt(iId, 0),
                                Quantity: TryParseInt(qty, 0),
                                Remarks: rmk
                            })
                        });
                        //---- loop end

                        var data = JSON.stringify({ info: info, details: details });
                        console.log("Transfer Stock Data");
                        console.log(data);

                        $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Production/SavePackagingTransfer', data, getToken())).then(function (res, status) {
                            console.log(res);
                            console.log(status);
                           
                            if (res == true) {
                                $("#btnReset").trigger('click');
                                $('.toastrDefaultSuccess').trigger('click');
                                setTimeout(function () {
                                    redirectPage('@Url.Action("GetPackagingListTransferList")');
                                }, 1000);
                            }
                            else {
                                $('.toastrDefaultError').trigger('click');
                            }
                            enable("#btnSubmit");
                        }).fail(function (error) {
                            consoleLog(error);
                            enable("#btnSubmit");
                        })
                       // ajax end
                    }
                })
                //---- bootbox
            }
            //-------validation
        })

        function redirectPage(page) {
            window.location.replace(page);
        }

    </script>
}

