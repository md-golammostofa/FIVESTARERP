
@{
    ViewBag.Title = "Add Production Finish Goods";
}
<div class="row">
    <div class="col-md-12">
        <div class="card card-gray">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-3">
                        <a href="/Production/GetFinishGoodsList" class="float-left" title="Back To List">
                            <i class="fa fa-arrow-alt-circle-left fa-2x"></i>
                        </a>
                    </div>
                    <div class="col-md-6">
                        <h4 class="text-center">Adding Finish Goods</h4>
                    </div>
                    <div class="col-md-3">

                    </div>
                </div>
            </div>
            <div class="card-body">
                <form>
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-6" style="border-right:2px solid #efefef">
                            <h4 style="border-bottom:2px solid #f6eaaa">
                                Finish Goods Info
                            </h4>
                            <div class="row">
                                <div class="col-md-6">
                                    <label class="control-label">Floor</label>
                                    @Html.DropDownList("ddlProductionLine", (IEnumerable<SelectListItem>)ViewBag.ddlProductionLines, "--- Select Line ---", new { @class = "form-control form-control-sm" })
                                    <span class="error hide req-line">Line is require</span>
                                    <span></span>
                                </div>
                                <div class="col-md-6 hide">
                                    <label class="control-label">Production Type</label>
                                    @Html.DropDownList("ddlProductionTypes", (IEnumerable<SelectListItem>)ViewBag.ddlProductionTypes, "--- Select Types ---", new { @class = "form-control form-control-sm" })
                                    <span class="error hide req-proType">Production Type is require</span>
                                </div>
                                <div class="col-md-6">
                                    <label for="ddlPackagingLine" class="control-label">Packaging Line</label>
                                    <select id="ddlPackagingLine" class="form-control form-control-sm">
                                        <option value="0">--From Packaging Line--</option>
                                    </select>
                                    <span class="error hide req-packaging">From Packaging line is required</span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <label class="control-label">Model</label>
                                    @Html.DropDownList("ddlModel", (IEnumerable<SelectListItem>)ViewBag.ddlModel, "--- Select Model ---", new { @class = "form-control form-control-sm select2 select2-danger" })
                                    <span class="error hide req-model">Model is require</span>
                                </div>
                                <div class="col-md-6">
                                    <label class="control-label">Warehouse (To)</label>
                                    @Html.DropDownList("ddlWarehouse", (IEnumerable<SelectListItem>)ViewBag.ddlWarehouse, "--- Select Warehouse ---", new { @class = "form-control form-control-sm" })
                                    <span class="error hide req-warehouseTo">Warehouse is require</span>
                                </div>
                               
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <label class="control-label">
                                        Quantity
                                        <div class="icheck-primary d-inline text-primary">
                                            <input type="checkbox" id="chkUseBundle">
                                            <label for="chkUseBundle">
                                                (Use Bundle?)
                                            </label>
                                        </div>
                                    </label>
                                    <div class="input-group">
                                        <input type="number" class="form-control form-control-sm" id="txtFinishQty" style="width:70%" />
                                        <span id="finishUnit"></span>
                                    </div>
                                    <span class="error hide req-qty">Production Quantity is require</span>
                                </div>
                                <div class="col-md-6">
                                    <label class="control-label">Items</label>
                                    <select class="form-control form-control-sm" id="ddlFinishItems">
                                        <option value="">---Select Items---</option>
                                    </select>
                                    <span class="error hide req-productionItem">Item is require</span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12" id="itemQtyError">

                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h4 style="border-bottom:2px solid #f87878">Raw Materials</h4>
                            <div class="row">
                                <div class="col-md-6">
                                    <label class="control-label">Warehouse</label>
                                    <select class="form-control form-control-sm" id="ddlWarehouse2">
                                        <option value="">---Select Warehouse---</option>
                                    </select>
                                    <span class="error hide req-warehouse">Warehouse is require</span>
                                </div>
                                <div class="col-md-6">
                                    <label for="ddlItemType" class="control-label font-weight-bold">ItemType Name</label>
                                    <select id="ddlItemType" class="form-control form-control-sm ctrl-change">
                                        <option value="">--Select Item Type--</option>
                                    </select>
                                    <span class="error hide req-itemtype">Item type is require</span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="ddlItem" class="control-label font-weight-bold">Item Name</label>
                                    <select id="ddlItem" class="form-control form-control-sm">
                                        <option value="">--Select Item--</option>
                                    </select>
                                    <span class="error hide req-item">Item is require</span>
                                </div>
                                <div class="col-md-3">
                                    <label class="control-label">Quantity <span id="stockQty"></span></label>
                                    <div class="input-group">
                                        <input type="number" class="form-control form-control-sm" id="txtStockOutQty" style="width:70%" />
                                        <span id="stockUnit"></span>
                                    </div>
                                    <span class="error hide req-consumeqty">Quantity is require</span>
                                    <span class="error hide req-stockOver">Stock not available</span>
                                </div>
                                <div class="col-md-3">
                                    <label class="control-label" style="visibility:hidden">Add To List</label>
                                    <div class="clearfix">
                                        <button type="button" class="btn btn-sm float-right btn-outline-primary" id="btnAddToList" title="Add To List"><i class="fas fa-plus"></i></button>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <br />
                                    <table class="table table-sm table-bordered table-striped table-responsive-lg" id="tblMaterials">
                                        <thead class="btn-info">
                                            <tr class="text-center">
                                                <th>#SL</th>
                                                <th class="hide"></th>
                                                <th>ItemType Name</th>
                                                <th class="hide"></th>
                                                <th>Item Name</th>
                                                <th>Quantity</th>
                                                <th>Action</th>
                                                <th class="hide"></th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="card-footer">
                <button type="submit" class="btn float-right btn-outline-success" id="btnSubmit">Save <i class="fas fa-paper-plane"></i></button>
            </div>
        </div>
    </div>

</div>

@section scripts
{
    <script type="text/javascript">
        var ddlProductionLine = $("#ddlProductionLine");
        var ddlProductionTypes = $("#ddlProductionTypes");
        var ddlWarehouse = $("#ddlWarehouse");
        var ddlModel = $("#ddlModel");
        var ddlFinishItems = $("#ddlFinishItems");
        var txtFinishQty = $("#txtFinishQty");
        var ddlWarehouse2 = $("#ddlWarehouse2");
        var ddlItemType = $("#ddlItemType");
        var ddlItem = $("#ddlItem");
        var txtStockOutQty = $("#txtStockOutQty");
        var chkUseBundle = $("#chkUseBundle");
        var ddlPackagingLine = $("#ddlPackagingLine");
        var item = '0';
        var itemType = '0';

        $(document).ready(function () {
            chkUseBundle.prop("checked", true);
            disable("#chkUseBundle");
            chkUseBundle.trigger("change");
            //Initialize Select2 Elements
            $('.select2').select2();

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });
        })

        function getFinishItemAndItemType() {
            item = '0';
            itemType = '0';
            if (ddlFinishItems.val() != '') {
                item = ddlFinishItems.val().substring(0, ddlFinishItems.val().indexOf("#"));
                itemType = ddlFinishItems.val().substring(ddlFinishItems.val().indexOf("#") + 1);
                //warehouse = ddlFinishItems.val().substring(ddlFinishItems.val().lastIndexOf("#") + 1);
            }
        }

        function checkItemQty(itemId, packagingId, modelId, qty, itemName) {
            var text = "";
            //console.log('Item Id....');
            //console.log(itemId);
            var val = ajaxValueReturnable(JSON.stringify({ itemId: itemId, packagingId: packagingId, modelId: modelId }), '/Common/GetPackagingLineStockInfoByPLAndItemAndModelId', getToken());

            if (val.stockQty < qty) {
                text += itemName + ',';
            }
            //console.log("ajaxValueReturnable");
            //console.log(val);
            return text;
        }

        chkUseBundle.change(function () {
            $(".error").addClass('hide');
            $("#tblMaterials tbody").empty();
            if (chkUseBundle.is(":checked")) {
                $("#btnAddToList").addClass('hide');
                getFinishItemAndItemType();
                if (TryParseInt(ddlModel.val(), 0) > 0 && TryParseInt(item, 0) > 0) {
                    var data = JSON.stringify({ type: preparationType.packaging, modelId: TryParseInt(ddlModel.val(), 0), itemId: TryParseInt(item, 0) });

                    $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/Production/GetBundleItems', data, getToken())).then(function (res, status) {
                        console.log(res);
                        loadDataTabelForBundle(res);
                    }).fail(function (error) {
                        console.log(error);
                    })
                }
            }
            else {
                enable("#ddlWarehouse2");
                $("#btnAddToList").removeClass('hide');
            }
        })

        txtFinishQty.keyup(function () {
            if (chkUseBundle.is(":checked")) {
                if ($("#tblMaterials tbody tr").length > 0 && TryParseInt(txtFinishQty.val(),0) > 0) {
                    $.each($("#tblMaterials tbody tr"), function (index,item) {
                        var qty = $(this).children('td').eq(7).html();
                        //console.log('Qty ' + qty);
                        var t = qty * TryParseInt(txtFinishQty.val(), 0)
                        //console.log('Total ' + t);
                        $("#tblMaterials tbody").children('tr').eq(index).children('td').eq(5).html(t);
                    })
                }
            }
        })

        function loadDataTabelForBundle(obj) {
            if (!$.isEmptyObject(obj) && obj !== null) {
                $("#tblMaterials tbody").empty();
                $.each(obj, function (index, item) {
                    //console.log('Sever Quantity');
                    //console.log(item.Quantity);
                    //console.log('Client Quantity');
                    //console.log(txtFinishQty.val());
                    var total = item.Quantity * TryParseInt(txtFinishQty.val(), 0);
                    //console.log('Total');
                    //console.log(total);
                    if (index == 0) {
                        ddlWarehouse2.val(item.WarehouseId);
                        disable("#ddlWarehouse2");
                        ddlItemType.val("");
                        ddlItemType.trigger('change');
                    }

                    var td1 = '<td class="text-center"><b>' + (index+1) + '</b></td>';
                    var td2 = '<td class="hide">' + item.ItemTypeId + '</td>';
                    var td3 = '<td class="text-center">' + item.ItemTypeName + '</td>';
                    var td4 = '<td class="hide">' + item.ItemId + '</td>';
                    var td5 = '<td class="text-center">' + item.ItemName + '</td>';
                    var td6 = '<td class="text-center">' + total + '</td>';
                    var td7 = '<td class="text-center"><a href="#" class="btn btn-sm btn-outline-danger hide data-del-item" title="Remove"><i class="fas fa-trash"></i></a></td>';
                    var td8 = '<td class="hide">' + item.Quantity + '</td>';
                    var tr = '<tr>' + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8+'</tr>'

                   $("#tblMaterials tbody").append(tr);

                })
            }
            else {
                bootbox.alert("Bundle not found")
            }
        }

        ddlItem.change(function () {
            LoadItemStock()
        })

        ddlModel.change(function () {
            $("#tblMaterials tbody").empty();
            if (!chkUseBundle.is(":checked")) {
                LoadItemStock()
            }
            else {
                chkUseBundle.trigger('change');
            }
        })

        ddlWarehouse.change(function () {
            $("#finishUnit").text('');
            clearDropdown("ddlFinishItems");
            if (ddlWarehouse.val() != "") {
                LoadDropDown('/Common/GetItemsByWarehouseId', 'POST', ddlFinishItems, JSON.stringify({ warehouseId: ddlWarehouse.val() }));
            }
            chkUseBundle.trigger('change');
        })

        ddlFinishItems.change(function () {
            $("#finishUnit").text('');
            txtFinishQty.val('0');
            if (ddlFinishItems.val() != "") {
                getFinishItemAndItemType();
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/Common/GetUnitByItemId', JSON.stringify({ itemId: item }), getToken())).then(function (res, status) {
                    if (status === 'success') {
                        $("#finishUnit").html('<b>' + res.UnitSymbol + '</b>');
                    }
                }).fail(function (error) {
                    console.log(error);
                })
            }
            chkUseBundle.trigger('change');
        })

        ddlProductionLine.change(function () {
            clearDropdown("ddlWarehouse2");
            clearDropdown("ddlPackagingLine");
            if (ddlProductionLine.val() !== '') {
                LoadDropDown('/Common/GetWarehouseByProductionLineId', 'POST', ddlWarehouse2, JSON.stringify({ lineId: ddlProductionLine.val() }));
                LoadDropDown('/Common/GetPackagingLineByLine', 'POST', ddlPackagingLine, JSON.stringify({ lineId: ddlProductionLine.val() }));
            }
            $("#tblMaterials tbody").empty();
            LoadItemStock();
        })

        ddlWarehouse2.change(function () {
            $("#stockUnit").text('');
            clearDropdown("ddlItemType");
            clearDropdown("ddlItem");
            if (ddlWarehouse2.val() != "") {
                LoadDropDown('/Common/GetItemTypeForDDL', 'POST', ddlItemType, JSON.stringify({ warehouseId: ddlWarehouse2.val() }));
            }
        })

        ddlItemType.change(function () {
            $("#stockUnit").text('');
            clearDropdown("ddlItem");
            if (ddlItemType.val() != "") {
                LoadDropDown('/Common/GetItemForDDL', 'POST', ddlItem, JSON.stringify({ itemTypeId: ddlItemType.val() }));
            }
        })

        function LoadItemStock() {
            $("#stockUnit").text('');
            $("#stockQty").text('');
            txtStockOutQty.val('0');
            if (ddlItem.val() != "" && TryParseInt(ddlItem.val(), 0) > 0 && ddlProductionLine.val() != "" && TryParseInt(ddlProductionLine.val(), 0) > 0 && TryParseInt(ddlModel.val(), 0) > 0) {
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Common/GetItemUnitAndPDNStockQtyByLineAndModelId', JSON.stringify({ itemId: ddlItem.val(), lineId: ddlProductionLine.val(), modelId: TryParseInt(ddlModel.val(), 0) }), getToken())).then(function (res, status) {
                    console.log(res);
                    console.log(status);
                    if (status == "success") {
                        $("#stockUnit").html('<b> (' + res.unitSymbol + ') </b>');
                        $("#stockQty").text('(' + res.stockQty + ')');
                    }
                }).fail(function (error) {
                    consoleLog(error);
                })
            }
        }

        $("#btnAddToList").click(function (e) {
            e.preventDefault();
            //if (ddlWarehouse2.val() !== '' && ddlItemType.val() !== '' && ddlItem.val() !== '' && TryParseInt(txtStockOutQty.val(), 0) > 0)
            if (validateAddToList() === true) {
                disable("#ddlWarehouse2");
                bindTableData();
            }
        })

        function validateCommon() {
            var isValid = true;
            $('.error').addClass('hide');
            if (ddlProductionLine.val() === '') {
                $('.req-line').removeClass('hide');
                isValid = false;
            }
            if (ddlWarehouse.val() === '') {
                $('.req-warehouseTo').removeClass('hide');
                isValid = false;
            }
            if (ddlModel.val() === '') {
                $('.req-model').removeClass('hide');
                isValid = false;
            }
            if (ddlFinishItems.val() === '') {
                $('.req-productionItem').removeClass('hide');
                isValid = false;
            }
            if (TryParseInt(txtFinishQty.val(), 0) <= 0) {
                $('.req-qty').removeClass('hide');
                isValid = false;
            }
            return isValid;
        }

        function validateAddToList() {
            var isValid = true;
            $("#itemQtyError").empty();
            $('.error').addClass('hide');
            isValid = validateCommon();
            if (ddlWarehouse2.val() === '') {
                $('.req-warehouse').removeClass('hide');
                isValid = false;
            }
            if (ddlItemType.val() === '') {
                $('.req-itemtype').removeClass('hide');
                isValid = false;
            }
            if (ddlItem.val() === '') {
                $('.req-item').removeClass('hide');
                isValid = false;
            }
            if (TryParseInt(txtStockOutQty.val(), 0) <= 0) {
                $('.req-consumeqty').removeClass('hide');
                isValid = false;
            }
            else {
                if ($("#stockQty").text() === '') {
                    $('.req-stockOver').removeClass('hide');
                    isValid = false;
                }
                else {
                    var sq = $("#stockQty").text().trim();
                    sq = sq.substring(1, sq.length - 1);
                    //console.log("Stock Qty");
                    //console.log(sq);
                    if (TryParseInt(txtStockOutQty.val(), 0) > TryParseInt(sq, 0)) {
                        isValid = false;
                        $('.req-stockOver').removeClass('hide');
                    }
                }
            }

            return isValid;
        }

        function validateForm() {
            var isValid = true;
            $("#itemQtyError").empty();
            $('.error').addClass('hide');
            var errorTxt = "";
            isValid = validateCommon();
            if ($('#tblMaterials tbody tr').length === 0) {
                bootbox.alert('No data found in the table');
                isValid = false;
            }
            else {
                if (ddlModel.val() != "" && ddlPackagingLine.val() != "") {
                    $.each($('#tblMaterials tbody tr'), function (index, item) {
                        var itemId = $(this).children('td').eq(3).html();
                        var itemName = $(this).children('td').eq(4).html();
                        var qty = $(this).children('td').eq(5).html();
                        errorTxt += checkItemQty(itemId, ddlPackagingLine.val(), ddlModel.val(), qty, itemName);
                    })
                }
            }            
            if (errorTxt.length > 0) {
                errorTxt = errorTxt.substr(0, errorTxt.length - 1);
                errorTxt += " does not have enough stock."
                $("#itemQtyError").append("<br/><div class='alert alert-danger alert-dismissible'><button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button><h5><i class='icon fas fa-ban'></i> Warning!</h5>" + errorTxt+"</div>");
                //bootbox.alert(errorTxt);
                isValid = false;
            }
            return isValid;
        }

        $('#btnSubmit').click(function (e) {
            e.preventDefault();
            if (validateForm() === true) {
                getFinishItemAndItemType();
                var info = { FinishGoodsInfoId: 0, ProductionLineId: TryParseInt(ddlProductionLine.val(), 0), DescriptionId: TryParseInt(ddlModel.val(), 0), WarehouseId: TryParseInt(ddlWarehouse.val(), 0), ItemTypeId: itemType, ItemId: item, Quanity: TryParseInt(txtFinishQty.val(), 0), ProductionType: '', PackagingLineId: TryParseInt(ddlPackagingLine.val(), 0) };

                var details = [];
                details.length = 0;

                $.each($("#tblMaterials tbody tr"), function (index, item) {
                    var tds = $(this).children('td');
                    var td1 = tds.eq(1).html();
                    var td2 = tds.eq(3).html();
                    var td3 = tds.eq(5).html();
                    details.push({
                        FGRMId: 0,
                        WarehouseId: TryParseInt(ddlWarehouse2.val(), 0),
                        ItemTypeId: TryParseInt(td1, 0),
                        ItemId: TryParseInt(td2, 0),
                        Quanity: TryParseInt(td3, 0)
                    })
                });
                console.log(info);
                console.log(details);
                //SaveFinishGoods
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/Production/SaveFinishGoods', JSON.stringify({ info: info, details: details }), getToken())).then(function (res, status)
                {
                    if (status === 'success' && res === true) {
                         $('.toastrDefaultSuccess').trigger('click');
                         setTimeout(function () {
                            redirectPage('@Url.Action("GetFinishGoodsList")');
                        }, 1000);
                    }
                    else {
                        $('.toastrDefaultError').trigger('click');
                    }
                }).fail(function (error) {
                    consoleLog(error);
                });

            }
        })

        function bindTableData() {
            var len = $("#tblMaterials tbody tr").length + 1;
            var td1 = '<td class="text-center"><b>' + len + '</b></td>';
            var td2 = '<td class="hide">' + ddlItemType.val() + '</td>';
            var td3 = '<td class="text-center">' + $("#ddlItemType option:selected").text() + '</td>';
            var td4 = '<td class="hide">' + ddlItem.val() + '</td>';
            var td5 = '<td class="text-center">' + $("#ddlItem option:selected").text() + '</td>';
            var td6 = '<td class="text-center">' + txtStockOutQty.val() + '</td>';
            var td7 = '<td class="text-center"><a href="#" class="btn btn-sm btn-outline-danger data-del-item" title="Remove"><i class="fas fa-trash"></i></a></td>';
            var td8 = '<td class="hide">'+0+'</td>';

            var tr = '<tr>' + td1 + td2 + td3 + td4 + td5 + td6 + td7 +td8+ '</tr>'
            //$("#tblMaterials tbody").append(tr);
            if ($("#tblMaterials tbody tr").length == 0) {
                $("#tblMaterials tbody").append(tr);
            }
            else {
                $("#tblMaterials tbody tr").eq(0).before(tr);
            }
        }

        $(document).on('click', '.data-del-item', function (e) {
            e.preventDefault();
            console.log('Remove clicked');
            var index = $(this).parent().parents('tbody tr').index();
            if (bootbox.confirm("Are you sure you want to delete?", function (result) {
                if (result === true) {
                    removeTableRow("#tblMaterials tbody", index);
                    //fnFixTheTbodyRowSerial("#tblMaterials", index);
                    fnFixTheTbodyRowSerialInDecsOrder("#tblMaterials", index);
                };
            }));
        })

        function redirectPage(page) {
            window.location.replace(page);
        }
    </script>
}

