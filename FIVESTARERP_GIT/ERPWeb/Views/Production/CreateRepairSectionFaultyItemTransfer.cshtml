
@{
    ViewBag.Title = "Repair Faulty Stock Return";
}
<div class="row text-sm" style="margin-top:-10px">
    <div class="col-md-12">
        <div class="card card-gray-dark">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-3">
                        <a href="/Production/GetRepairLineStockInfo" class="btn btn-sm btn-outline-primary" title="Back To List"><i class="fas fa-arrow-alt-circle-left"></i></a>
                    </div>
                    <div class="col-md-6">
                        <h5 class="text-center text-bold">
                            Repair Section Faulty Item Return
                        </h5>
                    </div>
                    <div class="col-md-3">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row box-shadow">
    <div class="col-md-12 text-sm" style="margin-top:-10px">
        <div class="card shadow card-navy">
            @Html.AntiForgeryToken()
            <div class="card-header">
                <div class="row">
                    <div class="col-md-4">
                        @Html.DropDownList("ddlModelName", (IEnumerable<SelectListItem>)ViewBag.ddlModelName, "--Select Model--", new { @class = "form-control form-control-sm ctrl ctrl-model select2 select2-danger" })
                    </div>
                    <div class="col-md-4">
                        <div class="input-group input-group-sm">
                            @Html.DropDownList("ddlRepairLine", (IEnumerable<SelectListItem>)ViewBag.ddlRepairLine, "--Select Repair Line--", new { @class = "form-control form-control-sm ctrl ctrl-repair" })
                            <span class="input-group-append">
                                <button type="button" class="btn btn-block btn-info btn-flat" id="btnSearch"><i class="fas fa-search"></i></button>
                            </span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <button class="btn btn-sm btn-outline-primary btn-flat float-right" title="Save Your Data" id="btnSave">
                            <i class="fas fa-paper-plane"></i> Save...
                        </button>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row" style="margin-top:-15px">
                    <div class="col-md-12">
                        <div class="text-center text-bold hide" id="loader">
                            <h6>Loading....</h6>
                        </div>
                        <div class="col-md-12" id="dataContainer1"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script type="text/javascript">

        var ddlModelName = $("#ddlModelName");
        var ddlRepairLine = $("#ddlRepairLine");
        var count = 0

        $(document).ready(function () {
            $('.select2').select2();
            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });
        })

        $(document).on("change", '.ctrl', function () {
            $("#dataContainer1").empty();
        })

        function validateSearch() {
            var isValid = true;
            //$(".ctrl").removeClass("error-border");
            if (ddlRepairLine.val() == "") {
                isValid = false;
                toastr.error("Repair line is required", null, { timeOut: 1000 });
                //$(".ctrl-assembly").addClass("error-border");
            }
            if (ddlModelName.val() == "") {
                isValid = false;
                //$(".ctrl-model").addClass("error-border");
                toastr.error("Model is required", null, { timeOut: 1000 });
            }
            return isValid;
        }

        $("#btnSearch").click(function (e) {
            e.preventDefault();
            if (validateSearch()) {
                $("#loader").removeClass("hide");
                var repairLine = ddlRepairLine.val().split("#");
                var data = JSON.stringify({ repairLinesId: repairLine[0], floorId: repairLine[1], modelId: TryParseInt(ddlModelName.val(), 0) });
                $.when(postReqWithToken(dataType.applicationJson, dataType.html, type.post, '/Production/GetRepairFaultyStockItemsForReturn', data, getToken())).then(function (res, status) {
                    console.log(res);
                    console.log(status);
                    $("#dataContainer1").fadeOut('500', function () {
                        $("#dataContainer1").empty();
                        $("#dataContainer1").append(res).fadeIn('500');
                    });
                    $("#loader").addClass("hide");
                }).fail(function (error) {
                    $("#loader").addClass("hide");
                    console.log(error);
                })
            }
        })

        $(document).on('change', 'input[name="allItem"]', function () {
            var isChecked = $('input[name="allItem"]').is(":checked");
            $('input[name="item"]').prop("checked", isChecked);
            if (isChecked) {
                count = $(".tblRepairFaultyReturnItems tbody tr").length;
                $(".tblRepairFaultyReturnItems tbody tr").attr("data-item-row", "selected")
            }
            else {
                count = 0;
                $("input[type='number']").removeClass("error-border");
                $(".tblRepairFaultyReturnItems tbody tr").attr("data-item-row", "notSelected")
            }
        })

        $(document).on('change', 'input[name="item"]', function () {
            count = 0;
            $.each($(".tblRepairFaultyReturnItems tbody tr"), function (index, item) {
                if ($(this).children('td').eq(0).children('input[name="item"]').is(":checked")) {
                    count++;
                    $(this).attr("data-item-row", "selected");
                }
                else {
                    $(this).children('td').eq(4).children('input[type="text"]').removeClass("error-border");
                    $(this).children('td').eq(6).children('input[type="text"]').removeClass("error-border");
                    $(this).attr("data-item-row", "notSelected");
                }
            });
            var allChecked = $(".tblRepairFaultyReturnItems tbody tr").length == count;
            $('input[name="allItem"]').prop("checked", allChecked);
        })

        function validateSubmit() {
            var isValid = true;
            if (!validateSearch()) {
                isValid = false;
            }
            var totalCheckedItems = 0;
            var invalidValue = 0;
            if ($(".tblRepairFaultyReturnItems tbody").length > 0) {
                $.each($(".tblRepairFaultyReturnItems tbody tr"), function (index, item) {
                    var tds = $(this).children('td');
                    if (tds.eq(0).children('input[name="item"]').is(":checked")) {
                        totalCheckedItems++;

                        var ablManMade = tds.eq(3).html();
                        var manMade = tds.eq(4).children('input[name="manMadeFaulty"]').val();
                        var ablChinaMade = tds.eq(5).html();
                        var chinaMade = tds.eq(6).children('input[name="chinaMadeFaulty"]').val();

                        if (TryParseInt(manMade, 0) < 0 || TryParseInt(chinaMade, 0) < 0) {
                            tds.eq(4).children('input[type="text"]').addClass("error-border");
                            tds.eq(6).children('input[type="text"]').addClass("error-border");

                            isValid = false;
                            invalidValue++;
                        }
                        else if (TryParseInt(manMade, 0) <= 0 && TryParseInt(chinaMade, 0) <= 0) {
                            tds.eq(4).children('input[type="text"]').addClass("error-border");
                            tds.eq(6).children('input[type="text"]').addClass("error-border");

                            isValid = false;
                            invalidValue++;
                        }
                        else if (TryParseInt(manMade, 0) > TryParseInt(ablManMade, 0) || TryParseInt(chinaMade, 0) > TryParseInt(ablChinaMade, 0)) {
                            tds.eq(4).children('input[type="text"]').addClass("error-border");
                            tds.eq(6).children('input[type="text"]').addClass("error-border");

                            isValid = false;
                            invalidValue++;
                        }
                        else {
                            tds.eq(4).children('input[type="text"]').removeClass("error-border");
                            tds.eq(6).children('input[type="text"]').removeClass("error-border");
                        }
                    }
                });
                if (totalCheckedItems == 0) {
                    isValid = false;
                    toastr.error("Please checked at least one item", null, { timeOut: 1000 });
                }
                if (invalidValue > 0) {
                    toastr.error("One/More return qty is invalid", null, { timeOut: 1000 });
                }
            }
            else {
                toastr.error("Item Not Found", null, { timeOut: 1000 });
                isValid = false;
            }
            return isValid;
        }

        $("#btnSave").click(function (e) {
            e.preventDefault();
            if (validateSubmit()) {
                bootbox.confirm("Are you sure you want to return stock", function (result) {
                    if (result) {
                        disable("#btnSave");
                        var selectedRows = $(".tblRepairFaultyReturnItems tbody tr[data-item-row='selected']");
                        var items = []; items.length = 0;

                        $.each(selectedRows, function (index, item) {
                            var tds = $(this).children('td');
                            var repair = ddlRepairLine.val().split("#");
                            items.push({
                                DescriptionId: TryParseInt(ddlModelName.val()),
                                RepairLineId: repair[0],
                                ProductionFloorId: repair[1],
                                ManMadeFaultyQty: TryParseInt(tds.eq('4').children('input[type="text"]').val(), 0),
                                ChinaFaultyQty: TryParseInt(tds.eq('6').children('input[type="text"]').val(), 0),
                                GoodStockQty: 0,
                                WarehouseId: tds.eq('7').html(),
                                ItemTypeId: tds.eq('8').html(),
                                ItemId: tds.eq('9').html(),
                                UnitId: tds.eq('10').html(),
                                Flag: stockReturnFlag.assemblyRepairFaulty,
                                Remarks: "Faulty Stock Item Return By Assembly Repair Line"
                            })
                        })

                        var data = JSON.stringify({ model: items });
                        $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/Production/SaveStockReturnItems', data, getToken())).then(function (res, status) {
                            console.log(res);
                            console.log(status);
                            if (res == true && status === "success") {
                                toastrSuccessAlert(execuStatus.successSave);
                                setTimeout(function () {
                                    redirectPage("@Url.Action("GetRepairLineStockInfo", "Production")")
                                }, 1000);
                            }
                            else {
                                toastrErrorAlert(execuStatus.fail);
                            }
                            enable("#btnSave");
                        }).fail(function (error) {
                            console.log(error);
                            toastrErrorAlert(execuStatus.fail);
                            enable("#btnSave");
                        })
                    } // result
                }) // bootbox
            }// validate
        })

        function redirectPage(page) {
            window.location.replace(page);
        }

        //ddlRepairLine.change(function () {
        //    LoadItems();
        //})

        //ddlModelName.change(function () {
        //    LoadItems();
        //})

        //$("#btnReset").click(function (e) {
        //    e.preventDefault();
        //    clearAll();
        //})

        //function LoadItems() {
        //    $("#unitName").text('');
        //    $("#stockQty").text('(0)');
        //    clearDropdown("ddlItems");
        //    if (ddlRepairLine.val() != "" && ddlModelName.val() != "") {
        //        var line = ddlRepairLine.val().split("#");
        //        LoadDropDown('/Common/GetItemDetailByRepairFaultySection', 'POST', ddlItems, JSON.stringify({ floorId: line[1], repairLineId: line[0], modelId: ddlModelName.val() }));
        //    }
        //}

        //ddlItems.change(function () {
        //    LoadItemStock();
        //});

        //function gethdfValues() {
        //    hdfItemId.val('0');
        //    hdfItemTypeId.val('0');
        //    hdfWarehouseId.val('0');
        //    var itemVal = ddlItems.val();
        //    var val1 = itemVal.substring(0, itemVal.indexOf("#"));
        //    hdfItemId.val(val1);
        //    var val2 = itemVal.substring(itemVal.indexOf("#") + 1, itemVal.lastIndexOf("#"));
        //    hdfItemTypeId.val(val2);
        //    var val3 = itemVal.substring(itemVal.lastIndexOf("#") + 1, itemVal.length);
        //    hdfWarehouseId.val(val3);
        //}

        //function LoadItemStock() {
        //    gethdfValues();
        //    uId = "0";
        //    uName = "";
        //    $("#unitName").text('');
        //    $("#stockQty").text('(0)');
        //    txtQuantity.val('0');
        //    if (hdfItemId.val() != "" && TryParseInt(hdfItemId.val(), 0) > 0 && ddlRepairLine.val() != "" && TryParseInt(ddlModelName.val(), 0) > 0) {
        //        var isChinaFaulty = ddlFaultyCase.val() == "China Made" ? true : false;
        //        var line = ddlRepairLine.val().split("#");
        //        $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Common/GetFaultyItemStockInfoByRepairAndModelAndItemAndFultyType', JSON.stringify({ itemId: hdfItemId.val(), repairId: line[0], modelId: TryParseInt(ddlModelName.val(), 0), isChinaFaulty: isChinaFaulty }), getToken())).then(function (res, status) {
        //            console.log(res);
        //            console.log(status);
        //            if (status == "success") {
        //                $("#unitName").html('<b> (' + res.unitSymbol + ') </b>');
        //                $("#stockQty").text('(' + res.stockQty + ')');
        //                uName = res.unitSymbol;
        //                uId = res.unitid;
        //            }
        //        }).fail(function (error) {
        //            consoleLog(error);
        //        })
        //    }
        //}

        //function clearCtrl() {
        //    ddlItems.val('');
        //    ddlItems.trigger('change');
        //    txtTransferRemarks.val('');
        //}

        //function validateInput() {
        //    var isValid = true;
        //    $(".error").addClass('hide');
        //    //if (ddlProductionFloor.val() == "") {
        //    //    $(".req-floor").removeClass('hide');
        //    //    isValid = false;
        //    //}
        //    if (ddlRepairLine.val() == "") {
        //        isValid = false;
        //        $(".req-repair").removeClass("hide");
        //    }
        //    if (ddlModelName.val() == "") {
        //        isValid = false;
        //        $(".req-model").removeClass("hide");
        //    }
        //    if (ddlItems.val() == "") {
        //        isValid = false;
        //        $(".req-item").removeClass("hide");
        //    }
        //    if (TryParseInt(txtQuantity.val(), 0) <= 0) {
        //        isValid = false;
        //        $(".req-quantity").removeClass("hide");
        //    }
        //    else {
        //        var sq = $("#stockQty").text().trim();
        //        sq = sq.substring(1, sq.length - 1);
        //        //console.log("Stock Qty");
        //        //console.log(sq);
        //        if (TryParseInt(txtQuantity.val(), 0) > TryParseInt(sq, 0)) {
        //            isValid = false;
        //            $('.req-stockOver').removeClass('hide');
        //        }
        //        else {
        //            // Check Stock In Db
        //        }
        //    }
        //    var count = $("#tblItems tbody tr").length;
        //    if (count > 0) {
        //        $.each($("#tblItems tbody tr"), function (index, item) {
        //            var tds = $(this).children('td');
        //            var itemId = tds.eq(9).html();
        //            var itemVal = ddlItems.val();
        //            var val1 = itemVal.substring(0, itemVal.indexOf("#"));
        //            if (itemId == val1) {
        //                isValid = false;
        //                $(".duplicate-itemName").removeClass('hide');
        //            }
        //        })
        //    }
        //    return isValid;
        //}

        //function validateSubmit() {
        //    var isVaild = true;
        //    if (ddlProductionFloor.val() == "") {
        //        $(".req-floor").removeClass('hide');
        //        isValid = false;
        //    }
        //    if (ddlRepairLine.val() == "") {
        //        isValid = false;
        //        $(".req-repair").removeClass("hide");
        //    }
        //    if ($("#tblItems tbody tr").length == 0) {
        //        alert("Please add data into the table");
        //        isValid = false;
        //    }
        //    else {
        //        // Item Stock checking in Db
        //    }
        //    return isVaild;
        //}

        //function clearAll() {
        //    ddlProductionFloor.val('');
        //    ddlProductionFloor.trigger('change');
        //    ddlModelName.val('');
        //    ddlModelName.trigger('change');
        //    $("#tblItems tbody").empty();

        //}

        //$("#btnAddToList").click(function (e) {
        //    e.preventDefault();

        //    if (validateInput()) {
        //        disable("ddlProductionFloor");
        //        disable("ddlRepairLine");
        //        gethdfValues();
        //        var td1 = "<td class='text-center text-bold'>" + ($("#tblItems tbody tr").length + 1) + "</td>";
        //        var td2 = "<td class='text-center'>" + $("#ddlModelName option:selected").text() + "</td>";
        //        var td3 = "<td>" + $("#ddlItems option:selected").text() + "</td>";
        //        var td4 = "<td class='text-center'>" + txtQuantity.val() + "</td>";
        //        var td5 = "<td class='text-center'>" + $("#unitName").text() + "</td>";
        //        var td6 = "<td class='text-center'><a href='#' class='btn btn-sm btn-danger data-onfly-del'><i class='far fa-trash-alt'></i></a></td>";
        //        var td7 = "<td class='hide'>" + ddlModelName.val() + "</td>";
        //        var td8 = "<td class='hide'>" + hdfWarehouseId.val() + "</td>";
        //        var td9 = "<td class='hide'>" + hdfItemTypeId.val() + "</td>";
        //        var td10 = "<td class='hide'>" + hdfItemId.val() + "</td>";
        //        var td11 = "<td class='hide'>" + uId + "</td>";
        //        var td12 = "<td class='hide'>" + uName + "</td>";

        //        var tr = "<tr>" + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9 + td10 + td11 + td12 + "</tr>";

        //        if ($("#tblItems tbody tr").length == 0) {
        //            $("#tblItems tbody").append(tr);
        //        }
        //        else {
        //            $("#tblItems tbody tr").eq(0).before(tr);
        //        }

        //        if ($("#tblItems tbody tr").length > 1) {
        //            //MargeSecondCell();
        //        }
        //        //fixit(tblItems);
        //        clearCtrl();
        //    }
        //})

        //$("#btnSubmit").click(function (e) {
        //    e.preventDefault();
        //    if (validateSubmit()) {
        //        bootbox.confirm("Are you sure you want to save data", function (result) {
        //            if (result) {
        //                disable("#btnSubmit");
        //                // data....
        //                var info = {
        //                    ProductionFloorId: TryParseInt(ddlProductionFloor.val(), 0),
        //                    ProductionFloorName: $("#ddlProductionFloor option:selected").text(),
        //                    RepairLineId: TryParseInt(ddlRepairLine.val(), 0),
        //                    RepairLineName: $("#ddlRepairLine option:selected").text(),
        //                };
        //                var detail = []; detail.length = 0;

        //                $.each($("#tblItems tbody tr"), function (index, item) {
        //                    var tds = $(this).children('td');
        //                    var modelName = tds.eq(1).html();
        //                    var item = tds.eq(2).html();
        //                    var itemName = item.substring(0, item.lastIndexOf("[") - 1);
        //                    var itemTypeName = item.substring(item.lastIndexOf("[") + 1, item.lastIndexOf("-"));
        //                    var warehouseName = item.substring(item.lastIndexOf("-") + 1, item.lastIndexOf("]"));
        //                    var qty = tds.eq(3).html();

        //                    var modelId = tds.eq(6).html();
        //                    var warehouseId = tds.eq(7).html();
        //                    var itemTypeId = tds.eq(8).html();
        //                    var itemId = tds.eq(9).html();
        //                    var unit = tds.eq(10).html();
        //                    var unitName = tds.eq(11).html();
        //                    detail.push({
        //                        ProductionFloorId: TryParseInt(ddlProductionFloor.val(), 0),
        //                        ProductionFloorName: $("#ddlProductionFloor option:selected").text(),
        //                        RepairLineId: TryParseInt(ddlRepairLine.val(), 0),
        //                        RepairLineName: $("#ddlRepairLine option:selected").text(),
        //                        QCLineId: 0,
        //                        QCLineName: "",
        //                        DescriptionId: TryParseInt(modelId, 0),
        //                        ModelName: modelName,
        //                        WarehouseId: TryParseInt(warehouseId, 0),
        //                        WarehouseName: warehouseName,
        //                        ItemTypeId: TryParseInt(itemTypeId, 0),
        //                        ItemTypeName: itemTypeName,
        //                        ItemId: TryParseInt(itemId, 0),
        //                        ItemName: itemName,
        //                        FaultyQty: qty,
        //                        UnitId: TryParseInt(unit, 0),
        //                        UnitName: unitName
        //                    });
        //                })
        //                console.log("Detail");
        //                console.log(detail);

        //                info.RepairSectionFaultyItemRequisitionDetails = detail;
        //                var data = JSON.stringify({ info: info })

        //                console.log('data');
        //                console.log(data);

        //                $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/Production/SaveRepairSectionFaultyItemTransfer', data, getToken())).then(function (res, status) {
        //                    if (res === true && status === "success") {
        //                        $('.toastrDefaultSuccess').trigger('click'); clearAll();

        //                    }
        //                    else {
        //                        $('.toastrDefaultError').trigger('click');
        //                    }
        //                    enable("#btnSubmit");
        //                }).fail(function (error) {
        //                    console.log(error);
        //                    enable("#btnSubmit");
        //                })
        //            }
        //        })
        //    }
        //})

        //function MargeSecondCell() {
        //    $("#tblItems tbody").each(function () {
        //        var row = $(this).children('td').eq(1);
        //        var values = $(this).find("tr>td:nth-child(2)")
        //        console.log("values");
        //        console.log(values);
        //        console.log('Values Lenght');
        //        console.log(values.length);
        //        var run = 1

        //        for (var i = values.length - 1; i > -1; i--) {
        //            console.log("values.eq(i)");
        //            console.log(values.eq(i));
        //            console.log("values.eq(i).text()");
        //            console.log(values.eq(i).text());
        //            console.log("values.eq(i - 1).text()");
        //            console.log(values.eq(i - 1).text());
        //            if (values.eq(i).text() === values.eq(i - 1).text()) {
        //                //values.eq(i).remove()
        //                run++
        //            } else {
        //                values.eq(i).attr("rowspan", run)
        //                run = 1
        //            }
        //        }
        //    })
        //}

        //$(document).on("click", "a.data-onfly-del", function (e) {
        //    e.preventDefault();
        //    var index = $(this).parent().parents('tbody tr').index();
        //    if (bootbox.confirm("Are you sure you want to delete?", function (result) {
        //        if (result === true) {
        //            removeTableRow("#tblItems tbody", index);
        //            fnFixTheTbodyRowSerialInDecsOrder("#tblItems", index);
        //            $("#tblItems tbody tr").removeClass("btn-success");
        //        };
        //    }));
        //})
    </script>
}
