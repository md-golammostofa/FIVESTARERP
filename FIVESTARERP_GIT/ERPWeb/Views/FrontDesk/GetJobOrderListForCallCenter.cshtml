
@{
    ViewBag.Title = "Call Center";
    var privilege = (ERPBO.Common.UserPrivilege)ViewBag.UserPrivilege;
    string tab = Request.QueryString["tab"] != null ? Request.QueryString["tab"].ToString() : "";
}

<div class="row">
    <div class="col-md-12">
        <div class="card shadow card-primary card-outline card-tabs" style="margin-top:-20px">
            <div class="card-header p-0 pt-1 border-bottom-0">
                <ul class="nav nav-tabs nav-pills" id="custom-tabs-two-tab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="custom-tabs-two-jobOrderList-tab" data-toggle="pill" href="#custom-tabs-two-jobOrderList" role="tab" aria-controls="custom-tabs-two-jobOrderList" aria-selected="true">Job Order List</a>
                    </li>
                    <li class="nav-item hide">
                        <a class="nav-link" id="custom-tabs-two-accessoriesSellsList-tab" data-toggle="pill" href="#custom-tabs-two-accessoriesSellsList" role="tab" aria-controls="custom-tabs-two-accessoriesSellsList" aria-selected="false">Accessories Sells</a>
                    </li>
                </ul>
            </div>
            <div class="card-body shadow">
                <div class="tab-content" id="custom-tabs-two-tabContent">
                    @Html.AntiForgeryToken()
                    <div class="tab-pane fade show active" id="custom-tabs-two-jobOrderList" role="tabpanel" aria-labelledby="custom-tabs-two-jobOrderList-tab">
                        <div class="row" style="margin-top:-15px">
                            <div class="col-md-12">
                                <div class="card shadow card-gray-dark">
                                    <div class="card-header shadow">
                                        <div class="row">
                                            <div class="col-md-3">
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">
                                                    Job Order List
                                                </h5>
                                            </div>
                                            <div class="col-md-3 hide">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="margin-top:-15px">
                                <div class="card shadow card-navy">
                                    <div class="card-body text-sm">
                                        <div class="row text-sm">
                                            <div class="col-md-2">
                                                <label class="col-form-label">Job Code</label>
                                                <input type="text" id="txtJobCode" class="form-control form-control-sm" placeholder="Search By JobCode" />
                                            </div>
                                            <div class="col-md-2">
                                                <label class="col-form-label">Model</label>
                                                @Html.DropDownList("ddlModelName", (IEnumerable<SelectListItem>)ViewBag.ddlModelName, "Search By Model", new { @class = "form-control form-control-sm ctrl-changed select2 select2-danger ctrl-changed" })
                                            </div>
                                            <div class="col-md-2">
                                                <label class="col-form-label">IMEI1</label>
                                                <input type="text" id="txtIMEINo" class="form-control form-control-sm" placeholder="Search By IMEI1" />
                                            </div>
                                            <div class="col-md-2 hide">
                                                <label class="col-form-label">IMEI2</label>
                                                <input type="text" id="txtIMEI2No" class="form-control form-control-sm" placeholder="Search By IMEI2" />
                                            </div>
                                            <div class="col-md-2">
                                                <label class="col-form-label">Job Type</label>
                                                @Html.DropDownList("ddlJobType", (IEnumerable<SelectListItem>)ViewBag.ddlJobType, "--Search By Job Type--", new { @class = "form-control form-control-sm ctrl-changed " })
                                            </div>
                                            <div class="col-md-2">
                                                <label class="col-form-label">Mobile No</label>
                                                <input type="text" id="txtMobileNo" class="form-control form-control-sm" placeholder="Search By Mobile" />
                                            </div>
                                            <div class="col-md-2">
                                                <label class="col-form-label">Job Status</label>
                                                @Html.DropDownList("ddlStateStatus", (IEnumerable<SelectListItem>)ViewBag.ddlStateStatus, "--Search By Status--", new { @class = "form-control form-control-sm ctrl-changed " })
                                            </div>
                                        </div>
                                        <div class="row text-sm">
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">Courier Number</label>
                                                <input type="text" id="txtCourierNumber" class="form-control form-control-sm" placeholder="Search By C Number" />
                                            </div>
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">Customer Type</label>
                                                @Html.DropDownList("ddlCustomerType", (IEnumerable<SelectListItem>)ViewBag.ddlCustomerType, "--Search By CustomerType--", new { @class = "form-control form-control-sm ctrl-changed " })
                                            </div>
                                            
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">TS Work Status</label>
                                                <input type="text" id="txtRepairStatus" class="form-control form-control-sm" placeholder="Search By Ts Repair Status" />
                                            </div>
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">Receive Id</label>
                                                <input type="text" id="txtReceiveId" class="form-control form-control-sm" placeholder="Search By Receive Id" name="recId" />
                                            </div>
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">From Date</label>
                                                <div class="input-group input-group-sm ">
                                                    <input type="text" class="form-control form-control-sm date-datePicker ctrl-changed" id="dptFromDate" />
                                                    <div class="input-group-prepend cursor-pointer remove-date dptFromDate" style="cursor:pointer">
                                                        <span class="input-group-text">&#10008;</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">To Date</label>
                                                <div class="input-group input-group-sm ">
                                                    <input type="text" class="form-control form-control-sm date-datePicker ctrl-changed" id="dptToDate" />
                                                    <div class="input-group-prepend remove-date dptToDate" style="cursor:pointer">
                                                        <span class="input-group-text">&#10008;</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-12 text-sm text-sm" id="dataContainer" style="overflow-y:scroll">
                                                @{Html.RenderAction("GetJobOrderListForCallCenter", new { @flag = "view" });}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade show" id="custom-tabs-two-accessoriesSellsList" role="tabpanel" aria-labelledby="custom-tabs-two-accessoriesSellsList-tab">
                        <div class="row" style="margin-top:-15px">
                            <div class="col-md-12">
                                <div class="card shadow card-gray-dark">
                                    <div class="card-header shadow">
                                        <div class="row">
                                            <div class="col-md-3">
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">
                                                    Invoice List For Accessories Sells
                                                </h5>
                                            </div>
                                            <div class="col-md-3">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card shadow card-navy">
                                    <div class="card-body text-sm">
                                        <div class="row text-sm">
                                           
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">Invoice</label>
                                                <input type="text" id="txtInvoice" class="form-control form-control-sm" placeholder="Search By Invoice" />
                                            </div>
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">Mobile No</label>
                                                <input type="text" id="txtMobileNo2" class="form-control form-control-sm" placeholder="Search By MobileNo" />
                                            </div>
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">From Date</label>
                                                <div class="input-group input-group-sm ">
                                                    <input type="text" class="form-control form-control-sm date-datePicker ctrl-changed" id="dptFromDate2" />
                                                    <div class="input-group-prepend cursor-pointer remove-date dptFromDate2" style="cursor:pointer">
                                                        <span class="input-group-text">&#10008;</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <label class="control-label font-weight-bold">To Date</label>
                                                <div class="input-group input-group-sm ">
                                                    <input type="text" class="form-control form-control-sm date-datePicker ctrl-changed" id="dptToDate2" />
                                                    <div class="input-group-prepend remove-date dptToDate2" style="cursor:pointer">
                                                        <span class="input-group-text">&#10008;</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-12 text-sm text-sm" id="dataContainer3" style="overflow-y:scroll">
                                                @{Html.RenderAction("AccessoriesSells", new { @flag = "sell" });}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="modalJobOrderDetails" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary" style="height:60px">
                @Html.AntiForgeryToken()
                <input type="hidden" id="hdfJobOrderId" />
                <h4 id="modalHeading" class="modal-title">Job Order Details</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" id="dataContainer2">
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalInvoice" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary" style="height:60px">
                <h4 id="modalHeading" class="modal-title"><span id="spanModalHead">Invoice</span></h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="frmInvoice">
                    <div class="form-row">
                        <div class="form-group col-md-2">
                            <label for="txtLabourCharge" class="control-label font-weight-bold">Labour Charge</label>
                            <input type="number" name="labourCharge" value="" id="txtLabourCharge" class="form-control form-control-sm" />
                        </div>
                        <div class="form-group col-md-2">
                            <label for="txtVat" class="control-label font-weight-bold">VAT</label>
                            <input type="number" name="vat" value="" id="txtVat" class="form-control form-control-sm" />
                        </div>
                        <div class="form-group col-md-2">
                            <label for="txtTax" class="control-label font-weight-bold">Tax</label>
                            <input type="number" name="tax" value="" id="txtTax" class="form-control form-control-sm" />
                        </div>
                        <div class="form-group col-md-2">
                            <label for="txtDiscount" class="control-label font-weight-bold">Discount</label>
                            <input type="number" name="discount" value="" id="txtDiscount" class="form-control form-control-sm" />
                        </div>
                        <div class="form-group col-md-3">
                            <label for="txtRemarks" class="control-label font-weight-bold">Remarks</label>
                            <input type="text" name="remarks" value="" id="txtRemarks" class="form-control form-control-sm" />
                        </div>
                        <div class="modal-body" id="dataContainer1">

                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer btn-light">
                <div class="col-md-6">
                    <div id="msg1" class="alert alert-success hide float-left">
                        Data has been saved Successful!
                    </div>
                    <div id="msg2" class="alert alert-danger hide float-left">
                        Data has been failed to save!
                    </div>
                </div>
                <button type="button" class="btn btn-sm btn-danger float-right" data-dismiss="modal" data-target="#"><i class="fas fa-times"></i> Cancel </button>
                <button type="submit" class="btn btn-sm btn-success float-right" id="btnInvoiceSubmit"><i class="far fa-save"></i> <span id="spanSaveText">Save </span> </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalCallCenter" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary" style="height:60px">
                <h4 id="modalHeading" class="modal-title"><span id="spanModalHead">Call Center Approval</span></h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="frmInvoice">
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="ddlCallCenterApproval" class="control-label font-weight-bold">Customer Approval<sup><i class="fas fa-asterisk fa-sm text-red" style="font-size:0.25rem;"></i></sup></label>
                            @Html.DropDownList("ddlCallCenterApproval", (IEnumerable<SelectListItem>)ViewBag.ddlCallCenterApproval, new { @class = "form-control form-control-sm ctrl-changed " })
                            <span class="error hide required-ServiceName font-weight-bold">Input Service!</span>
                            <span class="error hide duplicate-servicesName font-weight-bold">Alrady Service Exist!</span>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="txtCallCenterRemarks" class="control-label font-weight-bold">Remarks</label>
                            <input type="text" name="remarks" value="" id="txtCallCenterRemarks" class="form-control form-control-sm" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer btn-light">
                <div class="col-md-6">
                    <div id="msg1" class="alert alert-success hide float-left">
                        Data has been saved Successful!
                    </div>
                    <div id="msg2" class="alert alert-danger hide float-left">
                        Data has been failed to save!
                    </div>
                </div>
                <button type="button" class="btn btn-sm btn-danger float-right" data-dismiss="modal" data-target="#"><i class="fas fa-times"></i> Cancel </button>
                <button type="submit" class="btn btn-sm btn-success float-right" id="btnCallCenterSubmit"><i class="far fa-save"></i> <span id="spanSaveText">Save </span> </button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        //JobOrder
        var pageNo = 1;
        var ddlModelName = $("#ddlModelName");
        var txtMobileNo = $("#txtMobileNo");
        var ddlStateStatus = $("#ddlStateStatus");
        var txtJobCode = $("#txtJobCode");
        var hdfJobOrderId = $("#hdfJobOrderId");
        var txtIMEINo = $("#txtIMEINo");
        var txtIMEI2No = $("#txtIMEI2No");
        var txtReceiveId = $("#txtReceiveId");
        //JobOrderInvoice
        var txtLabourCharge = $("#txtLabourCharge");
        var txtVat = $("#txtVat");
        var txtTax = $("#txtTax");
        var txtDiscount = $("#txtDiscount");
        var txtRemarks = $("#txtRemarks");
        var dptFromDate = $("#dptFromDate");
        var dptToDate = $("#dptToDate");
        //Accessories Sells Invoice
        var dptFromDate2 = $("#dptFromDate2");
        var dptToDate2 = $("#dptToDate2");
        var txtInvoice = $("#txtInvoice");
        var txtMobileNo2 = $("#txtMobileNo2");
        var ddlCustomerType = $("#ddlCustomerType");
        var ddlJobType = $("#ddlJobType");
        var txtRepairStatus = $("#txtRepairStatus");
        var txtCourierNumber = $("#txtCourierNumber");

        $(document).ready(function () {
            dptFromDate.prop('readonly', true);
            dptToDate.prop('readonly', true);
            dptFromDate2.prop('readonly', true);
            dptToDate2.prop('readonly', true);
            dptFromDate.css("background-color", "#fff");
            dptToDate.css("background-color", "#fff");
            dptFromDate2.css("background-color", "#fff");
            dptToDate2.css("background-color", "#fff");
            $('#dptFromDate').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true,
                autoclose: true,
                showOn: "button",
                buttonImageOnly: true,
            });
            $('#dptToDate').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true,
                autoclose: true
            });
            $('#dptFromDate2').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true,
                autoclose: true,
                showOn: "button",
                buttonImageOnly: true,
            });
            $('#dptToDate2').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true,
                autoclose: true
            });
            if ('@tab' == "AccessoriesSells") {
                $("#custom-tabs-two-accessoriesSellsList-tab").trigger('click');
            }
        })

        $(document).on('click', 'div.remove-date', function () {
            if ($(this).hasClass("dptToDate")) {
                if (dptToDate.val() !== '') {
                    dptToDate.val('');
                    LoadDataTable();
                }
            }
            if ($(this).hasClass("dptFromDate")) {
                if (dptFromDate.val() !== '') {
                    dptFromDate.val('');
                    LoadDataTable();
                }
            }
            if ($(this).hasClass("dptToDate2")) {
                if (dptToDate2.val() !== '') {
                    dptToDate2.val('');
                    LoadDataTableForASells();
                }
            }
            if ($(this).hasClass("dptFromDate2")) {
                if (dptFromDate2.val() !== '') {
                    dptFromDate2.val('');
                    LoadDataTableForASells();
                }
            }

        })

        dptFromDate.change(function () {
            LoadDataTable();
        })
        dptToDate.change(function () {
            LoadDataTable();
        })
        $(document).ready(function () {
            //Initialize Select2 Elements
            $('.select2').select2();

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });
        })

        txtMobileNo.keyup(function () {
            LoadDataTable();
        })
        txtJobCode.keyup(function () {
            LoadDataTable();
        })
        txtRepairStatus.keyup(function () {
            LoadDataTable();
        })
        txtIMEINo.keyup(function () {
            LoadDataTable();
        })
        txtIMEI2No.keyup(function () {
            LoadDataTable();
        })
        txtCourierNumber.keyup(function () {
            LoadDataTable();
        })
        txtReceiveId.keyup(function () {
            LoadDataTable();
        })

        $(document).on('change', '.ctrl-changed', function () {
            LoadDataTable();
        })

        function LoadDataTable() {
            var data = { flag: "search", modelId: TryParseInt(ddlModelName.val(), 0), jobOrderId: 0, mobileNo: $.trim(txtMobileNo.val()), status: ddlStateStatus.val(), jobCode: txtJobCode.val(), iMEI: txtIMEINo.val(), iMEI2: txtIMEI2No.val(), fromDate: dptFromDate.val(), toDate: dptToDate.val(), customerType: ddlCustomerType.val(), jobType: ddlJobType.val(), repairStatus: txtRepairStatus.val().trim(), courierNumber: txtCourierNumber.val(), recId: txtReceiveId.val(), page: pageNo };

            console.log(data);
            $.when(getReqWithData('html', 'GET', '/FrontDesk/GetJobOrderListForCallCenter', data)).then(function (res, status) {
                console.log(status);
                if (status === "success") {
                    $("#dataContainer").fadeOut('500', function () {
                        $("#dataContainer").empty();
                        $("#dataContainer").append(res).fadeIn('500');
                    });
                }
            }).fail(function (error) {
                console.log(error);
            });
        }
        // View Job Order
        $(document).on('click', 'a.data-item-details', function (e) {
            e.preventDefault();
            var id = $(this).attr("data-item-details");
            getJobOrderDetail("Detail",id)
            
        })
        //Ts Work Details
        $(document).on('click', 'a.data-item-tsWork', function (e) {
            e.preventDefault();
            var id = $(this).attr("data-item-tsWork");
            getJobOrderDetail("TSWork", id);
        })

        // assign a T.S.
        $(document).on('click', 'a.data-item-assignTS', function (e) {
            e.preventDefault();
            var id = $(this).attr("data-item-assignTS");
            getJobOrderDetail("Assign", id);
        })

        function getJobOrderDetail(flag, id) {
            hdfJobOrderId.val("0");
            if (TryParseInt(id) > 0) {
                hdfJobOrderId.val(id)
                var data = { flag: flag, modelId: 0, jobOrderId: id, mobileNo: '', status: "", jobCode: "", page: 1 };

                console.log(data);
                $.when(getReqWithData('html', 'GET', '/FrontDesk/GetJobOrderListForCallCenter', data)).then(function (res, status) {
                    console.log(status);
                    if (status === "success") {
                        $("#dataContainer2").empty();
                        $("#dataContainer2").append(res).fadeIn('500');
                        $("#modalJobOrderDetails").modal("show");
                    }
                }).fail(function (error) {
                    console.log(error);
                });
            }
        }

        // edit status
        function validateStatus() {
            var isValid = true;
            $(".error").addClass("hide");
            if ($(".ddlJobOrderType").val() === "") {
                $(".require-type").removeClass("hide");
                isValid = false;
            }
            return isValid;
        }

        $(document).on('click', '.btnDisapproved', function (e) {
            e.preventDefault();
            if (validateStatus()) {

                bootbox.confirm("Are you sure you want to change the status to <b>Disapproved<b>?", function (result) {
                    if (result) {
                        changeJobOrderStatus(jobOrderStatus.customerDisapproved);
                    }
                })
            }
        })

        

        function changeJobOrderStatus(status) {
           // disable(".btnDisapproved");
           // disable(".btnApproved");
            var data = JSON.stringify({ jobOrderId: hdfJobOrderId.val(), status: status, type: $(".ddlJobOrderType").val() });

            $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/FrontDesk/UpdateJobOrderStatus', data, getToken())).then(function (res, status) {
                if (res === true && status === "success") {
                    $("#modalJobOrderDetails").modal("toggle");
                    $('.toastrJobOrderSuccess').trigger('click');
                    LoadDataTable();
                }
                else {
                    $('.toastrJobOrderError').trigger('click');
                }
               // enable(".btnDisapproved");
              //  enable(".btnApproved");
            }).fail(function (error) {
                //enable(".btnDisapproved");
                //enable(".btnApproved");
                console.log(error);
            })

            console.log(data);
           // enable(".btnDisapproved");
           // enable(".btnApproved");
        }

        //btnAssignTS

        function validateTS() {
            var isValid = true;
            $(".error").addClass("hide");
            if ($(".ddlTSName").val() === "") {
                $(".require-ts").removeClass("hide");
                isValid = false;
            }
            return isValid;
        }

        $(document).on('click', '.btnAssignTS', function (e) {
            e.preventDefault();
            if (validateTS()) {
                bootbox.confirm("Are you sure you want to Assign this T.S. to the Job Order?", function (result) {
                    if (result) {
                        assignTStoTheJobOrder();
                    }
                })
            }
        })

        function assignTStoTheJobOrder() {

            disable(".btnAssignTS");
            var data = JSON.stringify({ jobOrderId: hdfJobOrderId.val(), tsId: $(".ddlTSName").val() });

            console.log(data);

            $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/FrontDesk/AssignTSForJobOrder', data, getToken())).then(function (res, status) {
                if (res === true && status === "success") {
                    $("#modalJobOrderDetails").modal("toggle");
                    $('.toastrDefaultSuccess').trigger('click');
                    LoadDataTable();
                }
                else {
                    $('.toastrDefaultError').trigger('click');
                }
                enable(".btnAssignTS");
            }).fail(function (error) {
                enable(".btnAssignTS");
                console.log(error);
            })
            enable(".btnAssignTS");
        }

        $(document).on('click', '.btnDeliveryDone', function (e) {
            e.preventDefault();
            if (validateStatus()) {
                bootbox.confirm("Are you sure you want to change the status to <b>Delivery<b>?", function (result) {
                    if (result) {
                        changeJobOrderStatus(jobOrderStatus.deliveryDone);
                    }
                })
            }
        })
        function changeJobOrderStatus(status) {
            var data = JSON.stringify({ jobOrderId: hdfJobOrderId.val() });
            //return console.log(data);

            $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/ReportSS/GetJobOrderReceiptReport', data, getToken())).then(function (res, status) {
                if (res.IsSuccess === true && status === "success") {
                    //alert("Success");
                    setTimeout(function () {
                                    redirectPage('@Url.Action("GetJobOrders")');
                                }, 1000);
                   // LoadDataTable();

                    var pdfWindow = window.open("", "_blank")
                    console.log(res.File);
                    pdfWindow.document.write("<embed  width='100%' height='100%' src='" + res.File + "'></embed >"); // Preview
                    //download(res.File, res.FileName, "application/pdf"); // Download
                }
            }).fail(function (error) {
                console.log(error);
            })

            console.log(data);
        }

        // Report
        $("#btnReport").click(function (e) {
            e.preventDefault();
            var data = JSON.stringify({ flag: "search", modelId: TryParseInt(ddlModelName.val(), 0), jobOrderId: 0, mobileNo: $.trim(txtMobileNo.val()), status: ddlStateStatus.val(), jobCode: txtJobCode.val(), iMEI: txtIMEINo.val(), iMEI2: txtIMEI2No.val() });
            //return console.log(data)
            $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/ReportSS/GetJobOrderReport', data, getToken())).then(function (res, status) {
                console.log(res.IsSuccess);
                if (res.IsSuccess === true) {
                    var pdfWindow = window.open("", "_blank")
                    console.log(res.File);
                    pdfWindow.document.write("<embed  width='100%' height='100%' src='" + res.File + "'></embed >"); // Preview
                    //download(res.File, res.FileName, "application/pdf"); // Download
                }
            }).fail(function (error) {
                console.log(error);
            })
        })
        $(document).on('click', '.data-report-item', function (e) {
            e.preventDefault();

        })

        function OpenInvoiceModal() {
            $("#modalInvoice").modal("show");
            $(".error").addClass("hide");
        }

        $(document).on('click', '.btnInvoice', function (e) {
            e.preventDefault();
            OpenInvoiceModal();
            var data = {
                jobOrderId: TryParseInt(hdfJobOrderId.val(),0)
            };
            $.when(getReqWithData('html', 'GET', '/FrontDesk/GetPartsUsedStock', data)).then(function (res, status) {
                if (status == "success") {
                    $("#dataContainer1").empty();
                    $("#dataContainer1").append(res);
                }
            }).fail(function (error) {
                console.log(error);
            })
            //clearCtr()
        })


        $("#btnInvoiceSubmit").click(function (e) {
            e.preventDefault();
            $(".error").addClass("hide");
                bootbox.confirm("Are you sure you want to save?", function (result) {
                    if (result) {
                        //disable("#btnSubmit");
                        var totalItemsAmount = 0.00;
                        if ($("#tblPartsUsedQty tbody").length > 0) {
                            totalItemsAmount = TryParseFloat($("#tblPartsUsedQty tfoot tr").children('td').eq(1).html(), 0.00);
                        }
                        var info = {
                            JobOrderId: TryParseInt(hdfJobOrderId.val(), 0),
                            LabourCharge: TryParseFloat(txtLabourCharge.val(), 0.00),
                            VAT: TryParseFloat(txtVat.val(), 0.00),
                            Tax: TryParseFloat(txtTax.val(), 0.00),
                            Discount: TryParseFloat(txtDiscount.val(), 0.00),
                            TotalSPAmount:totalItemsAmount,
                            Remarks: txtRemarks.val(),
                        };
                        //alert("totalItemsAmount="+totalItemsAmount);
                        //return;
                        var details = []; details.length = 0;
                        //empty-row
                        //if (('.empty-row').length > 0) {

                        //}
                        if ($("#tblPartsUsedQty tbody").length > 0) {

                            //
                            if (($("#tblPartsUsedQty tbody tr").length == 1 && !$("#tblPartsUsedQty tbody tr").hasClass('empty-row')) || $("#tblPartsUsedQty tbody tr").length > 1) {
                                $.each($("#tblPartsUsedQty tbody tr"), function (index, item) {
                                    var tds = $(this).children('td');
                                    var partsId = tds.eq('1').html();
                                    var pName = tds.eq('2').html();
                                    var qty = tds.eq('3').html();
                                    var price = tds.eq('4').html();
                                    var total = tds.eq('5').html();

                                    details.push({
                                        InvoiceDetailId: 0,
                                        PartsId: TryParseInt(partsId, 0),
                                        PartsName: pName,
                                        Quantity: TryParseInt(qty, 0),
                                        SellPrice: TryParseFloat(price, 0),
                                        Total: TryParseFloat(total, 0),
                                    })
                                });
                            }

                        }

                        var data = JSON.stringify({ info: info, details: details});
                        console.log("Invoice");
                        console.log(data);
                      // return console.log(data);
                        $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/FrontDesk/SaveInvoiceForJobOrder', data, getToken())).then(function (res, status) {
                            console.log(res);
                            console.log(status);
                           // enable("#btnSubmit");
                            if (res == true) {
                                $('.toastrDefaultSuccess').trigger('click');
                                setTimeout(function () {
                                    redirectPage('@Url.Action("GetJobOrders")');
                                }, 1000);
                            }
                            else {
                                $('.toastrDefaultError').trigger('click');
                            }
                        }).fail(function (error) {
                            consoleLog(error)
                        })
                    }
                });
        });
       
        // Accessories
        dptFromDate2.change(function () {
            LoadDataTableForASells();
        })
        dptToDate2.change(function () {
            LoadDataTableForASells();
        })
        txtInvoice.keyup(function () {
            LoadDataTableForASells();
        })
        txtMobileNo2.keyup(function () {
            LoadDataTableForASells();
        })
        function LoadDataTableForASells() {
            var data = { flag: "sell", invoice: txtInvoice.val().trim(), mobileNo: txtMobileNo2.val().trim(), fromDate: dptFromDate2.val(), toDate: dptToDate2.val(), page: pageNo };

            console.log(data);
            //return console.log(data);
            $.when(getReqWithData('html', 'GET', '/FrontDesk/AccessoriesSells', data)).then(function (res, status) {
                console.log(status);
                if (status === "success") {
                    $("#dataContainer3").fadeOut('500', function () {
                        $("#dataContainer3").empty();
                        $("#dataContainer3").append(res).fadeIn('500');
                    });
                }
            }).fail(function (error) {
                console.log(error);
            })
        }

        ///// Call center
        var ddlCallCenterApproval = $("#ddlCallCenterApproval");
        var txtCallCenterRemarks = $("#txtCallCenterRemarks");

        function OpenCallCenterModal() {
            $("#modalCallCenter").modal("show");
            $(".error").addClass("hide");
        }

        $(document).on('click', '.btnApproval', function (e) {
            e.preventDefault();
            OpenCallCenterModal();
        })
        $("#btnCallCenterSubmit").click(function (e) {
            e.preventDefault();
            $(".error").addClass("hide");
            bootbox.confirm("Are you sure you want to save?", function (result) {
                var data = JSON.stringify ({ jobId: TryParseInt(hdfJobOrderId.val(), 0), approval: ddlCallCenterApproval.val(), remarks: txtCallCenterRemarks.val()
                    });
                    console.log(data);
                    //return console.log(data)
                    $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/FrontDesk/SaveCallCenterApproval', data, getToken())).then(function (res, status) {
                        console.log(res);
                        console.log(status);
                        // enable("#btnSubmit");
                        if (res == true) {
                            $('.toastrDefaultSuccess').trigger('click');
                            setTimeout(function () {
                                redirectPage('@Url.Action("GetJobOrderListForCallCenter")');
                            }, 1000);
                        }
                        else {
                            $('.toastrDefaultError').trigger('click');
                        }
                    }).fail(function (error) {
                        consoleLog(error)
                    })
            })
        });

        // Pagination
        $(document).on('click', 'a.page-link', function (e) {
            e.preventDefault();
            if (!$(this).hasClass('current-page')) {
                if ($(this).parent().parents('div').hasClass('joborder')) {
                    pageNo = $(this).attr('data-page-no');
                    LoadDataTable();
                }
                else if ($(this).parent().parents('div').hasClass('sell')) {
                    pageNo = $(this).attr('data-page-no');
                    LoadDataTableForASells();
                }
            }
        })


        function redirectPage(page) {
            window.location.replace(page);
        }
    </script>
}

