
@{
    ViewBag.Title = "Stock Transfer M-M";
}
<div class="row">
    <div class="col-md-12 text-center">
        <div class="card card-gray shadow">
            <div class="card-header">
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-4 text-left">
                            <a href="/Configuration/TransferInfoList?tab=StockTransferMM" class="btn btn-sm btn-outline-primary" title="Back To List"><i class="fas fa-arrow-alt-circle-left"></i></a>
                        </div>
                        <div class="col-md-4 text-center">
                            <h4><b>Stock Transfer</b></h4>
                        </div>
                        <div class="col-md-4">
                            <button class="btn btn-outline-danger btn-sm float-lg-right" id="btnReset" title="RESET UI"><i class="fas fa-sync-alt"></i> </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card shadow">
            <div class="card-header">
                @Html.AntiForgeryToken()
                <div class="row text-sm">
                    <div class="col-md-2">
                        <label for="ddlModels" class="control-label font-weight-bold">Model From<sup><i class="fas fa-asterisk fa-sm text-red" style="font-size:0.25rem;"></i></sup></label>
                        @Html.DropDownList("ddlModels", (IEnumerable<SelectListItem>)ViewBag.ddlModels, "--Select Model--", new { @class = "form-control form-control-sm select2" })
                        <span class="error hide require-model font-weight-bold">Model is required !</span>
                    </div>
                    <div class="col-md-2">
                        <label for="ddlModelsTo" class="control-label font-weight-bold">Model To<sup><i class="fas fa-asterisk fa-sm text-red" style="font-size:0.25rem;"></i></sup></label>
                        @Html.DropDownList("ddlModelsTo", (IEnumerable<SelectListItem>)ViewBag.ddlModels, "--Select Model--", new { @class = "form-control form-control-sm select2" })
                        <span class="error hide require-modelTo font-weight-bold">Model is required !</span>
                        <span class="error hide require-same-modelTo font-weight-bold">Model can not be same!</span>
                    </div>
                    <div class="col-md-2 hide">
                        <label for="ddlServicesWarehouse" class="control-label font-weight-bold">Services Warehouse<sup><i class="fas fa-asterisk fa-sm text-red" style="font-size:0.25rem;"></i></sup></label>
                        @Html.DropDownList("ddlServicesWarehouse", (IEnumerable<SelectListItem>)ViewBag.ddlServicesWarehouse, new { @class = "form-control form-control-sm" })
                        <span class="error hide require-warehouse font-weight-bold">S.Warehouse is required !</span>
                    </div>
                    @*<div class="col-md-2">
                            <label for="ddlBranchName" class="control-label font-weight-bold">Branch Name<sup><i class="fas fa-asterisk fa-sm text-red" style="font-size:0.25rem;"></i></sup></label>
                            @Html.DropDownList("ddlBranchName", (IEnumerable<SelectListItem>)ViewBag.ddlBranchName, "--Select Branch--", new { @class = "form-control form-control-sm select2" })
                            <span class="error hide require-branch font-weight-bold">Branch is required !</span>
                        </div>*@
                    <div class="col-md-2">
                        <label for="ddlMobileParts" class="control-label font-weight-bold">Parts Name<sup><i class="fas fa-asterisk fa-sm text-red" style="font-size:0.25rem;"></i></sup></label>
                        @Html.DropDownList("ddlMobileParts", (IEnumerable<SelectListItem>)ViewBag.ddlMobileParts, "--Select MobileParts--", new { @class = "form-control form-control-sm select2" })
                        <span class="error hide require-parts font-weight-bold">Parts is required !</span>
                        <span class="error hide duplicate-parts font-weight-bold">This parts is already exist !</span>
                        <span class="error hide duplicate-goodparts font-weight-bold">This parts is Not Available !</span>
                    </div>
                    <div class="col-md-2">
                        <label for="ddlCostPrice" class="control-label font-weight-bold">Cost Price<sup><i class="fas fa-asterisk fa-sm text-red" style="font-size:0.25rem;"></i></sup></label>
                        @Html.DropDownList("ddlCostPrice", (IEnumerable<SelectListItem>)ViewBag.ddlCostPrice, "--Select CostPrice--", new { @class = "form-control form-control-sm select2" })
                        <span class="error hide require-costPrice font-weight-bold">CostPrice is required !</span>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group col-md-12">
                            <label for="txtSellPrice" class="control-label font-weight-bold">Sell Price<sup><i class="fas fa-asterisk fa-sm text-red" style="font-size:0.25rem;"></i></sup></label>
                            <input type="text" name="txtSellPrice" value="" id="txtSellPrice" class="form-control form-control-sm"/>
                            <span class="error hide require-sellPrice font-weight-bold">SellPrice is required !</span>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label for="txtStockInQty" class="control-label font-weight-bold">Transfer Qty.<sup><i class="fas fa-asterisk fa-sm text-red" style="font-size:0.25rem;"></i></sup><span id="stockQty" class="font-weight-bold mt-2" style="color:red"></span></label>
                        <div class="input-group">
                            <div class="col-sm-8">
                                <input type="number" placeholder="Qty" name="quantity" id="txtStockInQty" class="form-control form-control-sm" />
                            </div>
                            <span id="unitName" class="font-weight-bold mt-3" style="color:darkblue"> </span>
                        </div>
                        <span class="error hide required-qty font-weight-bold">Quantity is required!</span>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group col-md-12">
                            <label for="txtRemarks" class="control-label font-weight-bold">Remarks</label>
                            <input type="text" name="remarks" value="" id="txtRemarks" class="form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label for="" class="control-label font-weight-bold" style="visibility:hidden"> Add To List</label>
                        <div class="clearfix">
                            <button type="submit" class="btn btn-sm btn-outline-warning float-left mr-1" id="btnAddToList" title="Save"><i class="fas fa-plus"></i> &nbsp; ADD TO LIST </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card shadow">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12 text-sm">
                        <table class="table table-bordered table-sm table-striped table-responsive-lg" id="tblStockTransferM-M">
                            <thead>
                                <tr>
                                    <th colspan="9">
                                        <button class="btn btn-outline-success btn-sm float-lg-right" id="btnSubmit">SAVE <i class="fas fa-paper-plane"></i> </button>
                                    </th>
                                </tr>
                                <tr class="btn-dark text-center">
                                    <th>#SL</th>
                                    <th class="hide"></th>
                                    <th>Model</th>
                                    <th class="hide"></th>
                                    <th>Ex-Change M</th>
                                    <th class="hide"></th>
                                    <th>MobilePart Name</th>
                                    <th>CostPrice</th>
                                    <th>SellPrice</th>
                                    <th>Transfer Qty.</th>
                                    <th>Remarks</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        var ddlModels = $("#ddlModels");
        var ddlServicesWarehouse = $("#ddlServicesWarehouse");
        var ddlModelsTo = $("#ddlModelsTo");
        var ddlMobileParts = $("#ddlMobileParts");
        var txtStockInQty = $("#txtStockInQty");
        var ddlCostPrice = $("#ddlCostPrice");
        var txtRemarks = $("#txtRemarks");
        var stockQty = $("#stockQty");
        var txtSellPrice = $("#txtSellPrice");
        var txtRemarks = $("#txtRemarks");
        //var ddlSellPrice = $("#ddlSellPrice");

        $(document).ready(function () {
            $('.select2').select2();
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });
        })

        $("#btnReset").click(function (e) {
            e.preventDefault();
            //clearDropdown("ddlMobileParts");
            ddlMobileParts.val('');
            ddlMobileParts.trigger("change");
            enable("#ddlServicesWarehouse");
            //ddlServicesWarehouse.val("");
            //ddlServicesWarehouse.trigger("change");
            enable("#ddlModelsTo");
            ddlModelsTo.val("");
            ddlModelsTo.trigger("change");
            ddlModels.val("");
            ddlModels.trigger("change");
            $("#tblStockTransferM-M tbody").empty();
            txtStockInQty.val('0');
            ddlCostPrice.val('');
            ddlCostPrice.trigger("change");
            txtSellPrice.val('0');
            stockQty.val('0');
            txtRemarks.val('');
        })

        //casced dropdown load for CostPrice
        ddlMobileParts.change(function () {
            clearDropdown("ddlCostPrice");
            if (ddlMobileParts.val() != "") {
                LoadDropDown('/Common2/GetCostPriceForDDL', 'POST', ddlCostPrice, JSON.stringify({ partsId: ddlMobileParts.val(), modelId: ddlModels.val() }));
            }
        })

        //Sell text
        ddlCostPrice.change(function () {
            $("#txtSellPrice").val('');
            if (ddlMobileParts.val() != "", ddlModelsTo.val() != "") {
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Common2/GetLatestSellPriceByModelAndParts', JSON.stringify({ partsId: ddlMobileParts.val(), modelId: TryParseInt(ddlModelsTo.val(),0) }), getToken())).then(function (res, status) {
                    //console.log(res);
                    //console.log(status);
                    if (status == "success") {
                        $("#txtSellPrice").val(res);
                    }
                }).fail(function (error) {
                    consoleLog(error);
                })
            }

        })
        //Stock text
        ddlCostPrice.change(function () {
            $("#stockQty").text('');
            if (ddlServicesWarehouse.val() != "", ddlMobileParts.val() != "", ddlCostPrice.val() != "", ddlModels.val() != "") {
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Common2/GetPartsStockByPrice', JSON.stringify({ warehouseId: ddlServicesWarehouse.val(), partsId: ddlMobileParts.val(), cprice: TryParseFloat(ddlCostPrice.val(), 0), model: TryParseInt(ddlModels.val()) }), getToken())).then(function (res, status) {
                    console.log(res);
                    console.log(status);
                    if (status == "success") {
                        $("#stockQty").text('(' + res + ')');
                    }
                }).fail(function (error) {
                    consoleLog(error);
                })
            }

        })

        function validateInput() {
            $('.error').addClass('hide');
            var isValid = true;
            //var count = $("#tblStockTransferM-M tbody tr").length;
            //if (count > 0) {
            //    $.each($("#tblStockTransferM-M tbody tr"), function (index, item) {
            //        var partsId = $(this).children('td').eq(1).html();
            //        if (partsId == ddlMobileParts.val()) {
            //            isValid = false;
            //            $(".duplicate-parts").removeClass('hide');
            //        }
            //    })
            //}
            if (TryParseInt(ddlServicesWarehouse.val(), 0) <= 0) {
                isValid = false;
                $(".require-warehouse").removeClass("hide");
            }
            if (TryParseInt(ddlModels.val(), 0) <= 0) {
                isValid = false;
                $(".require-model").removeClass("hide");
            }
            if (TryParseInt(ddlModelsTo.val(), 0) <= 0) {
                isValid = false;
                $(".require-modelTo").removeClass("hide");
            }
            if (TryParseInt(ddlMobileParts.val(), 0) <= 0) {
                isValid = false;
                $(".require-parts").removeClass("hide");
            }
            if (TryParseInt(ddlCostPrice.val(), 0) <= 0) {
                isValid = false;
                $(".require-costPrice").removeClass("hide");
            }
            if (TryParseInt(txtSellPrice.val(), 0) <= 0) {
                isValid = false;
                $(".require-sellPrice").removeClass("hide");
            }
            if (txtStockInQty.val() == "" || TryParseInt(txtStockInQty.val(), 0) <= 0) {
                isValid = false;
                $(".required-qty").removeClass("hide");
            }
            if (TryParseInt(ddlModels.val(), 0) > 0 && TryParseInt(ddlModelsTo.val(), 0) > 0 && (TryParseInt(ddlModels.val(), 0) == TryParseInt(ddlModelsTo.val(), 0))) {
                 isValid = false;
                 $(".require-same-modelTo").removeClass("hide");
            }
            if (txtStockInQty.val() > 0) {
                if (ajaxBooleanChecker(JSON.stringify({ modelId: TryParseInt(ddlModels.val(), 0), partsId: TryParseInt(ddlMobileParts.val(), 0), qty: TryParseInt(txtStockInQty.val(), 0), costPrice: TryParseInt(ddlCostPrice.val(),0) }), '/Common2/PartsAvailableQtyWithCostPrice', getToken()) == true) {
                    isValid = false;
                    $(".duplicate-goodparts").removeClass("hide");
                }
            }

            return isValid;
        }

        $("#btnAddToList").click(function (e) {
            e.preventDefault();
            if (validateInput() == true) {
                disable("#ddlServicesWarehouse");
                //disable("#ddlModelsTo");
                //disable("#ddlModels");
                var sl = $("#tblStockTransferM-M tbody tr").length;
                var td1 = "<td class='text-center text-bold'>" + (sl + 1) + "</td>"
                var td2 = "<td class='hide'>" + ddlModels.val() + "</td>";
                var td3 = "<td>" + $("#ddlModels option:selected").text() + "</td>";
                var td4 = "<td class='hide'>" + ddlModelsTo.val() + "</td>";
                var td5 = "<td>" + $("#ddlModelsTo option:selected").text() + "</td>";
                var td6 = "<td class='hide'>" + ddlMobileParts.val() + "</td>";
                var td7 = "<td>" + $("#ddlMobileParts option:selected").text() + "</td>";
                var td8 = "<td class='text-center'>" + ddlCostPrice.val() + "</td>";
                //var td5 = "<td class='text-center'>" + $("#ddlCostPrice option:selected").text() + "</td>";
                var td9 = "<td class='text-center'>" + txtSellPrice.val() + "</td>";
                var td10 = "<td class='text-center'>" + txtStockInQty.val() + "</td>";
                var td11 = "<td>" + txtRemarks.val() + "</td>";
                var td12 = "<td class='text-center'><a href='#' class='btn btn-sm btn-danger data-onfly-del'><i class='far fa-trash-alt'></i> Delete</a></td>";

                var tr = "<tr>" + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9 + td10 + td11 + td12 + "</tr>";
                if ($("#tblStockTransferM-M tbody tr").length == 0) {
                    $("#tblStockTransferM-M tbody").append(tr);
                }
                else {
                    $("#tblStockTransferM-M tbody tr").eq(0).before(tr);
                }
                clearCtrl();
            }
        })
        function clearCtrl() {
            ddlMobileParts.val('');
            ddlMobileParts.trigger('change')
            ddlCostPrice.val('');
            ddlCostPrice.trigger('change')
            txtSellPrice.val('');
            txtStockInQty.val('');
            txtRemarks.val('');
            stockQty.val('');
        }

        $(document).on("click", "a.data-onfly-del", function (e) {
            e.preventDefault();
            var index = $(this).parent().parents('tbody tr').index();
            if (bootbox.confirm("Are you sure you want to delete?", function (result) {
                if (result === true) {
                    removeTableRow("#tblStockTransferM-M tbody", index);
                    fnFixTheTbodyRowSerialInDecsOrder("#tblStockTransferM-M", index);
                };
            }));
        })

        $("#btnSubmit").click(function (e) {
            e.preventDefault();
            if ($("#tblStockTransferM-M tbody tr").length > 0) {
                $(".error").addClass("hide");
                bootbox.confirm("Are you sure you want to save?", function (result) {
                    if (result) {
                        disable("#btnSubmit");

                        var details = []; details.length = 0;
                        $.each($("#tblStockTransferM-M tbody tr"), function (index, item) {
                            var tds = $(this).children('td');
                            var fromM = tds.eq('1').html();
                            var toM = tds.eq('3').html();
                            var partsId = tds.eq('5').html();
                            var cprice = tds.eq('7').html();
                            var sprice = tds.eq('8').html();
                            var qty = tds.eq('9').html();
                            var rmk = tds.eq('10').html();

                            details.push({
                                DescriptionId: TryParseInt(fromM, 0),
                                ToDescriptionId: TryParseInt(toM,0),
                                PartsId: TryParseInt(partsId, 0),
                                CostPrice: TryParseFloat(cprice, 0),
                                SellPrice: TryParseFloat(sprice, 0),
                                Quantity: TryParseInt(qty, 0),
                                Remarks: rmk
                            })
                        });

                        var data = JSON.stringify({ models: details });
                        //return console.log(data);
                        $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Configuration/SaveStockTransferModelToModel', data, getToken())).then(function (res, status) {
                            enable("#btnSubmit");
                            if (res == true) {
                                $('.toastrDefaultSuccess').trigger('click');

                                setTimeout(function () {
                                    redirectPage('@Url.Action("TransferInfoList",new { tab = "StockTransferMM" })');
                                }, 1000);
                            }
                            else {
                                $('.toastrDefaultError').trigger('click');
                            }
                        }).fail(function (error) {
                            consoleLog(error)
                        })
                        enable("#btnSubmit");
                    }
                });
            }
        });

        function redirectPage(page) {
            window.location.replace(page);
        }
    </script>
}

